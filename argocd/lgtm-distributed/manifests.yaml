---
# Source: lgtm-distributed/charts/mimir/templates/alertmanager/alertmanager-pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: release-name-mimir-alertmanager
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: alertmanager
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  namespace: "default"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: alertmanager
  maxUnavailable: 1
---
# Source: lgtm-distributed/charts/mimir/templates/compactor/compactor-pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: release-name-mimir-compactor
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: compactor
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  namespace: "default"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: compactor
  maxUnavailable: 1
---
# Source: lgtm-distributed/charts/mimir/templates/distributor/distributor-pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: release-name-mimir-distributor
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: distributor
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  namespace: "default"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: distributor
  maxUnavailable: 1
---
# Source: lgtm-distributed/charts/mimir/templates/ingester/ingester-pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: release-name-mimir-ingester
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: ingester
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  namespace: "default"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: ingester
  maxUnavailable: 1
---
# Source: lgtm-distributed/charts/mimir/templates/nginx/nginx-pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: release-name-mimir-nginx
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: nginx
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  namespace: "default"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: nginx
  maxUnavailable: 1
---
# Source: lgtm-distributed/charts/mimir/templates/overrides-exporter/overrides-exporter-pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: release-name-mimir-overrides-exporter
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: overrides-exporter
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  namespace: "default"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: overrides-exporter
  maxUnavailable: 1
---
# Source: lgtm-distributed/charts/mimir/templates/querier/querier-pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: release-name-mimir-querier
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: querier
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  namespace: "default"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: querier
  maxUnavailable: 1
---
# Source: lgtm-distributed/charts/mimir/templates/query-frontend/query-frontend-pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: release-name-mimir-query-frontend
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  namespace: "default"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: query-frontend
  maxUnavailable: 1
---
# Source: lgtm-distributed/charts/mimir/templates/query-scheduler/query-scheduler-pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: release-name-mimir-query-scheduler
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: query-scheduler
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  namespace: "default"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: query-scheduler
  maxUnavailable: 1
---
# Source: lgtm-distributed/charts/mimir/templates/ruler/ruler-pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: release-name-mimir-ruler
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: ruler
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  namespace: "default"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: ruler
  maxUnavailable: 1
---
# Source: lgtm-distributed/charts/mimir/templates/store-gateway/store-gateway-pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: release-name-mimir-store-gateway
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: store-gateway
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  namespace: "default"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: store-gateway
  maxUnavailable: 1
---
# Source: lgtm-distributed/charts/grafana/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: false
metadata:
  labels:
    helm.sh/chart: grafana-7.3.12
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "10.4.3"
    app.kubernetes.io/managed-by: Helm
  name: release-name-grafana
  namespace: default
---
# Source: lgtm-distributed/charts/loki/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-loki
  namespace: default
  labels:
    helm.sh/chart: loki-0.79.0
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.9.6"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: lgtm-distributed/charts/mimir/charts/minio/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "minio-sa"
---
# Source: lgtm-distributed/charts/mimir/charts/rollout_operator/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-rollout-operator
  labels:
    helm.sh/chart: rollout-operator-0.14.0
    app.kubernetes.io/name: rollout-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.13.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: lgtm-distributed/charts/mimir/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-mimir
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
  namespace: "default"
---
# Source: lgtm-distributed/charts/tempo/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-tempo
  namespace: default
  labels:
    helm.sh/chart: tempo-1.13.2
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.5.0"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: false
---
# Source: lgtm-distributed/charts/grafana/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-grafana
  namespace: default
  labels:
    helm.sh/chart: grafana-7.3.12
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "10.4.3"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  
  admin-user: "YWRtaW4="
  admin-password: "dVJGZUhoVG5IcTZyNXVNQ3hScUN2dVdWSlN5dmZZWVRrM0JTOXVXMw=="
  ldap-toml: ""
---
# Source: lgtm-distributed/charts/mimir/charts/minio/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-minio
  labels:
    app: minio
    chart: minio-5.0.14
    release: release-name
    heritage: Helm
type: Opaque
data:
  rootUser: "Z3JhZmFuYS1taW1pcg=="
  rootPassword: "c3VwZXJzZWNyZXQ="
---
# Source: lgtm-distributed/charts/grafana/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-grafana
  namespace: default
  labels:
    helm.sh/chart: grafana-7.3.12
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "10.4.3"
    app.kubernetes.io/managed-by: Helm
data:
  
  grafana.ini: |
    [analytics]
    check_for_updates = true
    [grafana_net]
    url = https://grafana.net
    [log]
    mode = console
    [paths]
    data = /var/lib/grafana/
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
    [server]
    domain = ''
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - isDefault: false
      name: Loki
      type: loki
      uid: loki
      url: http://release-name-loki-gateway
    - isDefault: true
      name: Mimir
      type: prometheus
      uid: prom
      url: http://release-name-mimir-nginx/prometheus
    - isDefault: false
      jsonData:
        lokiSearch:
          datasourceUid: loki
        serviceMap:
          datasourceUid: prom
        tracesToLogsV2:
          datasourceUid: loki
        tracesToMetrics:
          datasourceUid: prom
      name: Tempo
      type: tempo
      uid: tempo
      url: http://release-name-tempo-query-frontend:3100
---
# Source: lgtm-distributed/charts/loki/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-loki
  namespace: default
  labels:
    helm.sh/chart: loki-0.79.0
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.9.6"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    auth_enabled: false
    chunk_store_config:
      max_look_back_period: 0s
    common:
      compactor_address: http://release-name-loki-compactor:3100
    compactor:
      shared_store: filesystem
      working_directory: /var/loki/compactor
    distributor:
      ring:
        kvstore:
          store: memberlist
    frontend:
      compress_responses: true
      log_queries_longer_than: 5s
      tail_proxy_url: http://release-name-loki-querier:3100
    frontend_worker:
      frontend_address: release-name-loki-query-frontend-headless:9095
    ingester:
      chunk_block_size: 262144
      chunk_encoding: snappy
      chunk_idle_period: 30m
      chunk_retain_period: 1m
      lifecycler:
        ring:
          kvstore:
            store: memberlist
          replication_factor: 1
      max_transfer_retries: 0
      wal:
        dir: /var/loki/wal
    ingester_client:
      grpc_client_config:
        grpc_compression: gzip
    limits_config:
      enforce_metric_name: false
      max_cache_freshness_per_query: 10m
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      split_queries_by_interval: 15m
    memberlist:
      join_members:
      - release-name-loki-memberlist
    query_range:
      align_queries_with_step: true
      cache_results: true
      max_retries: 5
      results_cache:
        cache:
          embedded_cache:
            enabled: true
            ttl: 24h
    ruler:
      alertmanager_url: https://alertmanager.xx
      external_url: https://alertmanager.xx
      ring:
        kvstore:
          store: memberlist
      rule_path: /tmp/loki/scratch
      storage:
        local:
          directory: /etc/loki/rules
        type: local
    runtime_config:
      file: /var/loki-runtime/runtime.yaml
    schema_config:
      configs:
      - from: "2020-09-07"
        index:
          period: 24h
          prefix: loki_index_
        object_store: filesystem
        schema: v11
        store: boltdb-shipper
    server:
      http_listen_port: 3100
    storage_config:
      boltdb_shipper:
        active_index_directory: /var/loki/index
        cache_location: /var/loki/cache
        cache_ttl: 168h
        shared_store: filesystem
      filesystem:
        directory: /var/loki/chunks
    table_manager:
      retention_deletes_enabled: false
      retention_period: 0s
---
# Source: lgtm-distributed/charts/loki/templates/gateway/configmap-gateway.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-loki-gateway
  labels:
    helm.sh/chart: loki-0.79.0
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.9.6"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: gateway
data:
  nginx.conf: |
    worker_processes  5;  ## Default: 1
    error_log  /dev/stderr;
    pid        /tmp/nginx.pid;
    worker_rlimit_nofile 8192;
    
    events {
      worker_connections  4096;  ## Default: 1024
    }
    
    http {
      client_body_temp_path /tmp/client_temp;
      proxy_temp_path       /tmp/proxy_temp_path;
      fastcgi_temp_path     /tmp/fastcgi_temp;
      uwsgi_temp_path       /tmp/uwsgi_temp;
      scgi_temp_path        /tmp/scgi_temp;
    
      proxy_http_version    1.1;
    
      default_type application/octet-stream;
      log_format   main '$remote_addr - $remote_user [$time_local]  $status '
            '"$request" $body_bytes_sent "$http_referer" '
            '"$http_user_agent" "$http_x_forwarded_for"';
      access_log   /dev/stderr  main;
    
      sendfile     on;
      tcp_nopush   on;
      resolver rke2-coredns-rke2-coredns.kube-system.svc.cluster.local;
    
      server {
        listen             8080;
    
        location = / {
          return 200 'OK';
          auth_basic off;
          access_log off;
        }
    
        location = /api/prom/push {
          set $api_prom_push_backend http://release-name-loki-distributor.default.svc.cluster.local;
          proxy_pass       $api_prom_push_backend:3100$request_uri;
          proxy_http_version 1.1;
        }
    
        location = /api/prom/tail {
          set $api_prom_tail_backend http://release-name-loki-querier.default.svc.cluster.local;
          proxy_pass       $api_prom_tail_backend:3100$request_uri;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_http_version 1.1;
        }
    
        # Ruler
        location ~ /prometheus/api/v1/alerts.* {
          proxy_pass       http://release-name-loki-ruler.default.svc.cluster.local:3100$request_uri;
        }
        location ~ /prometheus/api/v1/rules.* {
          proxy_pass       http://release-name-loki-ruler.default.svc.cluster.local:3100$request_uri;
        }
        location ~ /api/prom/rules.* {
          proxy_pass       http://release-name-loki-ruler.default.svc.cluster.local:3100$request_uri;
        }
        location ~ /api/prom/alerts.* {
          proxy_pass       http://release-name-loki-ruler.default.svc.cluster.local:3100$request_uri;
        }
    
        location ~ /api/prom/.* {
          set $api_prom_backend http://release-name-loki-query-frontend-headless.default.svc.cluster.local;
          proxy_pass       $api_prom_backend:3100$request_uri;
          proxy_http_version 1.1;
        }
    
        location = /loki/api/v1/push {
          set $loki_api_v1_push_backend http://release-name-loki-distributor.default.svc.cluster.local;
          proxy_pass       $loki_api_v1_push_backend:3100$request_uri;
          proxy_http_version 1.1;
        }
    
        location = /loki/api/v1/tail {
          set $loki_api_v1_tail_backend http://release-name-loki-querier.default.svc.cluster.local;
          proxy_pass       $loki_api_v1_tail_backend:3100$request_uri;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_http_version 1.1;
        }
    
        location ~ /loki/api/.* {
          set $loki_api_backend http://release-name-loki-query-frontend-headless.default.svc.cluster.local;
          proxy_pass       $loki_api_backend:3100$request_uri;
          proxy_http_version 1.1;
        }
      }
    }
---
# Source: lgtm-distributed/charts/loki/templates/runtime-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-loki-runtime
  namespace: default
  labels:
    helm.sh/chart: loki-0.79.0
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.9.6"
    app.kubernetes.io/managed-by: Helm
data:
  runtime.yaml: |
    
    {}
---
# Source: lgtm-distributed/charts/mimir/charts/minio/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-minio
  labels:
    app: minio
    chart: minio-5.0.14
    release: release-name
    heritage: Helm
data:
  initialize: |-
    #!/bin/sh
    set -e ; # Have script exit in the event of a failed command.
    MC_CONFIG_DIR="/tmp/minio/mc/"
    MC="/usr/bin/mc --insecure --config-dir ${MC_CONFIG_DIR}"
    
    # connectToMinio
    # Use a check-sleep-check loop to wait for MinIO service to be available
    connectToMinio() {
      SCHEME=$1
      ATTEMPTS=0 ; LIMIT=29 ; # Allow 30 attempts
      set -e ; # fail if we can't read the keys.
      ACCESS=$(cat /config/rootUser) ; SECRET=$(cat /config/rootPassword) ;
      set +e ; # The connections to minio are allowed to fail.
      echo "Connecting to MinIO server: $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT" ;
      MC_COMMAND="${MC} alias set myminio $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT $ACCESS $SECRET" ;
      $MC_COMMAND ;
      STATUS=$? ;
      until [ $STATUS = 0 ]
      do
        ATTEMPTS=`expr $ATTEMPTS + 1` ;
        echo \"Failed attempts: $ATTEMPTS\" ;
        if [ $ATTEMPTS -gt $LIMIT ]; then
          exit 1 ;
        fi ;
        sleep 2 ; # 1 second intervals between attempts
        $MC_COMMAND ;
        STATUS=$? ;
      done ;
      set -e ; # reset `e` as active
      return 0
    }
    
    # checkBucketExists ($bucket)
    # Check if the bucket exists, by using the exit code of `mc ls`
    checkBucketExists() {
      BUCKET=$1
      CMD=$(${MC} stat myminio/$BUCKET > /dev/null 2>&1)
      return $?
    }
    
    # createBucket ($bucket, $policy, $purge)
    # Ensure bucket exists, purging if asked to
    createBucket() {
      BUCKET=$1
      POLICY=$2
      PURGE=$3
      VERSIONING=$4
      OBJECTLOCKING=$5
    
      # Purge the bucket, if set & exists
      # Since PURGE is user input, check explicitly for `true`
      if [ $PURGE = true ]; then
        if checkBucketExists $BUCKET ; then
          echo "Purging bucket '$BUCKET'."
          set +e ; # don't exit if this fails
          ${MC} rm -r --force myminio/$BUCKET
          set -e ; # reset `e` as active
        else
          echo "Bucket '$BUCKET' does not exist, skipping purge."
        fi
      fi
    
    # Create the bucket if it does not exist and set objectlocking if enabled (NOTE: versioning will be not changed if OBJECTLOCKING is set because it enables versioning to the Buckets created)
    if ! checkBucketExists $BUCKET ; then
        if [ ! -z $OBJECTLOCKING ] ; then
          if [ $OBJECTLOCKING = true ] ; then
              echo "Creating bucket with OBJECTLOCKING '$BUCKET'"
              ${MC} mb --with-lock myminio/$BUCKET
          elif [ $OBJECTLOCKING = false ] ; then
                echo "Creating bucket '$BUCKET'"
                ${MC} mb myminio/$BUCKET
          fi
      elif [ -z $OBJECTLOCKING ] ; then
            echo "Creating bucket '$BUCKET'"
            ${MC} mb myminio/$BUCKET
      else
        echo "Bucket '$BUCKET' already exists."  
      fi
      fi
    
    
      # set versioning for bucket if objectlocking is disabled or not set
      if [ $OBJECTLOCKING = false ] ; then
      if [ ! -z $VERSIONING ] ; then
        if [ $VERSIONING = true ] ; then
            echo "Enabling versioning for '$BUCKET'"
            ${MC} version enable myminio/$BUCKET
        elif [ $VERSIONING = false ] ; then
            echo "Suspending versioning for '$BUCKET'"
            ${MC} version suspend myminio/$BUCKET
        fi
        fi
      else
          echo "Bucket '$BUCKET' versioning unchanged."
      fi
    
    
      # At this point, the bucket should exist, skip checking for existence
      # Set policy on the bucket
      echo "Setting policy of bucket '$BUCKET' to '$POLICY'."
      ${MC} anonymous set $POLICY myminio/$BUCKET
    }
    
    # Try connecting to MinIO instance
    scheme=http
    connectToMinio $scheme
    
    
    
    # Create the buckets
    createBucket mimir-tsdb "none" false false false
    createBucket mimir-ruler "none" false false false
    createBucket enterprise-metrics-tsdb "none" false false false
    createBucket enterprise-metrics-admin "none" false false false
    createBucket enterprise-metrics-ruler "none" false false false
    
  add-user: |-
    #!/bin/sh
    set -e ; # Have script exit in the event of a failed command.
    MC_CONFIG_DIR="/tmp/minio/mc/"
    MC="/usr/bin/mc --insecure --config-dir ${MC_CONFIG_DIR}"
    
    # AccessKey and secretkey credentials file are added to prevent shell execution errors caused by special characters.
    # Special characters for example : ',",<,>,{,}
    MINIO_ACCESSKEY_SECRETKEY_TMP="/tmp/accessKey_and_secretKey_tmp"
    
    # connectToMinio
    # Use a check-sleep-check loop to wait for MinIO service to be available
    connectToMinio() {
      SCHEME=$1
      ATTEMPTS=0 ; LIMIT=29 ; # Allow 30 attempts
      set -e ; # fail if we can't read the keys.
      ACCESS=$(cat /config/rootUser) ; SECRET=$(cat /config/rootPassword) ;
      set +e ; # The connections to minio are allowed to fail.
      echo "Connecting to MinIO server: $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT" ;
      MC_COMMAND="${MC} alias set myminio $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT $ACCESS $SECRET" ;
      $MC_COMMAND ;
      STATUS=$? ;
      until [ $STATUS = 0 ]
      do
        ATTEMPTS=`expr $ATTEMPTS + 1` ;
        echo \"Failed attempts: $ATTEMPTS\" ;
        if [ $ATTEMPTS -gt $LIMIT ]; then
          exit 1 ;
        fi ;
        sleep 2 ; # 1 second intervals between attempts
        $MC_COMMAND ;
        STATUS=$? ;
      done ;
      set -e ; # reset `e` as active
      return 0
    }
    
    # checkUserExists ()
    # Check if the user exists, by using the exit code of `mc admin user info`
    checkUserExists() {
      CMD=$(${MC} admin user info myminio $(head -1 $MINIO_ACCESSKEY_SECRETKEY_TMP) > /dev/null 2>&1)
      return $?
    }
    
    # createUser ($policy)
    createUser() {
      POLICY=$1
      #check accessKey_and_secretKey_tmp file
      if [[ ! -f $MINIO_ACCESSKEY_SECRETKEY_TMP ]];then
        echo "credentials file does not exist"
        return 1
      fi
      if [[ $(cat $MINIO_ACCESSKEY_SECRETKEY_TMP|wc -l) -ne 2 ]];then
        echo "credentials file is invalid"
        rm -f $MINIO_ACCESSKEY_SECRETKEY_TMP
        return 1
      fi
      USER=$(head -1 $MINIO_ACCESSKEY_SECRETKEY_TMP)
      # Create the user if it does not exist
      if ! checkUserExists ; then
        echo "Creating user '$USER'"
        cat $MINIO_ACCESSKEY_SECRETKEY_TMP | ${MC} admin user add myminio
      else
        echo "User '$USER' already exists."
      fi
      #clean up credentials files.
      rm -f $MINIO_ACCESSKEY_SECRETKEY_TMP
    
      # set policy for user
      if [ ! -z $POLICY -a $POLICY != " " ] ; then
          echo "Adding policy '$POLICY' for '$USER'"
          set +e ; # policy already attach errors out, allow it.
          ${MC} admin policy attach myminio $POLICY --user=$USER
          set -e
      else
          echo "User '$USER' has no policy attached."
      fi
    }
    
    # Try connecting to MinIO instance
    scheme=http
    connectToMinio $scheme
    
    
    
    # Create the users
    echo console > $MINIO_ACCESSKEY_SECRETKEY_TMP
    echo console123 >> $MINIO_ACCESSKEY_SECRETKEY_TMP
    createUser consoleAdmin
    
  add-policy: |-
    #!/bin/sh
    set -e ; # Have script exit in the event of a failed command.
    MC_CONFIG_DIR="/tmp/minio/mc/"
    MC="/usr/bin/mc --insecure --config-dir ${MC_CONFIG_DIR}"
    
    # connectToMinio
    # Use a check-sleep-check loop to wait for MinIO service to be available
    connectToMinio() {
      SCHEME=$1
      ATTEMPTS=0 ; LIMIT=29 ; # Allow 30 attempts
      set -e ; # fail if we can't read the keys.
      ACCESS=$(cat /config/rootUser) ; SECRET=$(cat /config/rootPassword) ;
      set +e ; # The connections to minio are allowed to fail.
      echo "Connecting to MinIO server: $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT" ;
      MC_COMMAND="${MC} alias set myminio $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT $ACCESS $SECRET" ;
      $MC_COMMAND ;
      STATUS=$? ;
      until [ $STATUS = 0 ]
      do
        ATTEMPTS=`expr $ATTEMPTS + 1` ;
        echo \"Failed attempts: $ATTEMPTS\" ;
        if [ $ATTEMPTS -gt $LIMIT ]; then
          exit 1 ;
        fi ;
        sleep 2 ; # 1 second intervals between attempts
        $MC_COMMAND ;
        STATUS=$? ;
      done ;
      set -e ; # reset `e` as active
      return 0
    }
    
    # checkPolicyExists ($policy)
    # Check if the policy exists, by using the exit code of `mc admin policy info`
    checkPolicyExists() {
      POLICY=$1
      CMD=$(${MC} admin policy info myminio $POLICY > /dev/null 2>&1)
      return $?
    }
    
    # createPolicy($name, $filename)
    createPolicy () {
      NAME=$1
      FILENAME=$2
    
      # Create the name if it does not exist
      echo "Checking policy: $NAME (in /config/$FILENAME.json)"
      if ! checkPolicyExists $NAME ; then
        echo "Creating policy '$NAME'"
      else
        echo "Policy '$NAME' already exists."
      fi
      ${MC} admin policy create myminio $NAME /config/$FILENAME.json
    
    }
    
    # Try connecting to MinIO instance
    scheme=http
    connectToMinio $scheme
    
    
    
  add-svcacct: |-
    #!/bin/sh
    set -e ; # Have script exit in the event of a failed command.
    MC_CONFIG_DIR="/tmp/minio/mc/"
    MC="/usr/bin/mc --insecure --config-dir ${MC_CONFIG_DIR}"
    
    # AccessKey and secretkey credentials file are added to prevent shell execution errors caused by special characters.
    # Special characters for example : ',",<,>,{,}
    MINIO_ACCESSKEY_SECRETKEY_TMP="/tmp/accessKey_and_secretKey_svcacct_tmp"
    
    # connectToMinio
    # Use a check-sleep-check loop to wait for MinIO service to be available
    connectToMinio() {
      SCHEME=$1
      ATTEMPTS=0 ; LIMIT=29 ; # Allow 30 attempts
      set -e ; # fail if we can't read the keys.
      ACCESS=$(cat /config/rootUser) ; SECRET=$(cat /config/rootPassword) ;
      set +e ; # The connections to minio are allowed to fail.
      echo "Connecting to MinIO server: $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT" ;
      MC_COMMAND="${MC} alias set myminio $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT $ACCESS $SECRET" ;
      $MC_COMMAND ;
      STATUS=$? ;
      until [ $STATUS = 0 ]
      do
        ATTEMPTS=`expr $ATTEMPTS + 1` ;
        echo \"Failed attempts: $ATTEMPTS\" ;
        if [ $ATTEMPTS -gt $LIMIT ]; then
          exit 1 ;
        fi ;
        sleep 2 ; # 2 second intervals between attempts
        $MC_COMMAND ;
        STATUS=$? ;
      done ;
      set -e ; # reset `e` as active
      return 0
    }
    
    # checkSvcacctExists ()
    # Check if the svcacct exists, by using the exit code of `mc admin user svcacct info`
    checkSvcacctExists() {
      CMD=$(${MC} admin user svcacct info myminio $(head -1 $MINIO_ACCESSKEY_SECRETKEY_TMP) > /dev/null 2>&1)
      return $?
    }
    
    # createSvcacct ($user)
    createSvcacct () {
      USER=$1
      FILENAME=$2
      #check accessKey_and_secretKey_tmp file
      if [[ ! -f $MINIO_ACCESSKEY_SECRETKEY_TMP ]];then
        echo "credentials file does not exist"
        return 1
      fi
      if [[ $(cat $MINIO_ACCESSKEY_SECRETKEY_TMP|wc -l) -ne 2 ]];then
        echo "credentials file is invalid"
        rm -f $MINIO_ACCESSKEY_SECRETKEY_TMP
        return 1
      fi
      SVCACCT=$(head -1 $MINIO_ACCESSKEY_SECRETKEY_TMP)
      # Create the svcacct if it does not exist
      if ! checkSvcacctExists ; then
        echo "Creating svcacct '$SVCACCT'"
        # Check if policy file is define
        if [ -z $FILENAME ]; then
          ${MC} admin user svcacct add --access-key $(head -1 $MINIO_ACCESSKEY_SECRETKEY_TMP) --secret-key $(tail -n1 $MINIO_ACCESSKEY_SECRETKEY_TMP) myminio $USER
        else
          ${MC} admin user svcacct add --access-key $(head -1 $MINIO_ACCESSKEY_SECRETKEY_TMP) --secret-key $(tail -n1 $MINIO_ACCESSKEY_SECRETKEY_TMP) --policy /config/$FILENAME.json myminio $USER
        fi
      else
        echo "Svcacct '$SVCACCT' already exists."
      fi
      #clean up credentials files.
      rm -f $MINIO_ACCESSKEY_SECRETKEY_TMP
    }
    
    # Try connecting to MinIO instance
    scheme=http
    connectToMinio $scheme
    
    
    
  custom-command: |-
    #!/bin/sh
    set -e ; # Have script exit in the event of a failed command.
    MC_CONFIG_DIR="/tmp/minio/mc/"
    MC="/usr/bin/mc --insecure --config-dir ${MC_CONFIG_DIR}"
    
    # connectToMinio
    # Use a check-sleep-check loop to wait for MinIO service to be available
    connectToMinio() {
      SCHEME=$1
      ATTEMPTS=0 ; LIMIT=29 ; # Allow 30 attempts
      set -e ; # fail if we can't read the keys.
      ACCESS=$(cat /config/rootUser) ; SECRET=$(cat /config/rootPassword) ;
      set +e ; # The connections to minio are allowed to fail.
      echo "Connecting to MinIO server: $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT" ;
      MC_COMMAND="${MC} alias set myminio $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT $ACCESS $SECRET" ;
      $MC_COMMAND ;
      STATUS=$? ;
      until [ $STATUS = 0 ]
      do
        ATTEMPTS=`expr $ATTEMPTS + 1` ;
        echo \"Failed attempts: $ATTEMPTS\" ;
        if [ $ATTEMPTS -gt $LIMIT ]; then
          exit 1 ;
        fi ;
        sleep 2 ; # 1 second intervals between attempts
        $MC_COMMAND ;
        STATUS=$? ;
      done ;
      set -e ; # reset `e` as active
      return 0
    }
    
    # runCommand ($@)
    # Run custom mc command
    runCommand() {
      ${MC} "$@"
      return $?
    }
    
    # Try connecting to MinIO instance
    scheme=http
    connectToMinio $scheme
---
# Source: lgtm-distributed/charts/mimir/templates/alertmanager/alertmanager-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-mimir-alertmanager-fallback-config
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: alertmanager
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {} 
  namespace: "default"
data:
  alertmanager_fallback_config.yaml: |
    receivers:
        - name: default-receiver
    route:
        receiver: default-receiver
---
# Source: lgtm-distributed/charts/mimir/templates/metamonitoring/grafana-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-alertmanager-resources-dashboard
  namespace: default
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    grafana_dashboard: "1"
  annotations:
    k8s-sidecar-target-directory: /tmp/dashboards/Mimir Dashboards
data:
  mimir-alertmanager-resources.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 1,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"alertmanager\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"alertmanager\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"alertmanager\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"alertmanager\",resource=\"cpu\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 2,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"alertmanager\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"alertmanager\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"alertmanager\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 3,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"alertmanager\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Alertmanager",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?alertmanager.*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?alertmanager.*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Network",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(instance, pod, device) (\n  rate(\n    node_disk_written_bytes_total[$__rate_interval]\n  )\n)\n+\nignoring(pod) group_right() (\n  label_replace(\n    count by(\n      instance,\n      pod,\n      device\n    )\n    (\n      container_fs_writes_bytes_total{\n        cluster=~\"$cluster\", namespace=~\"$namespace\",\n        container=~\"alertmanager\",\n        device!~\".*sda.*\"\n      }\n    ),\n    \"device\",\n    \"$1\",\n    \"device\",\n    \"/dev/(.*)\"\n  ) * 0\n)\n\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}} - {{device}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk writes",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(instance, pod, device) (\n  rate(\n    node_disk_read_bytes_total[$__rate_interval]\n  )\n) + ignoring(pod) group_right() (\n  label_replace(\n    count by(\n      instance,\n      pod,\n      device\n    )\n    (\n      container_fs_writes_bytes_total{\n        cluster=~\"$cluster\", namespace=~\"$namespace\",\n        container=~\"alertmanager\",\n        device!~\".*sda.*\"\n      }\n    ),\n    \"device\",\n    \"$1\",\n    \"device\",\n    \"/dev/(.*)\"\n  ) * 0\n)\n\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}} - {{device}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk reads",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Disk",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 12,
                      "targets": [
                         {
                            "expr": "max by(persistentvolumeclaim) (\n  kubelet_volume_stats_used_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"} /\n  kubelet_volume_stats_capacity_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n)\nand\ncount by(persistentvolumeclaim) (\n  kube_persistentvolumeclaim_labels{\n    cluster=~\"$cluster\", namespace=~\"$namespace\",\n    label_name=~\"(alertmanager).*\"\n  }\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{persistentvolumeclaim}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk space utilization",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "default",
                      "value": "default"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".*",
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "namespace",
                   "multi": false,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Alertmanager resources",
          "uid": "a6883fb22799ac74479c7db872451092",
          "version": 0
       }
---
# Source: lgtm-distributed/charts/mimir/templates/metamonitoring/grafana-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-alertmanager-dashboard
  namespace: default
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    grafana_dashboard: "1"
  annotations:
    k8s-sidecar-target-directory: /tmp/dashboards/Mimir Dashboards
data:
  mimir-alertmanager.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "100px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "format": "short",
                      "id": 1,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 4,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(cluster_job_pod:cortex_alertmanager_alerts:sum{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"})",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Total alerts",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "format": "short",
                      "id": 2,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 4,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(cluster_job_pod:cortex_alertmanager_silences:sum{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"})",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Total silences",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "format": "short",
                      "id": 3,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 4,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "max(cortex_alertmanager_tenants_discovered{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"})",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Tenants",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Headlines",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", route=~\"/alertmanagerpb.Alertmanager/HandleRequest\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "QPS",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 5,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", route=~\"/alertmanagerpb.Alertmanager/HandleRequest\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", route=~\"/alertmanagerpb.Alertmanager/HandleRequest\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "1e3 * sum(cluster_job_route:cortex_request_duration_seconds_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", route=~\"/alertmanagerpb.Alertmanager/HandleRequest\"}) / sum(cluster_job_route:cortex_request_duration_seconds_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", route=~\"/alertmanagerpb.Alertmanager/HandleRequest\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Alertmanager Distributor",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 12,
                      "targets": [
                         {
                            "expr": "sum(cluster_job:cortex_alertmanager_alerts_received_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"})\n-\nsum(cluster_job:cortex_alertmanager_alerts_invalid_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"})\n",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(cluster_job:cortex_alertmanager_alerts_invalid_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"})",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "APS",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Alerts received",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 12,
                      "targets": [
                         {
                            "expr": "cortex_alertmanager_dispatcher_aggregation_groups{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"}",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "per pod Active Aggregation Groups",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Alerts grouping",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(cluster_job_integration:cortex_alertmanager_notifications_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"})\n-\nsum(cluster_job_integration:cortex_alertmanager_notifications_failed_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"})\n",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(cluster_job_integration:cortex_alertmanager_notifications_failed_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"})\n",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "NPS",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "(\nsum(cluster_job_integration:cortex_alertmanager_notifications_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"}) by(integration)\n-\nsum(cluster_job_integration:cortex_alertmanager_notifications_failed_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"}) by(integration)\n) > 0\nor on () vector(0)\n",
                            "format": "time_series",
                            "legendFormat": "success - {{ integration }}",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(cluster_job_integration:cortex_alertmanager_notifications_failed_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"}) by(integration)",
                            "format": "time_series",
                            "legendFormat": "failed - {{ integration }}",
                            "legendLink": null
                         }
                      ],
                      "title": "NPS by integration",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 10,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_alertmanager_notification_latency_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_alertmanager_notification_latency_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_alertmanager_notification_latency_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_alertmanager_notification_latency_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Alert notifications",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [ ]
                      },
                      "id": 11,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Operations / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "max": 1,
                            "min": 0,
                            "noValue": "0",
                            "unit": "percentunit"
                         }
                      },
                      "id": 12,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(operation) (rate(thanos_objstore_bucket_operation_failures_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\"}[$__rate_interval])) / sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\"}[$__rate_interval])) >= 0",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Error rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 13,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"attributes\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"attributes\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Attributes",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 14,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"exists\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"exists\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Exists",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Alertmanager Configuration Object Store (Alertmanager accesses)",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 15,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"get\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"get\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Get",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 16,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"get_range\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"get_range\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: GetRange",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 17,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"upload\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"upload\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Upload",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 18,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"delete\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"alertmanager-storage\",operation=\"delete\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Delete",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 19,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (cortex_alertmanager_tenants_owned{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Per pod tenants",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 20,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (cluster_job_pod:cortex_alertmanager_alerts:sum{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Per pod alerts",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 21,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (cluster_job_pod:cortex_alertmanager_silences:sum{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Per pod silences",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Replication",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 22,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_alertmanager_sync_configs_total{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n-\nsum(rate(cortex_alertmanager_sync_configs_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_alertmanager_sync_configs_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Syncs/sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 23,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(reason) (rate(cortex_alertmanager_sync_configs_total{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{reason}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Syncs/sec (by reason)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 24,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum (rate(cortex_alertmanager_ring_check_errors_total{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "errors",
                            "legendLink": null
                         }
                      ],
                      "title": "Ring check errors/sec",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Tenant configuration sync",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 25,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(outcome) (rate(cortex_alertmanager_state_initial_sync_completed_total{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "interval": "1m",
                            "legendFormat": "{{outcome}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Initial syncs /sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 26,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_alertmanager_state_initial_sync_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "interval": "1m",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_alertmanager_state_initial_sync_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "interval": "1m",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_alertmanager_state_initial_sync_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_alertmanager_state_initial_sync_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "interval": "1m",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Initial sync duration",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 27,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_alertmanager_state_fetch_replica_state_total{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n-\nsum(rate(cortex_alertmanager_state_fetch_replica_state_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "interval": "1m",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_alertmanager_state_fetch_replica_state_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "interval": "1m",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Fetch state from other alertmanagers /sec",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Sharding initial state sync",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 28,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(cluster_job:cortex_alertmanager_state_replication_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"})\n-\nsum(cluster_job:cortex_alertmanager_state_replication_failed_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"})\n",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(cluster_job:cortex_alertmanager_state_replication_failed_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"})",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Replicate state to other alertmanagers /sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 29,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(cluster_job:cortex_alertmanager_partial_state_merges_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"})\n-\nsum(cluster_job:cortex_alertmanager_partial_state_merges_failed_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"})\n",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(cluster_job:cortex_alertmanager_partial_state_merges_failed_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"})",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Merge state from other alertmanagers /sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 30,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_alertmanager_state_persist_total{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n-\nsum(rate(cortex_alertmanager_state_persist_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_alertmanager_state_persist_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Persist state to remote storage /sec",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Sharding runtime state sync",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "default",
                      "value": "default"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": true,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "namespace",
                   "multi": true,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Alertmanager",
          "uid": "b0d38d318bbddd80476246d4930f9e55",
          "version": 0
       }
---
# Source: lgtm-distributed/charts/mimir/templates/metamonitoring/grafana-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-compactor-resources-dashboard
  namespace: default
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    grafana_dashboard: "1"
  annotations:
    k8s-sidecar-target-directory: /tmp/dashboards/Mimir Dashboards
data:
  mimir-compactor-resources.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 1,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"compactor\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"compactor\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"compactor\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"compactor\",resource=\"cpu\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 2,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"compactor\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "CPU and memory",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 3,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_rss{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"compactor\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"compactor\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"compactor\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (RSS)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"compactor\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"compactor\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"compactor\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?compactor.*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?compactor.*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Network",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(instance, pod, device) (\n  rate(\n    node_disk_written_bytes_total[$__rate_interval]\n  )\n)\n+\nignoring(pod) group_right() (\n  label_replace(\n    count by(\n      instance,\n      pod,\n      device\n    )\n    (\n      container_fs_writes_bytes_total{\n        cluster=~\"$cluster\", namespace=~\"$namespace\",\n        container=~\"compactor\",\n        device!~\".*sda.*\"\n      }\n    ),\n    \"device\",\n    \"$1\",\n    \"device\",\n    \"/dev/(.*)\"\n  ) * 0\n)\n\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}} - {{device}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk writes",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(instance, pod, device) (\n  rate(\n    node_disk_read_bytes_total[$__rate_interval]\n  )\n) + ignoring(pod) group_right() (\n  label_replace(\n    count by(\n      instance,\n      pod,\n      device\n    )\n    (\n      container_fs_writes_bytes_total{\n        cluster=~\"$cluster\", namespace=~\"$namespace\",\n        container=~\"compactor\",\n        device!~\".*sda.*\"\n      }\n    ),\n    \"device\",\n    \"$1\",\n    \"device\",\n    \"/dev/(.*)\"\n  ) * 0\n)\n\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}} - {{device}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk reads",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(persistentvolumeclaim) (\n  kubelet_volume_stats_used_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"} /\n  kubelet_volume_stats_capacity_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n)\nand\ncount by(persistentvolumeclaim) (\n  kube_persistentvolumeclaim_labels{\n    cluster=~\"$cluster\", namespace=~\"$namespace\",\n    label_name=~\"(compactor).*\"\n  }\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{persistentvolumeclaim}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk space utilization",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Disk",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "default",
                      "value": "default"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": true,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "namespace",
                   "multi": true,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Compactor resources",
          "uid": "09a5c49e9cdb2f2b24c6d184574a07fd",
          "version": 0
       }
---
# Source: lgtm-distributed/charts/mimir/templates/metamonitoring/grafana-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-compactor-dashboard
  namespace: default
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    grafana_dashboard: "1"
  annotations:
    k8s-sidecar-target-directory: /tmp/dashboards/Mimir Dashboards
data:
  mimir-compactor.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Per-instance runs\nNumber of times a compactor instance triggers a compaction across all tenants that it manages.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "bars",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ops"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "completed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "started"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#34CCEB",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 1,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_compactor_runs_started_total{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "started",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_compactor_runs_completed_total{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "completed",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_compactor_runs_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Per-instance runs / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Tenants compaction progress\nIn a multi-tenant cluster, display the progress of tenants that are compacted while compaction is running.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "max": 1,
                            "noValue": 1,
                            "unit": "percentunit"
                         }
                      },
                      "id": 2,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "(\n  cortex_compactor_tenants_processing_succeeded{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"} +\n  cortex_compactor_tenants_processing_failed{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"} +\n  cortex_compactor_tenants_skipped{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}\n)\n/\ncortex_compactor_tenants_discovered{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"} > 0\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Tenants compaction progress",
                      "type": "timeseries"
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "description": "### Longest time since last successful run\nDisplays the amount of time since the most recent successful execution\nof the compactor.\nThe value shown will be for the compactor replica that has the longest time since its\nlast successful run.\nThe table to the right shows a summary for all compactor replicas.\n\nIf there is no time value, one of the following messages might appear:\n\n- If you see \"No compactor data\" in this panel, that means that no compactors are active yet.\n\n- If you see \"No successful runs\" in this panel, that means that compactors are active, but none\n  of them were successfully executed yet.\n\nThese might be expected - for example, if you just recently restarted your compactors,\nthey might not have had a chance to complete their first compaction run.\nHowever, if these messages persist, you should check the health of your compactors.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "color": {
                               "mode": "thresholds"
                            },
                            "decimals": 1,
                            "noValue": "No compactor data",
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "Last run"
                               },
                               "properties": [
                                  {
                                     "id": "custom.width",
                                     "value": 74
                                  },
                                  {
                                     "id": "mappings",
                                     "value": [
                                        {
                                           "options": {
                                              "from": "-Infinity",
                                              "result": {
                                                 "color": "text",
                                                 "text": "No successful runs since startup yet"
                                              },
                                              "to": 0
                                           },
                                           "type": "range"
                                        }
                                     ]
                                  },
                                  {
                                     "id": "color",
                                     "value": {
                                        "mode": "thresholds"
                                     }
                                  },
                                  {
                                     "id": "thresholds",
                                     "value": {
                                        "mode": "absolute",
                                        "steps": [
                                           {
                                              "color": "green",
                                              "value": 0
                                           },
                                           {
                                              "color": "yellow",
                                              "value": 7200
                                           },
                                           {
                                              "color": "orange",
                                              "value": 21600
                                           },
                                           {
                                              "color": "red",
                                              "value": 43200
                                           }
                                        ]
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "fill": 1,
                      "id": 3,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "reduceOptions": {
                            "calcs": [
                               "first"
                            ],
                            "fields": "/^Last run$/",
                            "values": false
                         },
                         "textMode": "value"
                      },
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 3,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "max by(pod)\n(\n  (time() * (max_over_time(cortex_compactor_last_successful_run_timestamp_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[1h]) !=bool 0))\n  -\n  max_over_time(cortex_compactor_last_successful_run_timestamp_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[1h])\n)\n",
                            "format": "table",
                            "instant": true,
                            "interval": "",
                            "intervalFactor": null,
                            "legendFormat": "",
                            "legendLink": null,
                            "step": null
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Longest time since last successful run",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "transformations": [
                         {
                            "id": "organize",
                            "options": {
                               "renameByName": {
                                  "Value": "Last run",
                                  "pod": "Compactor"
                               }
                            }
                         },
                         {
                            "id": "sortBy",
                            "options": {
                               "sort": [
                                  {
                                     "desc": true,
                                     "field": "Last run"
                                  }
                               ]
                            }
                         }
                      ],
                      "type": "stat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Last successful run per-compactor replica\nDisplays the compactor replicas, and for each, shows how long it has been since\nits last successful compaction run.\n\nThe value in the status column is based on how long it has been since the last successful compaction.\n\n- Okay: less than 2 hours\n- Delayed: more than 2 hours\n- Late: more than 6 hours\n- Very late: more than 12 hours\n\nIf the status of any compactor replicas are *Late* or *Very late*, check their health.\n\n",
                      "fieldConfig": {
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "Status"
                               },
                               "properties": [
                                  {
                                     "id": "custom.displayMode",
                                     "value": "color-background"
                                  },
                                  {
                                     "id": "mappings",
                                     "value": [
                                        {
                                           "options": {
                                              "from": "-Infinity",
                                              "result": {
                                                 "color": "transparent",
                                                 "text": "N/A"
                                              },
                                              "to": 0
                                           },
                                           "type": "range"
                                        },
                                        {
                                           "options": {
                                              "from": 0,
                                              "result": {
                                                 "color": "green",
                                                 "text": "Ok"
                                              },
                                              "to": 7200
                                           },
                                           "type": "range"
                                        },
                                        {
                                           "options": {
                                              "from": 7200,
                                              "result": {
                                                 "color": "yellow",
                                                 "text": "Delayed"
                                              },
                                              "to": 21600
                                           },
                                           "type": "range"
                                        },
                                        {
                                           "options": {
                                              "from": 21600,
                                              "result": {
                                                 "color": "orange",
                                                 "text": "Late"
                                              },
                                              "to": 43200
                                           },
                                           "type": "range"
                                        },
                                        {
                                           "options": {
                                              "from": 43200,
                                              "result": {
                                                 "color": "red",
                                                 "text": "Very late"
                                              },
                                              "to": "Infinity"
                                           },
                                           "type": "range"
                                        },
                                        {
                                           "options": {
                                              "match": "null+nan",
                                              "result": {
                                                 "color": "transparent",
                                                 "text": "Unknown"
                                              }
                                           },
                                           "type": "special"
                                        }
                                     ]
                                  },
                                  {
                                     "id": "custom.width",
                                     "value": 86
                                  },
                                  {
                                     "id": "custom.align",
                                     "value": "center"
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "Last run"
                               },
                               "properties": [
                                  {
                                     "id": "unit",
                                     "value": "s"
                                  },
                                  {
                                     "id": "custom.width",
                                     "value": 74
                                  },
                                  {
                                     "id": "mappings",
                                     "value": [
                                        {
                                           "options": {
                                              "from": "-Infinity",
                                              "result": {
                                                 "text": "Never"
                                              },
                                              "to": 0
                                           },
                                           "type": "range"
                                        }
                                     ]
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "max by(pod)\n(\n  (time() * (max_over_time(cortex_compactor_last_successful_run_timestamp_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[1h]) !=bool 0))\n  -\n  max_over_time(cortex_compactor_last_successful_run_timestamp_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[1h])\n)\n",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "Last run",
                            "legendLink": null
                         }
                      ],
                      "title": "Last successful run per-compactor replica",
                      "transformations": [
                         {
                            "id": "organize",
                            "options": {
                               "renameByName": {
                                  "Value": "Last run",
                                  "pod": "Compactor"
                               }
                            }
                         },
                         {
                            "id": "sortBy",
                            "options": {
                               "sort": [
                                  {
                                     "desc": true,
                                     "field": "Last run"
                                  }
                               ]
                            }
                         },
                         {
                            "id": "calculateField",
                            "options": {
                               "alias": "One",
                               "binary": {
                                  "left": "Last run",
                                  "operator": "/",
                                  "right": "Last run"
                               },
                               "mode": "binary",
                               "replaceFields": false
                            }
                         },
                         {
                            "id": "calculateField",
                            "options": {
                               "alias": "Status",
                               "binary": {
                                  "left": "Last run",
                                  "operator": "*",
                                  "right": "One"
                               },
                               "mode": "binary",
                               "replaceFields": false
                            }
                         },
                         {
                            "id": "filterFieldsByName",
                            "options": {
                               "include": {
                                  "names": [
                                     "Compactor",
                                     "Last run",
                                     "Status"
                                  ]
                               }
                            }
                         }
                      ],
                      "type": "table"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Summary",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Estimated Compaction Jobs\nEstimated number of compaction jobs based on latest version of bucket index. Ingesters upload new blocks every 2 hours (shortly after 01:00 UTC, 03:00 UTC, 05:00 UTC, etc.),\nand compactors should process all of them within 2h interval. If this graph regularly goes to zero (or close to zero) in 2 hour intervals, then compaction works as designed.\n\nMetric with number of compaction jobs is computed from blocks in bucket index, which is updated regularly. Metric doesn't change between bucket index updates, even if\nthere were compaction jobs finished in this time. When computing compaction jobs, only jobs that can be executed at given moment are counted. There can be more\njobs, but if they are blocked, they are not counted in the metric. For example if there is a split compaction job pending for some time range, no merge job\ncovering the same time range can run. In this case only split compaction job is counted toward the metric, but merge job isn't.\n\nIn other words, computed number of compaction jobs is the minimum number of compaction jobs based on latest version of bucket index.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(cortex_bucket_index_estimated_compaction_jobs{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}) and (sum(rate(cortex_bucket_index_estimated_compaction_jobs_errors_total{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) == 0)",
                            "format": "time_series",
                            "legendFormat": "Jobs",
                            "legendLink": null
                         }
                      ],
                      "title": "Estimated Compaction Jobs",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### TSDB compactions / sec\nRate of TSDB compactions. Single TSDB compaction takes one or more input blocks and produces one or more (during \"split\" phase) output blocks.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ops"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(rate(prometheus_tsdb_compactions_total{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "compactions",
                            "legendLink": null
                         }
                      ],
                      "title": "TSDB compactions / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### TSDB compaction duration\nDisplay the amount of time that it has taken to run a single TSDB compaction.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 7,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(prometheus_tsdb_compaction_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(prometheus_tsdb_compaction_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(prometheus_tsdb_compaction_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) * 1e3 / sum(rate(prometheus_tsdb_compaction_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "TSDB compaction duration",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "avg(max by(user) (cortex_bucket_blocks_count{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         }
                      ],
                      "title": "Average blocks / tenant",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Tenants with largest number of blocks\nThe 10 tenants with the largest number of blocks.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "topk(10, max by(user) (cortex_bucket_blocks_count{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}))",
                            "format": "time_series",
                            "legendFormat": "{{user}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Tenants with largest number of blocks",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ops"
                         },
                         "overrides": [ ]
                      },
                      "id": 10,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_compactor_blocks_marked_for_deletion_total{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "blocks",
                            "legendLink": null
                         }
                      ],
                      "title": "Blocks marked for deletion / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ops"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 11,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_compactor_blocks_cleaned_total{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_compactor_block_cleanup_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Blocks deletions / sec",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Garbage collector",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ops"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 12,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_compactor_meta_syncs_total{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n-\nsum(rate(cortex_compactor_meta_sync_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_compactor_meta_sync_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Metadata syncs / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 13,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_compactor_meta_sync_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_compactor_meta_sync_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_compactor_meta_sync_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_compactor_meta_sync_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Metadata sync duration",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Metadata sync",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [ ]
                      },
                      "id": 14,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Operations / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "max": 1,
                            "min": 0,
                            "noValue": "0",
                            "unit": "percentunit"
                         }
                      },
                      "id": 15,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(operation) (rate(thanos_objstore_bucket_operation_failures_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\"}[$__rate_interval])) / sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\"}[$__rate_interval])) >= 0",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Error rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 16,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"attributes\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"attributes\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Attributes",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 17,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"exists\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"exists\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Exists",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Object Store",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 18,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"get\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"get\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Get",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 19,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"get_range\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"get_range\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: GetRange",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 20,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"upload\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"upload\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Upload",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 21,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"delete\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"compactor\",operation=\"delete\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Delete",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 22,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\", kv_name=~\".+\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 23,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\", kv_name=~\".+\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\", kv_name=~\".+\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_kv_request_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\", kv_name=~\".+\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\", kv_name=~\".+\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Key-value store for compactors ring",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "default",
                      "value": "default"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": true,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "namespace",
                   "multi": true,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Compactor",
          "uid": "1b3443aea86db629e6efdb7d05c53823",
          "version": 0
       }
---
# Source: lgtm-distributed/charts/mimir/templates/metamonitoring/grafana-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-config-dashboard
  namespace: default
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    grafana_dashboard: "1"
  annotations:
    k8s-sidecar-target-directory: /tmp/dashboards/Mimir Dashboards
data:
  mimir-config.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "instances"
                         },
                         "overrides": [ ]
                      },
                      "id": 1,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 12,
                      "targets": [
                         {
                            "expr": "count(cortex_config_hash{cluster=~\"$cluster\", namespace=~\"$namespace\"}) by (sha256)",
                            "format": "time_series",
                            "legendFormat": "sha256:{{sha256}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Startup config file hashes",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Startup config file",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "instances"
                         },
                         "overrides": [ ]
                      },
                      "id": 2,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 12,
                      "targets": [
                         {
                            "expr": "count(cortex_runtime_config_hash{cluster=~\"$cluster\", namespace=~\"$namespace\"}) by (sha256)",
                            "format": "time_series",
                            "legendFormat": "sha256:{{sha256}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Runtime config file hashes",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Runtime config file",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "default",
                      "value": "default"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": true,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "namespace",
                   "multi": true,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Config",
          "uid": "5d9d0b4724c0f80d68467088ec61e003",
          "version": 0
       }
---
# Source: lgtm-distributed/charts/mimir/templates/metamonitoring/grafana-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-object-store-dashboard
  namespace: default
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    grafana_dashboard: "1"
  annotations:
    k8s-sidecar-target-directory: /tmp/dashboards/Mimir Dashboards
data:
  mimir-object-store.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [ ]
                      },
                      "id": 1,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(component) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{component}}",
                            "legendLink": null
                         }
                      ],
                      "title": "RPS / component",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "max": 1,
                            "min": 0,
                            "noValue": "0",
                            "unit": "percentunit"
                         }
                      },
                      "id": 2,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(component) (rate(thanos_objstore_bucket_operation_failures_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) / sum by(component) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) >= 0",
                            "format": "time_series",
                            "legendFormat": "{{component}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Error rate / component",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Components",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [ ]
                      },
                      "id": 3,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "RPS / operation",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "max": 1,
                            "min": 0,
                            "noValue": "0",
                            "unit": "percentunit"
                         }
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(operation) (rate(thanos_objstore_bucket_operation_failures_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) / sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval])) >= 0",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Error rate / operation",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Operations",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 5,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"get\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"get\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Op: Get",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"get_range\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"get_range\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Op: GetRange",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 7,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"exists\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"exists\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Op: Exists",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"attributes\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"attributes\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Op: Attributes",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"upload\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"upload\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Op: Upload",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 10,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"delete\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",operation=\"delete\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Op: Delete",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "default",
                      "value": "default"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": true,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "namespace",
                   "multi": true,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Object Store",
          "uid": "e1324ee2a434f4158c00a9ee279d3292",
          "version": 0
       }
---
# Source: lgtm-distributed/charts/mimir/templates/metamonitoring/grafana-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-overrides-dashboard
  namespace: default
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    grafana_dashboard: "1"
  annotations:
    k8s-sidecar-target-directory: /tmp/dashboards/Mimir Dashboards
data:
  mimir-overrides.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "${datasource}",
                      "id": 1,
                      "span": 12,
                      "targets": [
                         {
                            "expr": "max by(limit_name) (cortex_limits_defaults{cluster=~\"$cluster\",namespace=~\"$namespace\"})",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "title": "Defaults",
                      "transformations": [
                         {
                            "id": "labelsToFields",
                            "options": { }
                         },
                         {
                            "id": "merge",
                            "options": { }
                         },
                         {
                            "id": "organize",
                            "options": {
                               "excludeByName": {
                                  "Time": true
                               },
                               "indexByName": {
                                  "Value": 1,
                                  "limit_name": 0
                               }
                            }
                         },
                         {
                            "id": "sortBy",
                            "options": {
                               "fields": { },
                               "sort": [
                                  {
                                     "field": "limit_name"
                                  }
                               ]
                            }
                         }
                      ],
                      "type": "table"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "${datasource}",
                      "id": 2,
                      "span": 12,
                      "targets": [
                         {
                            "expr": "max by(user, limit_name) (cortex_limits_overrides{cluster=~\"$cluster\",namespace=~\"$namespace\",user=~\"${tenant_id}\"})",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "title": "Per-tenant overrides",
                      "transformations": [
                         {
                            "id": "labelsToFields",
                            "options": {
                               "mode": "columns",
                               "valueLabel": "limit_name"
                            }
                         },
                         {
                            "id": "merge",
                            "options": { }
                         },
                         {
                            "id": "organize",
                            "options": {
                               "excludeByName": {
                                  "Time": true
                               },
                               "indexByName": {
                                  "user": 0
                               }
                            }
                         }
                      ],
                      "type": "table"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "default",
                      "value": "default"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".*",
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "namespace",
                   "multi": false,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "current": {
                      "selected": true,
                      "text": ".*",
                      "value": ".*"
                   },
                   "hide": 0,
                   "label": "Tenant ID",
                   "name": "tenant_id",
                   "options": [
                      {
                         "selected": true,
                         "text": ".*",
                         "value": ".*"
                      }
                   ],
                   "query": ".*",
                   "type": "textbox"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Overrides",
          "uid": "1e2c358600ac53f09faea133f811b5bb",
          "version": 0
       }
---
# Source: lgtm-distributed/charts/mimir/templates/metamonitoring/grafana-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-overview-networking-dashboard
  namespace: default
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    grafana_dashboard: "1"
  annotations:
    k8s-sidecar-target-directory: /tmp/dashboards/Mimir Dashboards
data:
  mimir-overview-networking.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 1,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(distributor|ingester|mimir-write).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 2,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(distributor|ingester|mimir-write).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 3,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(distributor|ingester|mimir-write).*\"})",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(distributor|ingester|mimir-write).*\"})",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         }
                      ],
                      "title": "Inflight requests (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(distributor|ingester|mimir-write).*\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(distributor|ingester|mimir-write).*\"}))",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_tcp_connections_limit{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(distributor|ingester|mimir-write).*\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "TCP connections (per pod)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Writes",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(query-frontend|querier|ruler-query-frontend|ruler-querier|mimir-read).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(query-frontend|querier|ruler-query-frontend|ruler-querier|mimir-read).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(query-frontend|querier|ruler-query-frontend|ruler-querier|mimir-read).*\"})",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(query-frontend|querier|ruler-query-frontend|ruler-querier|mimir-read).*\"})",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         }
                      ],
                      "title": "Inflight requests (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(query-frontend|querier|ruler-query-frontend|ruler-querier|mimir-read).*\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(query-frontend|querier|ruler-query-frontend|ruler-querier|mimir-read).*\"}))",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_tcp_connections_limit{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(query-frontend|querier|ruler-query-frontend|ruler-querier|mimir-read).*\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "TCP connections (per pod)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Reads",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter|mimir-backend).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 10,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter|mimir-backend).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 11,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter|mimir-backend).*\"})",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter|mimir-backend).*\"})",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         }
                      ],
                      "title": "Inflight requests (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 12,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter|mimir-backend).*\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter|mimir-backend).*\"}))",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_tcp_connections_limit{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter|mimir-backend).*\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "TCP connections (per pod)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Backend",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "default",
                      "value": "default"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".*",
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "namespace",
                   "multi": false,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Overview networking",
          "uid": "e15c71d372cc541367a088f10d9fcd92",
          "version": 0
       }
---
# Source: lgtm-distributed/charts/mimir/templates/metamonitoring/grafana-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-overview-resources-dashboard
  namespace: default
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    grafana_dashboard: "1"
  annotations:
    k8s-sidecar-target-directory: /tmp/dashboards/Mimir Dashboards
data:
  mimir-overview-resources.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 1,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"distributor|ingester|mimir-write\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 2,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"distributor|ingester|mimir-write\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 3,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"distributor|ingester|mimir-write\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Writes",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(instance, pod, device) (\n  rate(\n    node_disk_written_bytes_total[$__rate_interval]\n  )\n)\n+\nignoring(pod) group_right() (\n  label_replace(\n    count by(\n      instance,\n      pod,\n      device\n    )\n    (\n      container_fs_writes_bytes_total{\n        cluster=~\"$cluster\", namespace=~\"$namespace\",\n        container=~\"distributor|ingester|mimir-write\",\n        device!~\".*sda.*\"\n      }\n    ),\n    \"device\",\n    \"$1\",\n    \"device\",\n    \"/dev/(.*)\"\n  ) * 0\n)\n\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}} - {{device}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk writes",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(instance, pod, device) (\n  rate(\n    node_disk_read_bytes_total[$__rate_interval]\n  )\n) + ignoring(pod) group_right() (\n  label_replace(\n    count by(\n      instance,\n      pod,\n      device\n    )\n    (\n      container_fs_writes_bytes_total{\n        cluster=~\"$cluster\", namespace=~\"$namespace\",\n        container=~\"distributor|ingester|mimir-write\",\n        device!~\".*sda.*\"\n      }\n    ),\n    \"device\",\n    \"$1\",\n    \"device\",\n    \"/dev/(.*)\"\n  ) * 0\n)\n\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}} - {{device}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk reads",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(persistentvolumeclaim) (\n  kubelet_volume_stats_used_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"} /\n  kubelet_volume_stats_capacity_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n)\nand\ncount by(persistentvolumeclaim) (\n  kube_persistentvolumeclaim_labels{\n    cluster=~\"$cluster\", namespace=~\"$namespace\",\n    label_name=~\"(distributor|ingester|mimir-write).*\"\n  }\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{persistentvolumeclaim}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk space utilization",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"query-frontend|querier|ruler-query-frontend|ruler-querier|mimir-read\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"query-frontend|querier|ruler-query-frontend|ruler-querier|mimir-read\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"query-frontend|querier|ruler-query-frontend|ruler-querier|mimir-read\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Reads",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 10,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter|mimir-backend\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 11,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter|mimir-backend\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 12,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter|mimir-backend\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Backend",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 13,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(instance, pod, device) (\n  rate(\n    node_disk_written_bytes_total[$__rate_interval]\n  )\n)\n+\nignoring(pod) group_right() (\n  label_replace(\n    count by(\n      instance,\n      pod,\n      device\n    )\n    (\n      container_fs_writes_bytes_total{\n        cluster=~\"$cluster\", namespace=~\"$namespace\",\n        container=~\"query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter|mimir-backend\",\n        device!~\".*sda.*\"\n      }\n    ),\n    \"device\",\n    \"$1\",\n    \"device\",\n    \"/dev/(.*)\"\n  ) * 0\n)\n\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}} - {{device}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk writes",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 14,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(instance, pod, device) (\n  rate(\n    node_disk_read_bytes_total[$__rate_interval]\n  )\n) + ignoring(pod) group_right() (\n  label_replace(\n    count by(\n      instance,\n      pod,\n      device\n    )\n    (\n      container_fs_writes_bytes_total{\n        cluster=~\"$cluster\", namespace=~\"$namespace\",\n        container=~\"query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter|mimir-backend\",\n        device!~\".*sda.*\"\n      }\n    ),\n    \"device\",\n    \"$1\",\n    \"device\",\n    \"/dev/(.*)\"\n  ) * 0\n)\n\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}} - {{device}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk reads",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 15,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(persistentvolumeclaim) (\n  kubelet_volume_stats_used_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"} /\n  kubelet_volume_stats_capacity_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n)\nand\ncount by(persistentvolumeclaim) (\n  kube_persistentvolumeclaim_labels{\n    cluster=~\"$cluster\", namespace=~\"$namespace\",\n    label_name=~\"(query-scheduler|ruler-query-scheduler|ruler|store-gateway|compactor|alertmanager|overrides-exporter|mimir-backend).*\"\n  }\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{persistentvolumeclaim}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk space utilization",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "default",
                      "value": "default"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".*",
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "namespace",
                   "multi": false,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Overview resources",
          "uid": "a9b92d3c4d1af325d872a9e9a7083d71",
          "version": 0
       }
---
# Source: lgtm-distributed/charts/mimir/templates/metamonitoring/grafana-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-overview-dashboard
  namespace: default
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    grafana_dashboard: "1"
  annotations:
    k8s-sidecar-target-directory: /tmp/dashboards/Mimir Dashboards
data:
  mimir-overview.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "content": "The 'Status' panel shows an overview on the cluster health over the time.\nTo investigate failures, see a specific dashboard:\n\n- <a target=\"_blank\" href=\"./d/8280707b8f16e7b87b840fc1cc92d4c5/mimir-writes?${__url_time_range}&${__all_variables}\">Writes</a>\n- <a target=\"_blank\" href=\"./d/e327503188913dc38ad571c647eef643/mimir-reads?${__url_time_range}&${__all_variables}\">Reads</a>\n- <a target=\"_blank\" href=\"./d/631e15d5d85afb2ca8e35d62984eeaa0/mimir-ruler?${__url_time_range}&${__all_variables}\">Rule evaluations</a>\n- <a target=\"_blank\" href=\"./d/b0d38d318bbddd80476246d4930f9e55/mimir-alertmanager?${__url_time_range}&${__all_variables}\">Alerting notifications</a>\n- <a target=\"_blank\" href=\"./d/e1324ee2a434f4158c00a9ee279d3292/mimir-object-store?${__url_time_range}&${__all_variables}\">Object storage</a>\n",
                      "datasource": null,
                      "description": "",
                      "id": 1,
                      "mode": "markdown",
                      "span": 3,
                      "title": "",
                      "transparent": true,
                      "type": "text"
                   },
                   {
                      "fieldConfig": {
                         "defaults": {
                            "color": {
                               "mode": "thresholds"
                            },
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [
                                  {
                                     "color": "#7EB26D",
                                     "value": null
                                  },
                                  {
                                     "color": "#EAB839",
                                     "value": 0.01
                                  },
                                  {
                                     "color": "#E24D42",
                                     "value": 0.050000000000000003
                                  }
                               ]
                            }
                         }
                      },
                      "id": 2,
                      "options": {
                         "showValue": "never"
                      },
                      "span": 6,
                      "targets": [
                         {
                            "datasource": {
                               "uid": "$datasource"
                            },
                            "exemplar": false,
                            "expr": "(\n    # gRPC errors are not tracked as 5xx but \"error\".\n    sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\",status_code=~\"5.*|error\"}[$__rate_interval]))\n    or\n    # Handle the case no failure has been tracked yet.\n    vector(0)\n)\n/\nsum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"}[$__rate_interval]))\n",
                            "instant": false,
                            "legendFormat": "Writes",
                            "range": true
                         },
                         {
                            "datasource": {
                               "uid": "$datasource"
                            },
                            "exemplar": false,
                            "expr": "(\n    sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\",status_code=~\"5.*\"}[$__rate_interval]))\n    or\n    # Handle the case no failure has been tracked yet.\n    vector(0)\n)\n/\nsum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}[$__rate_interval]))\n",
                            "instant": false,
                            "legendFormat": "Reads",
                            "range": true
                         },
                         {
                            "datasource": {
                               "uid": "$datasource"
                            },
                            "exemplar": false,
                            "expr": "(\n  (\n      sum(rate(cortex_prometheus_rule_evaluation_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n      +\n      # Consider missed evaluations as failures.\n      sum(rate(cortex_prometheus_rule_group_iterations_missed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n  )\n  or\n  # Handle the case no failure has been tracked yet.\n  vector(0)\n)\n/\nsum(rate(cortex_prometheus_rule_evaluations_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "instant": false,
                            "legendFormat": "Rule evaluations",
                            "range": true
                         },
                         {
                            "datasource": {
                               "uid": "$datasource"
                            },
                            "exemplar": false,
                            "expr": "(\n  # Failed notifications from ruler to Alertmanager (handling the case the ruler metrics are missing).\n  ((sum(rate(cortex_prometheus_notifications_errors_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n) or vector(0))\n  +\n  # Failed notifications from Alertmanager to receivers (handling the case the alertmanager metrics are missing).\n  ((sum(cluster_job_integration:cortex_alertmanager_notifications_failed_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"})\n) or vector(0))\n)\n/\n(\n  # Total notifications from ruler to Alertmanager (handling the case the ruler metrics are missing).\n  ((sum(rate(cortex_prometheus_notifications_sent_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n) or vector(0))\n  +\n  # Total notifications from Alertmanager to receivers (handling the case the alertmanager metrics are missing).\n  ((sum(cluster_job_integration:cortex_alertmanager_notifications_total:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\"})\n) or vector(0))\n)\n",
                            "instant": false,
                            "legendFormat": "Alerting notifications",
                            "range": true
                         },
                         {
                            "datasource": {
                               "uid": "$datasource"
                            },
                            "exemplar": false,
                            "expr": "sum(rate(thanos_objstore_bucket_operation_failures_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval]))\n/\nsum(rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval]))\n",
                            "instant": false,
                            "legendFormat": "Object storage",
                            "range": true
                         }
                      ],
                      "title": "Status",
                      "type": "state-timeline"
                   },
                   {
                      "id": 3,
                      "options": {
                         "alertInstanceLabelFilter": "cluster=~\"$cluster\", namespace=~\"$namespace\"",
                         "alertName": "Mimir",
                         "dashboardAlerts": false,
                         "maxItems": 100,
                         "sortOrder": 3,
                         "stateFilter": {
                            "error": true,
                            "firing": true,
                            "noData": false,
                            "normal": false,
                            "pending": false
                         }
                      },
                      "span": 3,
                      "title": "Firing alerts",
                      "type": "alertlist"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Mimir cluster health",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "content": "These panels show an overview on the write path. \nTo examine the write path in detail, see a specific dashboard:\n\n- <a target=\"_blank\" href=\"./d/8280707b8f16e7b87b840fc1cc92d4c5/mimir-writes?${__url_time_range}&${__all_variables}\">Writes</a>\n- <a target=\"_blank\" href=\"./d/bc9160e50b52e89e0e49c840fea3d379/mimir-writes-resources?${__url_time_range}&${__all_variables}\">Writes resources</a>\n- <a target=\"_blank\" href=\"./d/978c1cb452585c96697a238eaac7fe2d/mimir-writes-networking?${__url_time_range}&${__all_variables}\">Writes networking</a>\n- <a target=\"_blank\" href=\"./d/a9b92d3c4d1af325d872a9e9a7083d71/mimir-overview-resources?${__url_time_range}&${__all_variables}\">Overview resources</a>\n- <a target=\"_blank\" href=\"./d/e15c71d372cc541367a088f10d9fcd92/mimir-overview-networking?${__url_time_range}&${__all_variables}\">Overview networking</a>\n",
                      "datasource": null,
                      "description": "",
                      "id": 4,
                      "mode": "markdown",
                      "span": 3,
                      "title": "",
                      "transparent": true,
                      "type": "text"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Write requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "1e3 * sum(cluster_job_route:cortex_request_duration_seconds_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"}) / sum(cluster_job_route:cortex_request_duration_seconds_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Write latency",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "cps"
                         },
                         "overrides": [ ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(cluster_namespace_job:cortex_distributor_received_samples:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})",
                            "format": "time_series",
                            "legendFormat": "samples / sec",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(cluster_namespace_job:cortex_distributor_received_exemplars:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})",
                            "format": "time_series",
                            "legendFormat": "exemplars / sec",
                            "legendLink": null
                         }
                      ],
                      "title": "Ingestion / sec",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Writes",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "content": "These panels show an overview on the read path. \nTo examine the read path in detail, see a specific dashboard:\n\n- <a target=\"_blank\" href=\"./d/e327503188913dc38ad571c647eef643/mimir-reads?${__url_time_range}&${__all_variables}\">Reads</a>\n- <a target=\"_blank\" href=\"./d/cc86fd5aa9301c6528986572ad974db9/mimir-reads-resources?${__url_time_range}&${__all_variables}\">Reads resources</a>\n- <a target=\"_blank\" href=\"./d/54b2a0a4748b3bd1aefa92ce5559a1c2/mimir-reads-networking?${__url_time_range}&${__all_variables}\">Reads networking</a>\n- <a target=\"_blank\" href=\"./d/a9b92d3c4d1af325d872a9e9a7083d71/mimir-overview-resources?${__url_time_range}&${__all_variables}\">Overview resources</a>\n- <a target=\"_blank\" href=\"./d/e15c71d372cc541367a088f10d9fcd92/mimir-overview-networking?${__url_time_range}&${__all_variables}\">Overview networking</a>\n- <a target=\"_blank\" href=\"./d/b3abe8d5c040395cc36615cb4334c92d/mimir-queries?${__url_time_range}&${__all_variables}\">Queries</a>\n- <a target=\"_blank\" href=\"./d/1b3443aea86db629e6efdb7d05c53823/mimir-compactor?${__url_time_range}&${__all_variables}\">Compactor</a>\n",
                      "datasource": null,
                      "description": "",
                      "id": 8,
                      "mode": "markdown",
                      "span": 3,
                      "title": "",
                      "transparent": true,
                      "type": "text"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Read requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 10,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "1e3 * sum(cluster_job_route:cortex_request_duration_seconds_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}) / sum(cluster_job_route:cortex_request_duration_seconds_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Read latency",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byRegexp",
                                  "options": "/.*_api_v1_query($|[^_])/"
                               },
                               "properties": [
                                  {
                                     "id": "displayName",
                                     "value": "instant queries"
                                  },
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#429D48",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byRegexp",
                                  "options": "/.*_api_v1_query_range($|[^_])/"
                               },
                               "properties": [
                                  {
                                     "id": "displayName",
                                     "value": "range queries"
                                  },
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#F1C731",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byRegexp",
                                  "options": "/.*_api_v1_labels($|[^_])/"
                               },
                               "properties": [
                                  {
                                     "id": "displayName",
                                     "value": "\"label names\" queries"
                                  },
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#2A66CF",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byRegexp",
                                  "options": "/.*_api_v1_label_name_values($|[^_])/"
                               },
                               "properties": [
                                  {
                                     "id": "displayName",
                                     "value": "\"label values\" queries"
                                  },
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#9E44C1",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byRegexp",
                                  "options": "/.*_api_v1_series($|[^_])/"
                               },
                               "properties": [
                                  {
                                     "id": "displayName",
                                     "value": "series queries"
                                  },
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFAB57",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byRegexp",
                                  "options": "/.*_api_v1_read($|[^_])/"
                               },
                               "properties": [
                                  {
                                     "id": "displayName",
                                     "value": "remote read queries"
                                  },
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#C79424",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byRegexp",
                                  "options": "/.*_api_v1_metadata($|[^_])/"
                               },
                               "properties": [
                                  {
                                     "id": "displayName",
                                     "value": "metadata queries"
                                  },
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#84D586",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byRegexp",
                                  "options": "/.*_api_v1_query_exemplars($|[^_])/"
                               },
                               "properties": [
                                  {
                                     "id": "displayName",
                                     "value": "exemplar queries"
                                  },
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A1C4FC",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byRegexp",
                                  "options": "/.*_api_v1_cardinality_active_series($|[^_])/"
                               },
                               "properties": [
                                  {
                                     "id": "displayName",
                                     "value": "\"active series\" queries"
                                  },
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#C788DE",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byRegexp",
                                  "options": "/.*_api_v1_cardinality_label_names($|[^_])/"
                               },
                               "properties": [
                                  {
                                     "id": "displayName",
                                     "value": "\"label name cardinality\" queries"
                                  },
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#3F6833",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byRegexp",
                                  "options": "/.*_api_v1_cardinality_label_values($|[^_])/"
                               },
                               "properties": [
                                  {
                                     "id": "displayName",
                                     "value": "\"label value cardinality\" queries"
                                  },
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#447EBC",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 11,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by (route) (rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\",route=~\"(prometheus|api_prom)(_api_v1_query|_api_v1_query_range|_api_v1_labels|_api_v1_label_name_values|_api_v1_series|_api_v1_read|_api_v1_metadata|_api_v1_query_exemplars|_api_v1_cardinality_active_series|_api_v1_cardinality_label_names|_api_v1_cardinality_label_values)\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\",route=~\"(prometheus|api_prom)_api_v1_.*\",route!~\"(prometheus|api_prom)(_api_v1_query|_api_v1_query_range|_api_v1_labels|_api_v1_label_name_values|_api_v1_series|_api_v1_read|_api_v1_metadata|_api_v1_query_exemplars|_api_v1_cardinality_active_series|_api_v1_cardinality_label_names|_api_v1_cardinality_label_values)\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "other",
                            "legendLink": null
                         }
                      ],
                      "title": "Queries / sec",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Reads",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "content": "These panels show an overview on the recording and alerting rules evaluation.\nTo examine the rules evaluation and alerts notifications in detail, see a specific dashboard:\n\n- <a target=\"_blank\" href=\"./d/631e15d5d85afb2ca8e35d62984eeaa0/mimir-ruler?${__url_time_range}&${__all_variables}\">Ruler</a>\n- <a target=\"_blank\" href=\"./d/b0d38d318bbddd80476246d4930f9e55/mimir-alertmanager?${__url_time_range}&${__all_variables}\">Alertmanager</a>\n- <a target=\"_blank\" href=\"./d/a6883fb22799ac74479c7db872451092/mimir-alertmanager-resources?${__url_time_range}&${__all_variables}\">Alertmanager resources</a>\n- <a target=\"_blank\" href=\"./d/a9b92d3c4d1af325d872a9e9a7083d71/mimir-overview-resources?${__url_time_range}&${__all_variables}\">Overview resources</a>\n- <a target=\"_blank\" href=\"./d/e15c71d372cc541367a088f10d9fcd92/mimir-overview-networking?${__url_time_range}&${__all_variables}\">Overview networking</a>\n",
                      "datasource": null,
                      "description": "",
                      "id": 12,
                      "mode": "markdown",
                      "span": 3,
                      "title": "",
                      "transparent": true,
                      "type": "text"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 13,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_prometheus_rule_evaluations_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n-\nsum(rate(cortex_prometheus_rule_evaluation_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "success",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_prometheus_rule_evaluation_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_prometheus_rule_group_iterations_missed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "missed",
                            "legendLink": null
                         }
                      ],
                      "title": "Rule evaluations / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 14,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum (rate(cortex_prometheus_rule_evaluation_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n  /\nsum (rate(cortex_prometheus_rule_evaluation_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "average",
                            "legendLink": null
                         }
                      ],
                      "title": "Rule evaluations latency",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 15,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_prometheus_notifications_sent_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n  -\nsum(rate(cortex_prometheus_notifications_errors_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_prometheus_notifications_errors_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Alerting notifications sent to Alertmanager / sec",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Recording and alerting rules",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "content": "These panels show an overview on the long-term storage (object storage).\nTo examine the storage in detail, see a specific dashboard:\n\n- <a target=\"_blank\" href=\"./d/e1324ee2a434f4158c00a9ee279d3292/mimir-object-store?${__url_time_range}&${__all_variables}\">Object store</a>\n- <a target=\"_blank\" href=\"./d/1b3443aea86db629e6efdb7d05c53823/mimir-compactor?${__url_time_range}&${__all_variables}\">Compactor</a>\n",
                      "datasource": null,
                      "description": "",
                      "id": 16,
                      "mode": "markdown",
                      "span": 3,
                      "title": "",
                      "transparent": true,
                      "type": "text"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 17,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval]))\n-\nsum(rate(thanos_objstore_bucket_operation_failures_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_failures_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [ ]
                      },
                      "id": 18,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "seriesOverrides": [
                         {
                            "alias": "attributes",
                            "color": "#429D48"
                         },
                         {
                            "alias": "delete",
                            "color": "#F1C731"
                         },
                         {
                            "alias": "exists",
                            "color": "#2A66CF"
                         },
                         {
                            "alias": "get",
                            "color": "#9E44C1"
                         },
                         {
                            "alias": "get_range",
                            "color": "#FFAB57"
                         },
                         {
                            "alias": "iter",
                            "color": "#C79424"
                         },
                         {
                            "alias": "upload",
                            "color": "#84D586"
                         }
                      ],
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Operations / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 19,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(max by(user) (max_over_time(cortex_bucket_blocks_count{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[15m])))",
                            "format": "time_series",
                            "legendFormat": "blocks",
                            "legendLink": null
                         }
                      ],
                      "title": "Total number of blocks in the storage",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Long-term storage (object storage)",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "default",
                      "value": "default"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": true,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "namespace",
                   "multi": true,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Overview",
          "uid": "ffcd83628d7d4b5a03d1cafd159e6c9c",
          "version": 0
       }
---
# Source: lgtm-distributed/charts/mimir/templates/metamonitoring/grafana-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-queries-dashboard
  namespace: default
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    grafana_dashboard: "1"
  annotations:
    k8s-sidecar-target-directory: /tmp/dashboards/Mimir Dashboards
data:
  mimir-queries.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_query_frontend_queue_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_query_frontend_queue_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_query_frontend_queue_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_query_frontend_queue_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Queue duration",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 2,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_query_frontend_retries_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])) by (le)) * 1",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_query_frontend_retries_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])) by (le)) * 1",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_query_frontend_retries_sum{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])) * 1 / sum(rate(cortex_query_frontend_retries_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Retries",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 3,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (cortex_query_frontend_queue_length{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Queue length (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": "0",
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(user) (cortex_query_frontend_queue_length{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\"}) > 0",
                            "format": "time_series",
                            "legendFormat": "{{user}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Queue length (per user)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Query-frontend",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 5,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_query_scheduler_queue_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_query_scheduler_queue_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_query_scheduler_queue_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_query_scheduler_queue_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Queue duration",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (cortex_query_scheduler_queue_length{cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Queue length (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": "0",
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(user) (cortex_query_scheduler_queue_length{cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\"}) > 0",
                            "format": "time_series",
                            "legendFormat": "{{user}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Queue length (per user)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Query-scheduler",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Intervals per query\nThe average number of split queries (partitioned by time) executed a single input query.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_frontend_split_queries_total{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])) / sum(rate(cortex_frontend_query_range_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", method=\"split_by_interval_and_results_cache\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "splitting rate",
                            "legendLink": null
                         }
                      ],
                      "title": "Intervals per query",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "max": 1,
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "# Query the new metric introduced in Mimir 2.10.\n(\n  sum by(request_type) (rate(cortex_frontend_query_result_cache_hits_total{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval]))\n  /\n  sum by(request_type) (rate(cortex_frontend_query_result_cache_requests_total{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval]))\n)\n# Otherwise fallback to the previous general-purpose metrics.\nor\n(\n  label_replace(\n    # Query metrics before and after dskit cache refactor.\n    sum (\n      rate(thanos_cache_memcached_hits_total{name=\"frontend-cache\", cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])\n      or ignoring(backend)\n      rate(thanos_cache_hits_total{name=\"frontend-cache\", cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])\n    )\n    /\n    sum (\n      rate(thanos_cache_memcached_requests_total{name=~\"frontend-cache\", cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])\n      or ignoring(backend)\n      rate(thanos_cache_requests_total{name=~\"frontend-cache\", cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])\n    ),\n    \"request_type\", \"query_range\", \"\", \"\")\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{request_type}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Query results cache hit ratio",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Query results cache skipped\nThe % of queries whose results could not be cached.\nIt is tracked for each split query when the splitting by interval is enabled.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "max": 1,
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 10,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_frontend_query_result_cache_skipped_total{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])) by (reason) /\nignoring (reason) group_left sum(rate(cortex_frontend_query_result_cache_attempted_total{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "{{reason}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Query results cache skipped",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Query-frontend - query splitting and results cache",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Sharded queries ratio\nThe % of queries that have been successfully rewritten and executed in a shardable way.\nThis panel only takes into account the type of queries that are supported by query sharding (eg. range queries).\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "max": 1,
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 11,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_frontend_query_sharding_rewrites_succeeded_total{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])) /\nsum(rate(cortex_frontend_query_sharding_rewrites_attempted_total{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "sharded queries ratio",
                            "legendLink": null
                         }
                      ],
                      "title": "Sharded queries ratio",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Number of sharded queries per query\nThe number of sharded queries that have been executed for a single input query. It only tracks queries that\nhave been successfully rewritten in a shardable way.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 12,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_frontend_sharded_queries_per_query_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])) by (le)) * 1",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_frontend_sharded_queries_per_query_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])) by (le)) * 1",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_frontend_sharded_queries_per_query_sum{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])) * 1 / sum(rate(cortex_frontend_sharded_queries_per_query_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Number of sharded queries per query",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Query-frontend - query sharding",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 13,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by (le) (cluster_job:cortex_ingester_queried_series_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"})) * 1",
                            "format": "time_series",
                            "legendFormat": "99th percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum by (le) (cluster_job:cortex_ingester_queried_series_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"})) * 1",
                            "format": "time_series",
                            "legendFormat": "50th percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "1 * sum(cluster_job:cortex_ingester_queried_series_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}) / sum(cluster_job:cortex_ingester_queried_series_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Series per query",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 14,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by (le) (cluster_job:cortex_ingester_queried_samples_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"})) * 1",
                            "format": "time_series",
                            "legendFormat": "99th percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum by (le) (cluster_job:cortex_ingester_queried_samples_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"})) * 1",
                            "format": "time_series",
                            "legendFormat": "50th percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "1 * sum(cluster_job:cortex_ingester_queried_samples_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}) / sum(cluster_job:cortex_ingester_queried_samples_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Samples per query",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 15,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by (le) (cluster_job:cortex_ingester_queried_exemplars_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"})) * 1",
                            "format": "time_series",
                            "legendFormat": "99th percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum by (le) (cluster_job:cortex_ingester_queried_exemplars_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"})) * 1",
                            "format": "time_series",
                            "legendFormat": "50th percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "1 * sum(cluster_job:cortex_ingester_queried_exemplars_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}) / sum(cluster_job:cortex_ingester_queried_exemplars_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Exemplars per query",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ingester",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 16,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_querier_storegateway_instances_hit_per_query_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])) by (le)) * 1",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_querier_storegateway_instances_hit_per_query_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])) by (le)) * 1",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_querier_storegateway_instances_hit_per_query_sum{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])) * 1 / sum(rate(cortex_querier_storegateway_instances_hit_per_query_count{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Number of store-gateways hit per query",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 17,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_querier_storegateway_refetches_per_query_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])) by (le)) * 1",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_querier_storegateway_refetches_per_query_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])) by (le)) * 1",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_querier_storegateway_refetches_per_query_sum{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])) * 1 / sum(rate(cortex_querier_storegateway_refetches_per_query_count{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Refetches of missing blocks per query",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Consistency checks failed\nRate of queries that had to run with consistency checks and those checks failed. A failed consistency check means that some of at least one block which had to be queried wasn't present in any of the store-gateways.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "max": 1,
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "Failure Rate"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 18,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_querier_blocks_consistency_checks_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])) / sum(rate(cortex_querier_blocks_consistency_checks_total{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Failure Rate",
                            "legendLink": null
                         }
                      ],
                      "title": "Consistency checks failed",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Rejected queries\nThe proportion of all queries received by queriers that were rejected for some reason.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "max": 1,
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 19,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by (reason) (rate(cortex_querier_queries_rejected_total{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])) / ignoring (reason) group_left sum(rate(cortex_querier_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_query(_range)?\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{reason}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Rejected queries",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Querier",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 20,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max(cortex_bucket_index_loaded{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\"})",
                            "format": "time_series",
                            "legendFormat": "Max",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_bucket_index_loaded{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\"})",
                            "format": "time_series",
                            "legendFormat": "Min",
                            "legendLink": null
                         },
                         {
                            "expr": "avg(cortex_bucket_index_loaded{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "legendLink": null
                         }
                      ],
                      "title": "Bucket indexes loaded (per querier)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 21,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_bucket_index_loads_total{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])) - sum(rate(cortex_bucket_index_load_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_bucket_index_load_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Bucket indexes load / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 22,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_bucket_index_load_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_bucket_index_load_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_bucket_index_load_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_bucket_index_load_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Bucket indexes load latency",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ops"
                         },
                         "overrides": [ ]
                      },
                      "id": 23,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_bucket_store_series_blocks_queried_sum{component=\"store-gateway\",cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "blocks",
                            "legendLink": null
                         }
                      ],
                      "title": "Blocks queried / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "binBps"
                         },
                         "overrides": [ ]
                      },
                      "id": 24,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(data_type) (\n  # Exclude \"chunks refetched\".\n  rate(cortex_bucket_store_series_data_size_fetched_bytes_sum{component=\"store-gateway\", stage!=\"refetched\", cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{data_type}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Data fetched / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "binBps"
                         },
                         "overrides": [ ]
                      },
                      "id": 25,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(data_type) (\n  # Exclude \"chunks processed\" to only count \"chunks returned\", other than postings and series.\n  rate(cortex_bucket_store_series_data_size_touched_bytes_sum{component=\"store-gateway\", stage!=\"processed\",cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{data_type}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Data touched / sec",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Store-gateway",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 26,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(stage) (rate(cortex_bucket_store_series_request_stage_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n/\nsum by(stage) (rate(cortex_bucket_store_series_request_stage_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "{{stage}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Series request average latency",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 27,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by(stage, le) (rate(cortex_bucket_store_series_request_stage_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])))\n",
                            "format": "time_series",
                            "legendFormat": "{{stage}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Series request 99th percentile latency",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Series batch preloading efficiency\nThis panel shows the % of time reduced by preloading, for Series() requests which have been\nsplit to 2+ batches. If a Series() request is served within a single batch, then preloading\nis not triggered, and thus not counted in this measurement.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "max": 1,
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 28,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "# Clamping min to 0 because if preloading not useful at all, then the actual value we get is\n# slightly negative because of the small overhead introduced by preloading.\nclamp_min(1 - (\n    sum(rate(cortex_bucket_store_series_batch_preloading_wait_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n    /\n    sum(rate(cortex_bucket_store_series_batch_preloading_load_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n), 0)\n",
                            "format": "time_series",
                            "legendFormat": "% of time reduced by preloading",
                            "legendLink": null
                         }
                      ],
                      "title": "Series batch preloading efficiency",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Blocks currently owned\nThis panel shows the number of blocks owned by each store-gateway replica.\nFor each owned block, the store-gateway keeps its index-header on disk, and\neventually loaded in memory (if index-header lazy loading is disabled, or lazy loading\nis enabled and the index-header was loaded).\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 29,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "cortex_bucket_store_blocks_loaded{component=\"store-gateway\",cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Blocks currently owned",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 30,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_bucket_store_block_loads_total{component=\"store-gateway\",cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) - sum(rate(cortex_bucket_store_block_load_failures_total{component=\"store-gateway\",cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_bucket_store_block_load_failures_total{component=\"store-gateway\",cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Blocks loaded / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 31,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_bucket_store_block_drops_total{component=\"store-gateway\",cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) - sum(rate(cortex_bucket_store_block_drop_failures_total{component=\"store-gateway\",cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_bucket_store_block_drop_failures_total{component=\"store-gateway\",cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Blocks dropped / sec",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 32,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "cortex_bucket_store_indexheader_lazy_load_total{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"} - cortex_bucket_store_indexheader_lazy_unload_total{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Lazy loaded index-headers",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 33,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_bucket_store_indexheader_lazy_load_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_bucket_store_indexheader_lazy_load_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_bucket_store_indexheader_lazy_load_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_bucket_store_indexheader_lazy_load_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Index-header lazy load duration",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Index-header lazy load gate latency\nTime spent waiting for a turn to load an index header. This time is not included in \"Index-header lazy load duration.\"\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 34,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_bucket_stores_gate_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",gate=\"index_header\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_bucket_stores_gate_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",gate=\"index_header\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_bucket_stores_gate_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",gate=\"index_header\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_bucket_stores_gate_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",gate=\"index_header\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Index-header lazy load gate latency",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "max": 1,
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 35,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_bucket_store_series_hash_cache_hits_total{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n/\nsum(rate(cortex_bucket_store_series_hash_cache_requests_total{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "hit ratio",
                            "legendLink": null
                         }
                      ],
                      "title": "Series hash cache hit ratio",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "max": 1,
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 36,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(rate(thanos_store_index_cache_hits_total{item_type=\"ExpandedPostings\",cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n/\nsum(rate(thanos_store_index_cache_requests_total{item_type=\"ExpandedPostings\",cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "hit ratio",
                            "legendLink": null
                         }
                      ],
                      "title": "ExpandedPostings cache hit ratio",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "max": 1,
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 37,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_cache_memory_hits_total{name=\"chunks-attributes-cache\",cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n/\nsum(rate(cortex_cache_memory_requests_total{name=\"chunks-attributes-cache\",cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "hit ratio",
                            "legendLink": null
                         }
                      ],
                      "title": "Chunks attributes in-memory cache hit ratio",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "default",
                      "value": "default"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": true,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "namespace",
                   "multi": true,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Queries",
          "uid": "b3abe8d5c040395cc36615cb4334c92d",
          "version": 0
       }
---
# Source: lgtm-distributed/charts/mimir/templates/metamonitoring/grafana-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-reads-networking-dashboard
  namespace: default
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    grafana_dashboard: "1"
  annotations:
    k8s-sidecar-target-directory: /tmp/dashboards/Mimir Dashboards
data:
  mimir-reads-networking.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 1,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(query-frontend|querier|ruler-query-frontend|ruler-querier|mimir-read).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 2,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(query-frontend|querier|ruler-query-frontend|ruler-querier|mimir-read).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 3,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(query-frontend|querier|ruler-query-frontend|ruler-querier|mimir-read).*\"})",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(query-frontend|querier|ruler-query-frontend|ruler-querier|mimir-read).*\"})",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         }
                      ],
                      "title": "Inflight requests (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(query-frontend|querier|ruler-query-frontend|ruler-querier|mimir-read).*\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(query-frontend|querier|ruler-query-frontend|ruler-querier|mimir-read).*\"}))",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_tcp_connections_limit{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(query-frontend|querier|ruler-query-frontend|ruler-querier|mimir-read).*\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "TCP connections (per pod)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Summary",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?query-frontend.*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?query-frontend.*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?query-frontend.*\"})",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?query-frontend.*\"})",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         }
                      ],
                      "title": "Inflight requests (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?query-frontend.*\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?query-frontend.*\"}))",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_tcp_connections_limit{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?query-frontend.*\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "TCP connections (per pod)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Query-frontend",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?query-scheduler.*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 10,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?query-scheduler.*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 11,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?query-scheduler.*\"})",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?query-scheduler.*\"})",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         }
                      ],
                      "title": "Inflight requests (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 12,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?query-scheduler.*\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?query-scheduler.*\"}))",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_tcp_connections_limit{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?query-scheduler.*\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "TCP connections (per pod)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Query-scheduler",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 13,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?querier.*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 14,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?querier.*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 15,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?querier.*\"})",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?querier.*\"})",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         }
                      ],
                      "title": "Inflight requests (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 16,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?querier.*\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?querier.*\"}))",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_tcp_connections_limit{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?querier.*\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "TCP connections (per pod)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Querier",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 17,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?store-gateway.*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 18,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?store-gateway.*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 19,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?store-gateway.*\"})",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?store-gateway.*\"})",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         }
                      ],
                      "title": "Inflight requests (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 20,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?store-gateway.*\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?store-gateway.*\"}))",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_tcp_connections_limit{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?store-gateway.*\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "TCP connections (per pod)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Store-gateway",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 21,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ruler.*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 22,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ruler.*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 23,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ruler.*\"})",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ruler.*\"})",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         }
                      ],
                      "title": "Inflight requests (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 24,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ruler.*\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ruler.*\"}))",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_tcp_connections_limit{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ruler.*\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "TCP connections (per pod)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ruler",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "default",
                      "value": "default"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".*",
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "namespace",
                   "multi": false,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Reads networking",
          "uid": "54b2a0a4748b3bd1aefa92ce5559a1c2",
          "version": 0
       }
---
# Source: lgtm-distributed/charts/mimir/templates/metamonitoring/grafana-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-reads-resources-dashboard
  namespace: default
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    grafana_dashboard: "1"
  annotations:
    k8s-sidecar-target-directory: /tmp/dashboards/Mimir Dashboards
data:
  mimir-reads-resources.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 1,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"query-frontend|querier|ruler-query-frontend|ruler-querier|mimir-read\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 2,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"query-frontend|querier|ruler-query-frontend|ruler-querier|mimir-read\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 3,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"query-frontend|querier|ruler-query-frontend|ruler-querier|mimir-read\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Summary",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"query-frontend\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"query-frontend\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"query-frontend\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"query-frontend\",resource=\"cpu\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"query-frontend\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"query-frontend\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"query-frontend\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"query-frontend\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Query-frontend",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"query-scheduler\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"query-scheduler\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"query-scheduler\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"query-scheduler\",resource=\"cpu\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"query-scheduler\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"query-scheduler\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"query-scheduler\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"query-scheduler\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Query-scheduler",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 10,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"querier\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"querier\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"querier\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"querier\",resource=\"cpu\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 11,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"querier\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"querier\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"querier\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 12,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"querier\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Querier",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 13,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ingester\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ingester\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ingester\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ingester\",resource=\"cpu\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 14,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ingester\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ingester",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 15,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_rss{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ingester\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ingester\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ingester\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (RSS)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 16,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ingester\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ingester\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ingester\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 17,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (cortex_prometheus_rule_group_rules{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Rules",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 18,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler\",resource=\"cpu\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ruler",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 19,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 20,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 21,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"store-gateway\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"store-gateway\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"store-gateway\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"store-gateway\",resource=\"cpu\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 22,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"store-gateway\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Store-gateway",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 23,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_rss{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"store-gateway\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"store-gateway\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"store-gateway\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (RSS)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 24,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"store-gateway\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"store-gateway\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"store-gateway\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 25,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(instance, pod, device) (\n  rate(\n    node_disk_written_bytes_total[$__rate_interval]\n  )\n)\n+\nignoring(pod) group_right() (\n  label_replace(\n    count by(\n      instance,\n      pod,\n      device\n    )\n    (\n      container_fs_writes_bytes_total{\n        cluster=~\"$cluster\", namespace=~\"$namespace\",\n        container=~\"store-gateway\",\n        device!~\".*sda.*\"\n      }\n    ),\n    \"device\",\n    \"$1\",\n    \"device\",\n    \"/dev/(.*)\"\n  ) * 0\n)\n\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}} - {{device}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk writes",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 26,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(instance, pod, device) (\n  rate(\n    node_disk_read_bytes_total[$__rate_interval]\n  )\n) + ignoring(pod) group_right() (\n  label_replace(\n    count by(\n      instance,\n      pod,\n      device\n    )\n    (\n      container_fs_writes_bytes_total{\n        cluster=~\"$cluster\", namespace=~\"$namespace\",\n        container=~\"store-gateway\",\n        device!~\".*sda.*\"\n      }\n    ),\n    \"device\",\n    \"$1\",\n    \"device\",\n    \"/dev/(.*)\"\n  ) * 0\n)\n\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}} - {{device}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk reads",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 27,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(persistentvolumeclaim) (\n  kubelet_volume_stats_used_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"} /\n  kubelet_volume_stats_capacity_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n)\nand\ncount by(persistentvolumeclaim) (\n  kube_persistentvolumeclaim_labels{\n    cluster=~\"$cluster\", namespace=~\"$namespace\",\n    label_name=~\"(store-gateway).*\"\n  }\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{persistentvolumeclaim}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk space utilization",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "default",
                      "value": "default"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".*",
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "namespace",
                   "multi": false,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Reads resources",
          "uid": "cc86fd5aa9301c6528986572ad974db9",
          "version": 0
       }
---
# Source: lgtm-distributed/charts/mimir/templates/metamonitoring/grafana-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-reads-dashboard
  namespace: default
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    grafana_dashboard: "1"
  annotations:
    k8s-sidecar-target-directory: /tmp/dashboards/Mimir Dashboards
data:
  mimir-reads.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "175px",
                "panels": [
                   {
                      "content": "<p>\n  This dashboard shows health metrics for the read path.\n  It is broken into sections for each service on the read path, and organized by the order in which the read request flows.\n  <br/>\n  Incoming queries travel from the gateway → query frontend → query scheduler → querier → ingester and/or store-gateway (depending on the time range of the query).\n  <br/>\n  For each service, there are 3 panels showing (1) requests per second to that service, (2) average, median, and p99 latency of requests to that service, and (3) p99 latency of requests to each instance of that service.\n</p>\n<p>\n  The dashboard also shows metrics for the 4 optional caches that can be deployed:\n  the query results cache, the metadata cache, the chunks cache, and the index cache.\n  <br/>\n  These panels will show “no data” if the caches are not deployed.\n</p>\n<p>\n  Lastly, it also includes metrics for how the ingester and store-gateway interact with object storage.\n</p>\n",
                      "datasource": null,
                      "description": "",
                      "id": 1,
                      "mode": "markdown",
                      "span": 12,
                      "title": "",
                      "transparent": true,
                      "type": "text"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Reads dashboard description",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "100px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "description": "### Instant queries per second\nRate of instant queries per second being made to the system.\nIncludes both queries made to the <tt>/prometheus</tt> API as\nwell as queries from the ruler.\n\n",
                      "fill": 1,
                      "format": "reqps",
                      "id": 2,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 2,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(\n  rate(\n    cortex_request_duration_seconds_count{\n      cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\",\n      route=~\"(prometheus|api_prom)_api_v1_query\"\n    }[$__rate_interval]\n  )\n  or\n  rate(\n    cortex_prometheus_rule_evaluations_total{\n      cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"\n    }[$__rate_interval]\n  )\n)\n",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Instant queries / sec",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "description": "### Range queries per second\nRate of range queries per second being made to\nMimir via the <tt>/prometheus</tt> API.\n\n",
                      "fill": 1,
                      "format": "reqps",
                      "id": 3,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 2,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\",route=~\"(prometheus|api_prom)_api_v1_query_range\"}[$__rate_interval]))",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Range queries / sec",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "description": "### \"Label names\" queries per second\nRate of \"label names\" endpoint queries per second being made to\nMimir via the <tt>/prometheus</tt> API.\n\n",
                      "fill": 1,
                      "format": "reqps",
                      "id": 4,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 2,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\",route=~\"(prometheus|api_prom)_api_v1_labels\"}[$__rate_interval]))",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Label names queries / sec",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "description": "### \"Label values\" queries per second\nRate of specific \"label values\" endpoint queries per second being made to\nMimir via the <tt>/prometheus</tt> API.\n\n",
                      "fill": 1,
                      "format": "reqps",
                      "id": 5,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 2,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\",route=~\"(prometheus|api_prom)_api_v1_label_name_values\"}[$__rate_interval]))",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Label values queries / sec",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "description": "### Series queries per second\nRate of series queries per second being made to\nMimir via the <tt>/prometheus</tt> API.\n\n",
                      "fill": 1,
                      "format": "reqps",
                      "id": 6,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 2,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\",route=~\"(prometheus|api_prom)_api_v1_series\"}[$__rate_interval]))",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Series queries / sec",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Headlines",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "1e3 * sum(cluster_job_route:cortex_request_duration_seconds_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}) / sum(cluster_job_route:cortex_request_duration_seconds_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "displayMode": "hidden",
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "exemplar": true,
                            "expr": "histogram_quantile(0.99, sum by(le, pod) (rate(cortex_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}[$__rate_interval])))",
                            "format": "time_series",
                            "legendFormat": "",
                            "legendLink": null
                         }
                      ],
                      "title": "Per pod p99 latency",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Query-frontend",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Requests / sec\n<p>\n  The query scheduler is an optional service that moves\n  the internal queue from the query-frontend into a\n  separate component.\n  If this service is not deployed,\n  these panels will show \"No data.\"\n</p>\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 10,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_query_scheduler_queue_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Latency (Time in Queue)\n<p>\n  The query scheduler is an optional service that moves\n  the internal queue from the query-frontend into a\n  separate component.\n  If this service is not deployed,\n  these panels will show \"No data.\"\n</p>\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 11,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_query_scheduler_queue_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_query_scheduler_queue_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_query_scheduler_queue_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_query_scheduler_queue_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency (Time in Queue)",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Queue length\n<p>\n  The query scheduler is an optional service that moves\n  the internal queue from the query-frontend into a\n  separate component.\n  If this service is not deployed,\n  these panels will show \"No data.\"\n</p>\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "queries"
                         },
                         "overrides": [ ]
                      },
                      "id": 12,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "displayMode": "hidden",
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "exemplar": true,
                            "expr": "sum(min_over_time(cortex_query_scheduler_queue_length{cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\"}[$__interval]))",
                            "format": "time_series",
                            "legendFormat": "Queue length",
                            "legendLink": null
                         }
                      ],
                      "title": "Queue length",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Query-scheduler",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### 99th Percentile Latency by Queue Dimension\n<p>\n  The query scheduler can optionally create subqueues\n  in order to enforce round-robin query queuing fairness\n  across additional queue dimensions beyond the default.\n\n  By default, query queuing fairness is only applied by tenant ID.\n  Queries without additional queue dimensions are labeled 'none'.\n</p>\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 13,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "label_replace(histogram_quantile(0.99, sum(rate(cortex_query_scheduler_queue_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\"}[$__rate_interval])) by (le, additional_queue_dimensions)) * 1e3, \"additional_queue_dimensions\", \"none\", \"additional_queue_dimensions\", \"^$\")\n",
                            "format": "time_series",
                            "legendFormat": "99th Percentile: {{ additional_queue_dimensions }}",
                            "refId": "A"
                         }
                      ],
                      "title": "99th Percentile Latency by Queue Dimension",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### 50th Percentile Latency by Queue Dimension\n<p>\n  The query scheduler can optionally create subqueues\n  in order to enforce round-robin query queuing fairness\n  across additional queue dimensions beyond the default.\n\n  By default, query queuing fairness is only applied by tenant ID.\n  Queries without additional queue dimensions are labeled 'none'.\n</p>\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 14,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "label_replace(histogram_quantile(0.50, sum(rate(cortex_query_scheduler_queue_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\"}[$__rate_interval])) by (le, additional_queue_dimensions)) * 1e3, \"additional_queue_dimensions\", \"none\", \"additional_queue_dimensions\", \"^$\")\n",
                            "format": "time_series",
                            "legendFormat": "50th Percentile: {{ additional_queue_dimensions }}",
                            "refId": "A"
                         }
                      ],
                      "title": "50th Percentile Latency by Queue Dimension",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Average Latency by Queue Dimension\n<p>\n  The query scheduler can optionally create subqueues\n  in order to enforce round-robin query queuing fairness\n  across additional queue dimensions beyond the default.\n\n  By default, query queuing fairness is only applied by tenant ID.\n  Queries without additional queue dimensions are labeled 'none'.\n</p>\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 15,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "label_replace(sum(rate(cortex_query_scheduler_queue_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\"}[$__rate_interval])) by (additional_queue_dimensions) * 1e3 / sum(rate(cortex_query_scheduler_queue_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\"}[$__rate_interval])) by (additional_queue_dimensions), \"additional_queue_dimensions\", \"none\", \"additional_queue_dimensions\", \"^$\")\n",
                            "format": "time_series",
                            "legendFormat": "Average: {{ additional_queue_dimensions }}",
                            "refId": "C"
                         }
                      ],
                      "title": "Average Latency by Queue Dimension",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Query-scheduler Latency (Time in Queue) Breakout by Additional Queue Dimensions",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ops"
                         },
                         "overrides": [ ]
                      },
                      "id": 16,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum (\n  rate(thanos_memcached_operations_total{name=\"frontend-cache\", cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])\n  or ignoring(backend)\n  rate(thanos_cache_operations_total{name=\"frontend-cache\", cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\"}[$__rate_interval])\n)\n",
                            "format": "time_series",
                            "legendFormat": "Requests/s",
                            "legendLink": null
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 17,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", name=\"frontend-cache\"}[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", name=\"frontend-cache\"}[$__rate_interval])\n) by (le)) * 1e3\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", name=\"frontend-cache\"}[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", name=\"frontend-cache\"}[$__rate_interval])\n) by (le)) * 1e3\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", name=\"frontend-cache\"}[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", name=\"frontend-cache\"}[$__rate_interval])\n) * 1e3\n/\nsum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", name=\"frontend-cache\"}[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", name=\"frontend-cache\"}[$__rate_interval])\n)\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Cache – query results",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 18,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_querier_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 19,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_querier_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum by (le) (cluster_job_route:cortex_querier_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "1e3 * sum(cluster_job_route:cortex_querier_request_duration_seconds_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}) / sum(cluster_job_route:cortex_querier_request_duration_seconds_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 20,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "displayMode": "hidden",
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "exemplar": true,
                            "expr": "histogram_quantile(0.99, sum by(le, pod) (rate(cortex_querier_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}[$__rate_interval])))",
                            "format": "time_series",
                            "legendFormat": "",
                            "legendLink": null
                         }
                      ],
                      "title": "Per pod p99 latency",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Querier",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 21,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\",route=~\"/cortex.Ingester/(QueryStream|QueryExemplars|LabelValues|LabelNames|UserStats|AllUserStats|MetricsForLabelMatchers|MetricsMetadata|LabelNamesAndValues|LabelValuesCardinality|ActiveSeries)\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 22,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=~\"/cortex.Ingester/(QueryStream|QueryExemplars|LabelValues|LabelNames|UserStats|AllUserStats|MetricsForLabelMatchers|MetricsMetadata|LabelNamesAndValues|LabelValuesCardinality|ActiveSeries)\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=~\"/cortex.Ingester/(QueryStream|QueryExemplars|LabelValues|LabelNames|UserStats|AllUserStats|MetricsForLabelMatchers|MetricsMetadata|LabelNamesAndValues|LabelValuesCardinality|ActiveSeries)\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "1e3 * sum(cluster_job_route:cortex_request_duration_seconds_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=~\"/cortex.Ingester/(QueryStream|QueryExemplars|LabelValues|LabelNames|UserStats|AllUserStats|MetricsForLabelMatchers|MetricsMetadata|LabelNamesAndValues|LabelValuesCardinality|ActiveSeries)\"}) / sum(cluster_job_route:cortex_request_duration_seconds_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=~\"/cortex.Ingester/(QueryStream|QueryExemplars|LabelValues|LabelNames|UserStats|AllUserStats|MetricsForLabelMatchers|MetricsMetadata|LabelNamesAndValues|LabelValuesCardinality|ActiveSeries)\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 23,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "displayMode": "hidden",
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "exemplar": true,
                            "expr": "histogram_quantile(0.99, sum by(le, pod) (rate(cortex_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=~\"/cortex.Ingester/(QueryStream|QueryExemplars|LabelValues|LabelNames|UserStats|AllUserStats|MetricsForLabelMatchers|MetricsMetadata|LabelNamesAndValues|LabelValuesCardinality|ActiveSeries)\"}[$__rate_interval])))",
                            "format": "time_series",
                            "legendFormat": "",
                            "legendLink": null
                         }
                      ],
                      "title": "Per pod p99 latency",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ingester",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 24,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",route=~\"/gatewaypb.StoreGateway/.*\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 25,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\", route=~\"/gatewaypb.StoreGateway/.*\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\", route=~\"/gatewaypb.StoreGateway/.*\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "1e3 * sum(cluster_job_route:cortex_request_duration_seconds_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\", route=~\"/gatewaypb.StoreGateway/.*\"}) / sum(cluster_job_route:cortex_request_duration_seconds_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\", route=~\"/gatewaypb.StoreGateway/.*\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 26,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "displayMode": "hidden",
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "exemplar": true,
                            "expr": "histogram_quantile(0.99, sum by(le, pod) (rate(cortex_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\", route=~\"/gatewaypb.StoreGateway/.*\"}[$__rate_interval])))",
                            "format": "time_series",
                            "legendFormat": "",
                            "legendLink": null
                         }
                      ],
                      "title": "Per pod p99 latency",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Store-gateway",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Replicas\nThe maximum, and current number of querier replicas.\nPlease note that the current number of replicas can still show 1 replica even when scaled to 0.\nSince HPA never reports 0 replicas, the query will report 0 only if the HPA is not active.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Max .+/"
                               },
                               "properties": [
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Current .+/"
                               },
                               "properties": [
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Min .+/"
                               },
                               "properties": [
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 27,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by (scaletargetref_name) (\n  kube_horizontalpodautoscaler_spec_max_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-querier\"}\n  # Add the scaletargetref_name label which is more readable than \"kube-hpa-...\"\n  + on (cluster, namespace, horizontalpodautoscaler) group_left (scaletargetref_name)\n    0*kube_horizontalpodautoscaler_info{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-querier\"}\n)\n",
                            "format": "time_series",
                            "legendFormat": "Max {{ scaletargetref_name }}",
                            "legendLink": null
                         },
                         {
                            "expr": "max by (scaletargetref_name) (\n  kube_horizontalpodautoscaler_status_current_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-querier\"}\n  # HPA doesn't go to 0 replicas, so we multiply by 0 if the HPA is not active.\n  * on (cluster, namespace, horizontalpodautoscaler)\n    kube_horizontalpodautoscaler_status_condition{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-querier\", condition=\"ScalingActive\", status=\"true\"}\n  # Add the scaletargetref_name label which is more readable than \"kube-hpa-...\"\n  + on (cluster, namespace, horizontalpodautoscaler) group_left (scaletargetref_name)\n    0*kube_horizontalpodautoscaler_info{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-querier\"}\n)\n",
                            "format": "time_series",
                            "legendFormat": "Current {{ scaletargetref_name }}",
                            "legendLink": null
                         },
                         {
                            "expr": "max by (scaletargetref_name) (\n  kube_horizontalpodautoscaler_spec_min_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-querier\"}\n  # Add the scaletargetref_name label which is more readable than \"kube-hpa-...\"\n  + on (cluster, namespace, horizontalpodautoscaler) group_left (scaletargetref_name)\n    0*kube_horizontalpodautoscaler_info{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-querier\"}\n)\n",
                            "format": "time_series",
                            "legendFormat": "Min {{ scaletargetref_name }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Replicas",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Scaling metric (desired replicas)\nThis panel shows the result scaling metric exposed by KEDA divided by the target/threshold used.\nIt should represent the desired number of replicas, ignoring the min/max constraints which are applied later.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 28,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by (scaler) (\n  label_replace(\n    keda_scaler_metrics_value{cluster=~\"$cluster\", exported_namespace=~\"$namespace\"},\n    \"namespace\", \"$1\", \"exported_namespace\", \"(.*)\"\n  )\n  /\n  on(cluster, namespace, scaledObject, metric) group_left\n  label_replace(label_replace(\n      kube_horizontalpodautoscaler_spec_target_metric{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-querier\"},\n      \"metric\", \"$1\", \"metric_name\", \"(.+)\"\n  ), \"scaledObject\", \"$1\", \"horizontalpodautoscaler\", \"keda-hpa-(.*)\")\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{ scaler }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Scaling metric (desired replicas)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Autoscaler failures rate\nThe rate of failures in the KEDA custom metrics API server. Whenever an error occurs, the KEDA custom\nmetrics server is unable to query the scaling metric from Prometheus so the autoscaler woudln't work properly.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 29,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(cluster, namespace, scaler, metric, scaledObject) (\n  label_replace(\n    rate(keda_scaler_errors[$__rate_interval]),\n    \"namespace\", \"$1\", \"exported_namespace\", \"(.+)\"\n  )\n) +\non(cluster, namespace, metric, scaledObject) group_left\nlabel_replace(\n  label_replace(\n      kube_horizontalpodautoscaler_spec_target_metric{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-querier\"} * 0,\n      \"scaledObject\", \"$1\", \"horizontalpodautoscaler\", \"keda-hpa-(.*)\"\n  ),\n  \"metric\", \"$1\", \"metric_name\", \"(.+)\"\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{scaler}} failures",
                            "legendLink": null
                         }
                      ],
                      "title": "Autoscaler failures rate",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Querier - autoscaling",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 30,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\", kv_name=~\"store-gateway\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 31,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\", kv_name=~\"store-gateway\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\", kv_name=~\"store-gateway\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_kv_request_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\", kv_name=~\"store-gateway\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\", kv_name=~\"store-gateway\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Store-gateway – key-value store for store-gateways ring",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ops"
                         },
                         "overrides": [ ]
                      },
                      "id": 32,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(operation) (\n  # Backwards compatibility\n  rate(\n    thanos_memcached_operations_total{\n      component=\"store-gateway\",\n      name=\"index-cache\",\n      cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"\n    }[$__rate_interval]\n  )\n  or ignoring(backend)\n  rate(\n    thanos_cache_operations_total{\n      component=\"store-gateway\",\n      name=\"index-cache\",\n      cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"\n    }[$__rate_interval]\n  )\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 33,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"index-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"index-cache\"\n}\n[$__rate_interval])\n) by (le)) * 1e3\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"index-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"index-cache\"\n}\n[$__rate_interval])\n) by (le)) * 1e3\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_sum{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"index-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_sum{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"index-cache\"\n}\n[$__rate_interval])\n) * 1e3\n/\nsum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_count{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"index-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_count{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"index-cache\"\n}\n[$__rate_interval])\n)\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency (getmulti)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Hit ratio\nEven if you do not set up memcached for the blocks index cache, you will still see data in this panel because the store-gateway by default has an\nin-memory blocks index cache.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 34,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(item_type) (\n  rate(\n    thanos_store_index_cache_hits_total{\n      component=\"store-gateway\",\n      cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"\n    }[$__rate_interval]\n  )\n)\n/\nsum by(item_type) (\n  rate(\n    thanos_store_index_cache_requests_total{\n      component=\"store-gateway\",\n      cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\"\n    }[$__rate_interval]\n  )\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{item_type}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Hit ratio",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Memcached – block index cache (store-gateway accesses)",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ops"
                         },
                         "overrides": [ ]
                      },
                      "id": 35,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(operation) (\n  # Backwards compatibility\n  rate(thanos_memcached_operations_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"chunks-cache\"\n  }[$__rate_interval])\n  or ignoring(backend)\n  rate(thanos_cache_operations_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"chunks-cache\"\n  }[$__rate_interval])\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 36,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"chunks-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"chunks-cache\"\n}\n[$__rate_interval])\n) by (le)) * 1e3\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"chunks-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"chunks-cache\"\n}\n[$__rate_interval])\n) by (le)) * 1e3\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_sum{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"chunks-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_sum{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"chunks-cache\"\n}\n[$__rate_interval])\n) * 1e3\n/\nsum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_count{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"chunks-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_count{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"chunks-cache\"\n}\n[$__rate_interval])\n)\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency (getmulti)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 37,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(\n  # Backwards compatibility\n  rate(thanos_cache_memcached_hits_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"chunks-cache\"\n  }[$__rate_interval])\n  or\n  rate(thanos_cache_hits_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"chunks-cache\"\n  }[$__rate_interval])\n)\n/\nsum(\n  # Backwards compatibility\n  rate(thanos_cache_memcached_requests_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"chunks-cache\"\n  }[$__rate_interval])\n  or\n  rate(thanos_cache_requests_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"chunks-cache\"\n  }[$__rate_interval])\n)\n",
                            "format": "time_series",
                            "legendFormat": "items",
                            "legendLink": null
                         }
                      ],
                      "title": "Hit ratio",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Memcached – chunks cache (store-gateway accesses)",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ops"
                         },
                         "overrides": [ ]
                      },
                      "id": 38,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(operation) (\n  # Backwards compatibility\n  rate(thanos_memcached_operations_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n  or ignoring(backend)\n  rate(thanos_cache_operations_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 39,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n) by (le)) * 1e3\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n) by (le)) * 1e3\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_sum{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_sum{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n) * 1e3\n/\nsum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_count{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_count{\n  cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n  operation=\"getmulti\",\n  component=\"store-gateway\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n)\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency (getmulti)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 40,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(\n  # Backwards compatibility\n  rate(thanos_cache_memcached_hits_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n  or\n  rate(thanos_cache_hits_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n)\n/\nsum(\n  # Backwards compatibility\n  rate(thanos_cache_memcached_requests_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n  or\n  rate(thanos_cache_requests_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((store-gateway.*|cortex|mimir|mimir-backend.*))\",\n    component=\"store-gateway\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n)\n",
                            "format": "time_series",
                            "legendFormat": "items",
                            "legendLink": null
                         }
                      ],
                      "title": "Hit ratio",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Memcached – metadata cache (store-gateway accesses)",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ops"
                         },
                         "overrides": [ ]
                      },
                      "id": 41,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(operation) (\n  # Backwards compatibility\n  rate(thanos_memcached_operations_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\",\n    component=\"querier\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n  or ignoring(backend)\n  rate(thanos_cache_operations_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\",\n    component=\"querier\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 42,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\",\n  operation=\"getmulti\",\n  component=\"querier\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\",\n  operation=\"getmulti\",\n  component=\"querier\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n) by (le)) * 1e3\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\",\n  operation=\"getmulti\",\n  component=\"querier\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_bucket{\n  cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\",\n  operation=\"getmulti\",\n  component=\"querier\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n) by (le)) * 1e3\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_sum{\n  cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\",\n  operation=\"getmulti\",\n  component=\"querier\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_sum{\n  cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\",\n  operation=\"getmulti\",\n  component=\"querier\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n) * 1e3\n/\nsum(\n  # Backwards compatibility\n  rate(thanos_memcached_operation_duration_seconds_count{\n  cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\",\n  operation=\"getmulti\",\n  component=\"querier\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n  or\n  rate(thanos_cache_operation_duration_seconds_count{\n  cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\",\n  operation=\"getmulti\",\n  component=\"querier\",\n  name=\"metadata-cache\"\n}\n[$__rate_interval])\n)\n",
                            "format": "time_series",
                            "intervalFactor": 2,
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency (getmulti)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 43,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(\n  # Backwards compatibility\n  rate(thanos_cache_memcached_hits_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\",\n    component=\"querier\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n  or\n  rate(thanos_cache_hits_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\",\n    component=\"querier\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n)\n/\nsum(\n  # Backwards compatibility\n  rate(thanos_cache_memcached_requests_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\",\n    component=\"querier\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n  or\n  rate(thanos_cache_requests_total{\n    cluster=~\"$cluster\", job=~\"($namespace)/((querier.*|cortex|mimir|mimir-read.*))\",\n    component=\"querier\",\n    name=\"metadata-cache\"\n  }[$__rate_interval])\n)\n",
                            "format": "time_series",
                            "legendFormat": "items",
                            "legendLink": null
                         }
                      ],
                      "title": "Hit ratio",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Memcached – metadata cache (querier accesses)",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [ ]
                      },
                      "id": 44,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Operations / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "max": 1,
                            "min": 0,
                            "noValue": "0",
                            "unit": "percentunit"
                         }
                      },
                      "id": 45,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(operation) (rate(thanos_objstore_bucket_operation_failures_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\"}[$__rate_interval])) / sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\"}[$__rate_interval])) >= 0",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Error rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 46,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"attributes\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"attributes\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Attributes",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 47,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"exists\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"exists\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Exists",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Blocks object store (store-gateway accesses)",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 48,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"get\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"get\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Get",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 49,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"get_range\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"get_range\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: GetRange",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 50,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"upload\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"upload\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Upload",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 51,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"delete\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"store-gateway\",operation=\"delete\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Delete",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [ ]
                      },
                      "id": 52,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Operations / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "max": 1,
                            "min": 0,
                            "noValue": "0",
                            "unit": "percentunit"
                         }
                      },
                      "id": 53,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(operation) (rate(thanos_objstore_bucket_operation_failures_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\"}[$__rate_interval])) / sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\"}[$__rate_interval])) >= 0",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Error rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 54,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"attributes\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"attributes\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Attributes",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 55,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"exists\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"exists\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Exists",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Blocks object store (querier accesses)",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 56,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"get\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"get\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Get",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 57,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"get_range\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"get_range\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: GetRange",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 58,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"upload\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"upload\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Upload",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 59,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"delete\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"querier\",operation=\"delete\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Delete",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "default",
                      "value": "default"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": true,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "namespace",
                   "multi": true,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Reads",
          "uid": "e327503188913dc38ad571c647eef643",
          "version": 0
       }
---
# Source: lgtm-distributed/charts/mimir/templates/metamonitoring/grafana-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-remote-ruler-reads-networking-dashboard
  namespace: default
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    grafana_dashboard: "1"
  annotations:
    k8s-sidecar-target-directory: /tmp/dashboards/Mimir Dashboards
data:
  mimir-remote-ruler-reads-networking.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 1,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(ruler-query-frontend|ruler-query-scheduler|ruler-querier).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 2,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(ruler-query-frontend|ruler-query-scheduler|ruler-querier).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 3,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(ruler-query-frontend|ruler-query-scheduler|ruler-querier).*\"})",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(ruler-query-frontend|ruler-query-scheduler|ruler-querier).*\"})",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         }
                      ],
                      "title": "Inflight requests (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(ruler-query-frontend|ruler-query-scheduler|ruler-querier).*\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(ruler-query-frontend|ruler-query-scheduler|ruler-querier).*\"}))",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_tcp_connections_limit{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(ruler-query-frontend|ruler-query-scheduler|ruler-querier).*\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "TCP connections (per pod)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Summary",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ruler-query-frontend.*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ruler-query-frontend.*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ruler-query-frontend.*\"})",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ruler-query-frontend.*\"})",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         }
                      ],
                      "title": "Inflight requests (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ruler-query-frontend.*\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ruler-query-frontend.*\"}))",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_tcp_connections_limit{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ruler-query-frontend.*\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "TCP connections (per pod)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ruler-query-frontend",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ruler-query-scheduler.*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 10,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ruler-query-scheduler.*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 11,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ruler-query-scheduler.*\"})",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ruler-query-scheduler.*\"})",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         }
                      ],
                      "title": "Inflight requests (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 12,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ruler-query-scheduler.*\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ruler-query-scheduler.*\"}))",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_tcp_connections_limit{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ruler-query-scheduler.*\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "TCP connections (per pod)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ruler-query-scheduler",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 13,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ruler-querier.*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 14,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ruler-querier.*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 15,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ruler-querier.*\"})",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ruler-querier.*\"})",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         }
                      ],
                      "title": "Inflight requests (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 16,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ruler-querier.*\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ruler-querier.*\"}))",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_tcp_connections_limit{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ruler-querier.*\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "TCP connections (per pod)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ruler-querier",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "default",
                      "value": "default"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".*",
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "namespace",
                   "multi": false,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Remote ruler reads networking",
          "uid": "9e8cfff65f91632f8a25981c6fe44bc9",
          "version": 0
       }
---
# Source: lgtm-distributed/charts/mimir/templates/metamonitoring/grafana-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-remote-ruler-reads-resources-dashboard
  namespace: default
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    grafana_dashboard: "1"
  annotations:
    k8s-sidecar-target-directory: /tmp/dashboards/Mimir Dashboards
data:
  mimir-remote-ruler-reads-resources.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 1,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler-query-frontend\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler-query-frontend\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler-query-frontend\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler-query-frontend\",resource=\"cpu\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 2,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler-query-frontend\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler-query-frontend\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler-query-frontend\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 3,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler-query-frontend\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ruler-query-frontend",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler-query-scheduler\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler-query-scheduler\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler-query-scheduler\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler-query-scheduler\",resource=\"cpu\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler-query-scheduler\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler-query-scheduler\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler-query-scheduler\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler-query-scheduler\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ruler-query-scheduler",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler-querier\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler-querier\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler-querier\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler-querier\",resource=\"cpu\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler-querier\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler-querier\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler-querier\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ruler-querier\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ruler-querier",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "default",
                      "value": "default"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".*",
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "namespace",
                   "multi": false,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Remote ruler reads resources",
          "uid": "1940f6ef765a506a171faa2056c956c3",
          "version": 0
       }
---
# Source: lgtm-distributed/charts/mimir/templates/metamonitoring/grafana-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-remote-ruler-reads-dashboard
  namespace: default
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    grafana_dashboard: "1"
  annotations:
    k8s-sidecar-target-directory: /tmp/dashboards/Mimir Dashboards
data:
  mimir-remote-ruler-reads.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "175px",
                "panels": [
                   {
                      "content": "<p>\n  This dashboard shows health metrics for the ruler read path when remote operational mode is enabled.\n  It is broken into sections for each service on the ruler read path, and organized by the order in which the read request flows.\n  <br/>\n  For each service, there are three panels showing (1) requests per second to that service, (2) average, median, and p99 latency of requests to that service, and (3) p99 latency of requests to each instance of that service.\n</p>\n",
                      "datasource": null,
                      "description": "",
                      "id": 1,
                      "mode": "markdown",
                      "span": 12,
                      "title": "",
                      "transparent": true,
                      "type": "text"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Remote ruler reads dashboard description",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "100px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "description": "### Evaluations per second\nRate of rule expressions evaluated per second.\n\n",
                      "fill": 1,
                      "format": "reqps",
                      "id": 2,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 12,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(\n  rate(\n    cortex_request_duration_seconds_count{\n      cluster=~\"$cluster\", job=~\"($namespace)/((ruler-query-frontend.*))\",\n      route=~\"/httpgrpc.HTTP/Handle|.*api_v1_query\"\n    }[$__rate_interval]\n  )\n)\n",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Evaluations / sec",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Headlines",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 3,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler-query-frontend.*))\", route=~\"/httpgrpc.HTTP/Handle|.*api_v1_query\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 4,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ruler-query-frontend.*))\", route=~\"/httpgrpc.HTTP/Handle|.*api_v1_query\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ruler-query-frontend.*))\", route=~\"/httpgrpc.HTTP/Handle|.*api_v1_query\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "1e3 * sum(cluster_job_route:cortex_request_duration_seconds_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ruler-query-frontend.*))\", route=~\"/httpgrpc.HTTP/Handle|.*api_v1_query\"}) / sum(cluster_job_route:cortex_request_duration_seconds_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ruler-query-frontend.*))\", route=~\"/httpgrpc.HTTP/Handle|.*api_v1_query\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "displayMode": "hidden",
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "exemplar": true,
                            "expr": "histogram_quantile(0.99, sum by(le, pod) (rate(cortex_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ruler-query-frontend.*))\", route=~\"/httpgrpc.HTTP/Handle|.*api_v1_query\"}[$__rate_interval])))",
                            "format": "time_series",
                            "legendFormat": "",
                            "legendLink": null
                         }
                      ],
                      "title": "Per pod p99 latency",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ruler-query-frontend",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Requests / sec\n<p>\n  The query scheduler is an optional service that moves\n  the internal queue from the query-frontend into a\n  separate component.\n  If this service is not deployed,\n  these panels will show \"No data.\"\n</p>\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_query_scheduler_queue_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler-query-scheduler.*))\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Latency (Time in Queue)\n<p>\n  The query scheduler is an optional service that moves\n  the internal queue from the query-frontend into a\n  separate component.\n  If this service is not deployed,\n  these panels will show \"No data.\"\n</p>\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 7,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_query_scheduler_queue_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ruler-query-scheduler.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_query_scheduler_queue_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ruler-query-scheduler.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_query_scheduler_queue_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((ruler-query-scheduler.*))\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_query_scheduler_queue_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler-query-scheduler.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency (Time in Queue)",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Queue length\n<p>\n  The query scheduler is an optional service that moves\n  the internal queue from the query-frontend into a\n  separate component.\n  If this service is not deployed,\n  these panels will show \"No data.\"\n</p>\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "queries"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "displayMode": "hidden",
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "exemplar": true,
                            "expr": "sum(min_over_time(cortex_query_scheduler_queue_length{cluster=~\"$cluster\", job=~\"($namespace)/((ruler-query-scheduler.*))\"}[$__interval]))",
                            "format": "time_series",
                            "legendFormat": "Queue length",
                            "legendLink": null
                         }
                      ],
                      "title": "Queue length",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ruler-query-scheduler",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### 99th Percentile Latency by Queue Dimension\n<p>\n  The query scheduler can optionally create subqueues\n  in order to enforce round-robin query queuing fairness\n  across additional queue dimensions beyond the default.\n\n  By default, query queuing fairness is only applied by tenant ID.\n  Queries without additional queue dimensions are labeled 'none'.\n</p>\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "label_replace(histogram_quantile(0.99, sum(rate(cortex_query_scheduler_queue_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ruler-query-scheduler.*))\"}[$__rate_interval])) by (le, additional_queue_dimensions)) * 1e3, \"additional_queue_dimensions\", \"none\", \"additional_queue_dimensions\", \"^$\")\n",
                            "format": "time_series",
                            "legendFormat": "99th Percentile: {{ additional_queue_dimensions }}",
                            "refId": "A"
                         }
                      ],
                      "title": "99th Percentile Latency by Queue Dimension",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### 50th Percentile Latency by Queue Dimension\n<p>\n  The query scheduler can optionally create subqueues\n  in order to enforce round-robin query queuing fairness\n  across additional queue dimensions beyond the default.\n\n  By default, query queuing fairness is only applied by tenant ID.\n  Queries without additional queue dimensions are labeled 'none'.\n</p>\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 10,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "label_replace(histogram_quantile(0.50, sum(rate(cortex_query_scheduler_queue_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ruler-query-scheduler.*))\"}[$__rate_interval])) by (le, additional_queue_dimensions)) * 1e3, \"additional_queue_dimensions\", \"none\", \"additional_queue_dimensions\", \"^$\")\n",
                            "format": "time_series",
                            "legendFormat": "50th Percentile: {{ additional_queue_dimensions }}",
                            "refId": "A"
                         }
                      ],
                      "title": "50th Percentile Latency by Queue Dimension",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Average Latency by Queue Dimension\n<p>\n  The query scheduler can optionally create subqueues\n  in order to enforce round-robin query queuing fairness\n  across additional queue dimensions beyond the default.\n\n  By default, query queuing fairness is only applied by tenant ID.\n  Queries without additional queue dimensions are labeled 'none'.\n</p>\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 11,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "label_replace(sum(rate(cortex_query_scheduler_queue_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((ruler-query-scheduler.*))\"}[$__rate_interval])) by (additional_queue_dimensions) * 1e3 / sum(rate(cortex_query_scheduler_queue_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler-query-scheduler.*))\"}[$__rate_interval])) by (additional_queue_dimensions), \"additional_queue_dimensions\", \"none\", \"additional_queue_dimensions\", \"^$\")\n",
                            "format": "time_series",
                            "legendFormat": "Average: {{ additional_queue_dimensions }}",
                            "refId": "C"
                         }
                      ],
                      "title": "Average Latency by Queue Dimension",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ruler-query-scheduler Latency (Time in Queue) Breakout by Additional Queue Dimensions",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 12,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_querier_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler-querier.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 13,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_querier_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ruler-querier.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum by (le) (cluster_job_route:cortex_querier_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ruler-querier.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "1e3 * sum(cluster_job_route:cortex_querier_request_duration_seconds_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ruler-querier.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}) / sum(cluster_job_route:cortex_querier_request_duration_seconds_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ruler-querier.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 14,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "displayMode": "hidden",
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "exemplar": true,
                            "expr": "histogram_quantile(0.99, sum by(le, pod) (rate(cortex_querier_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ruler-querier.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}[$__rate_interval])))",
                            "format": "time_series",
                            "legendFormat": "",
                            "legendLink": null
                         }
                      ],
                      "title": "Per pod p99 latency",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ruler-querier",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Replicas\nThe maximum and current number of ruler-querier replicas.\nNote: The current number of replicas can still show 1 replica even when scaled to 0.\nBecause HPA never reports 0 replicas, the query will report 0 only if the HPA is not active.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Max .+/"
                               },
                               "properties": [
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Current .+/"
                               },
                               "properties": [
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Min .+/"
                               },
                               "properties": [
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 15,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "max by (scaletargetref_name) (\n  kube_horizontalpodautoscaler_spec_max_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-ruler-querier\"}\n  # Add the scaletargetref_name label for readability\n  + on (cluster, namespace, horizontalpodautoscaler) group_left (scaletargetref_name)\n    0*kube_horizontalpodautoscaler_info{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-ruler-querier\"}\n)\n",
                            "format": "time_series",
                            "legendFormat": "Max {{ scaletargetref_name }}",
                            "legendLink": null
                         },
                         {
                            "expr": "max by (scaletargetref_name) (\n  kube_horizontalpodautoscaler_status_current_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-ruler-querier\"}\n  # HPA doesn't go to 0 replicas, so we multiply by 0 if the HPA is not active\n  * on (cluster, namespace, horizontalpodautoscaler)\n    kube_horizontalpodautoscaler_status_condition{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-ruler-querier\", condition=\"ScalingActive\", status=\"true\"}\n  # Add the scaletargetref_name label for readability\n  + on (cluster, namespace, horizontalpodautoscaler) group_left (scaletargetref_name)\n    0*kube_horizontalpodautoscaler_info{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-ruler-querier\"}\n)\n",
                            "format": "time_series",
                            "legendFormat": "Current {{ scaletargetref_name }}",
                            "legendLink": null
                         },
                         {
                            "expr": "max by (scaletargetref_name) (\n  kube_horizontalpodautoscaler_spec_min_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-ruler-querier\"}\n  # Add the scaletargetref_name label for readability\n  + on (cluster, namespace, horizontalpodautoscaler) group_left (scaletargetref_name)\n    0*kube_horizontalpodautoscaler_info{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-ruler-querier\"}\n)\n",
                            "format": "time_series",
                            "legendFormat": "Min {{ scaletargetref_name }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Replicas",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Autoscaler failures rate\nThe rate of failures in the KEDA custom metrics API server. Whenever an error occurs, the KEDA custom\nmetrics server is unable to query the scaling metric from Prometheus so the autoscaler woudln't work properly.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 16,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(cluster, namespace, scaler, metric, scaledObject) (\n  label_replace(\n    rate(keda_scaler_errors[$__rate_interval]),\n    \"namespace\", \"$1\", \"exported_namespace\", \"(.+)\"\n  )\n) +\non(cluster, namespace, metric, scaledObject) group_left\nlabel_replace(\n  label_replace(\n      kube_horizontalpodautoscaler_spec_target_metric{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-ruler-querier\"} * 0,\n      \"scaledObject\", \"$1\", \"horizontalpodautoscaler\", \"keda-hpa-(.*)\"\n  ),\n  \"metric\", \"$1\", \"metric_name\", \"(.+)\"\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{scaler}} failures",
                            "legendLink": null
                         }
                      ],
                      "title": "Autoscaler failures rate",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ruler-querier - autoscaling",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Scaling metric (CPU): Desired replicas\nThis panel shows the scaling metric exposed by KEDA divided by the target/threshold used.\nIt should represent the desired number of replicas, ignoring the min/max constraints applied later.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 17,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by (scaler) (\n  label_replace(\n    keda_scaler_metrics_value{cluster=~\"$cluster\", exported_namespace=~\"$namespace\", scaler=~\".*cpu.*\"},\n    \"namespace\", \"$1\", \"exported_namespace\", \"(.*)\"\n  )\n  /\n  on(cluster, namespace, scaledObject, metric) group_left label_replace(\n    label_replace(\n      kube_horizontalpodautoscaler_spec_target_metric{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-ruler-querier\"},\n      \"metric\", \"$1\", \"metric_name\", \"(.+)\"\n    ),\n    \"scaledObject\", \"$1\", \"horizontalpodautoscaler\", \"keda-hpa-(.*)\"\n  )\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{ scaler }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Scaling metric (CPU): Desired replicas",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Scaling metric (memory): Desired replicas\nThis panel shows the scaling metric exposed by KEDA divided by the target/threshold used.\nIt should represent the desired number of replicas, ignoring the min/max constraints applied later.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 18,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by (scaler) (\n  label_replace(\n    keda_scaler_metrics_value{cluster=~\"$cluster\", exported_namespace=~\"$namespace\", scaler=~\".*memory.*\"},\n    \"namespace\", \"$1\", \"exported_namespace\", \"(.*)\"\n  )\n  /\n  on(cluster, namespace, scaledObject, metric) group_left label_replace(\n    label_replace(\n      kube_horizontalpodautoscaler_spec_target_metric{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-ruler-querier\"},\n      \"metric\", \"$1\", \"metric_name\", \"(.+)\"\n    ),\n    \"scaledObject\", \"$1\", \"horizontalpodautoscaler\", \"keda-hpa-(.*)\"\n  )\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{ scaler }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Scaling metric (memory): Desired replicas",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Scaling metric (in-flight queries): Desired replicas\nThis panel shows the scaling metric exposed by KEDA divided by the target/threshold used.\nIt should represent the desired number of replicas, ignoring the min/max constraints applied later.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 19,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by (scaler) (\n  label_replace(\n    keda_scaler_metrics_value{cluster=~\"$cluster\", exported_namespace=~\"$namespace\", scaler=~\".*queries.*\"},\n    \"namespace\", \"$1\", \"exported_namespace\", \"(.*)\"\n  )\n  /\n  on(cluster, namespace, scaledObject, metric) group_left label_replace(\n    label_replace(\n      kube_horizontalpodautoscaler_spec_target_metric{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-ruler-querier\"},\n      \"metric\", \"$1\", \"metric_name\", \"(.+)\"\n    ),\n    \"scaledObject\", \"$1\", \"horizontalpodautoscaler\", \"keda-hpa-(.*)\"\n  )\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{ scaler }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Scaling metric (in-flight queries): Desired replicas",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "default",
                      "value": "default"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": true,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "namespace",
                   "multi": true,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Remote ruler reads",
          "uid": "f103238f7f5ab2f1345ce650cbfbfe2f",
          "version": 0
       }
---
# Source: lgtm-distributed/charts/mimir/templates/metamonitoring/grafana-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-rollout-progress-dashboard
  namespace: default
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    grafana_dashboard: "1"
  annotations:
    k8s-sidecar-target-directory: /tmp/dashboards/Mimir Dashboards
data:
  mimir-rollout-progress.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "panels": [
             {
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "color": {
                         "mode": "thresholds"
                      },
                      "custom": {
                         "axisCenteredZero": false,
                         "axisColorMode": "text",
                         "axisLabel": "",
                         "axisPlacement": "auto",
                         "fillOpacity": 80,
                         "gradientMode": "none",
                         "hideFrom": {
                            "legend": false,
                            "tooltip": false,
                            "viz": false
                         },
                         "lineWidth": 1,
                         "scaleDistribution": {
                            "type": "linear"
                         },
                         "thresholdsStyle": {
                            "mode": "off"
                         }
                      },
                      "mappings": [ ],
                      "max": 1,
                      "min": 0,
                      "thresholds": {
                         "mode": "absolute",
                         "steps": [ ]
                      },
                      "unit": "percentunit"
                   },
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Ready"
                         },
                         "properties": [
                            {
                               "id": "color",
                               "value": {
                                  "fixedColor": "green",
                                  "mode": "fixed"
                               }
                            }
                         ]
                      },
                      {
                         "matcher": {
                            "id": "byName",
                            "options": "Updated"
                         },
                         "properties": [
                            {
                               "id": "color",
                               "value": {
                                  "fixedColor": "blue",
                                  "mode": "fixed"
                               }
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 13,
                   "w": 10,
                   "x": 0,
                   "y": 0
                },
                "id": 1,
                "links": [ ],
                "options": {
                   "barRadius": 0,
                   "barWidth": 0.96999999999999997,
                   "fullHighlight": false,
                   "groupWidth": 0.69999999999999996,
                   "legend": {
                      "calcs": [ ],
                      "displayMode": "list",
                      "placement": "bottom",
                      "showLegend": true
                   },
                   "orientation": "horizontal",
                   "showValue": "auto",
                   "stacking": "none",
                   "tooltip": {
                      "mode": "multi",
                      "sort": "none"
                   },
                   "xField": "Workload",
                   "xTickLabelRotation": 0,
                   "xTickLabelSpacing": 0
                },
                "targets": [
                   {
                      "expr": "(\n  sum by (workload) (\n    label_replace(label_replace(label_replace(\n      kube_deployment_status_replicas_updated{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n      or\n      kube_statefulset_status_replicas_updated{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n    , \"workload\", \"$1\", \"deployment\", \"(.+)\"), \"workload\", \"$1\", \"statefulset\", \"(.+)\"), \"workload\", \"$1\", \"workload\", \"(.*?)(?:-zone-[a-z])?\")\n  )\n  /\n  sum by (workload) (\n    label_replace(label_replace(label_replace(\n      kube_deployment_status_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n      or\n      kube_statefulset_status_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n    , \"workload\", \"$1\", \"deployment\", \"(.+)\"), \"workload\", \"$1\", \"statefulset\", \"(.+)\"), \"workload\", \"$1\", \"workload\", \"(.*?)(?:-zone-[a-z])?\")\n  )\n) and (\n  sum by (workload) (\n    label_replace(label_replace(label_replace(\n      kube_deployment_status_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n      or\n      kube_statefulset_status_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n    , \"workload\", \"$1\", \"deployment\", \"(.+)\"), \"workload\", \"$1\", \"statefulset\", \"(.+)\"), \"workload\", \"$1\", \"workload\", \"(.*?)(?:-zone-[a-z])?\")\n  )\n  > 0\n)\n",
                      "format": "table",
                      "instant": true,
                      "intervalFactor": null,
                      "legendFormat": "__auto",
                      "legendLink": null,
                      "step": null
                   },
                   {
                      "expr": "(\n  sum by (workload) (\n    label_replace(label_replace(label_replace(\n      kube_deployment_status_replicas_ready{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n      or\n      kube_statefulset_status_replicas_ready{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n    , \"workload\", \"$1\", \"deployment\", \"(.+)\"), \"workload\", \"$1\", \"statefulset\", \"(.+)\"), \"workload\", \"$1\", \"workload\", \"(.*?)(?:-zone-[a-z])?\")\n  )\n  /\n  sum by (workload) (\n    label_replace(label_replace(label_replace(\n      kube_deployment_status_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n      or\n      kube_statefulset_status_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n    , \"workload\", \"$1\", \"deployment\", \"(.+)\"), \"workload\", \"$1\", \"statefulset\", \"(.+)\"), \"workload\", \"$1\", \"workload\", \"(.*?)(?:-zone-[a-z])?\")\n  )\n) and (\n  sum by (workload) (\n    label_replace(label_replace(label_replace(\n      kube_deployment_status_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n      or\n      kube_statefulset_status_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n    , \"workload\", \"$1\", \"deployment\", \"(.+)\"), \"workload\", \"$1\", \"statefulset\", \"(.+)\"), \"workload\", \"$1\", \"workload\", \"(.*?)(?:-zone-[a-z])?\")\n  )\n  > 0\n)\n",
                      "format": "table",
                      "instant": true,
                      "intervalFactor": null,
                      "legendFormat": "__auto",
                      "legendLink": null,
                      "step": null
                   }
                ],
                "title": "Rollout progress",
                "transformations": [
                   {
                      "id": "joinByField",
                      "options": {
                         "byField": "workload",
                         "mode": "outer"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time 1": true,
                            "Time 2": true
                         },
                         "renameByName": {
                            "Value #A": "Updated",
                            "Value #B": "Ready",
                            "workload": "Workload"
                         }
                      }
                   },
                   {
                      "id": "sortBy",
                      "options": {
                         "sort": [
                            {
                               "field": "Workload"
                            }
                         ]
                      }
                   }
                ],
                "type": "barchart"
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "color": {
                         "mode": "thresholds"
                      },
                      "decimals": 1,
                      "noValue": "",
                      "thresholds": {
                         "mode": "absolute",
                         "steps": [
                            {
                               "color": "green",
                               "value": null
                            }
                         ]
                      },
                      "unit": "percentunit"
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "gridPos": {
                   "h": 4,
                   "w": 2,
                   "x": 10,
                   "y": 0
                },
                "id": 2,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null as zero",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 6,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"api_(v1|prom)_push|otlp_v1_metrics\",status_code=~\"2.+\"}[$__rate_interval])) /\nsum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"api_(v1|prom)_push|otlp_v1_metrics\"}[$__rate_interval]))\n",
                      "format": null,
                      "instant": false,
                      "interval": "",
                      "intervalFactor": null,
                      "legendFormat": "",
                      "legendLink": null,
                      "step": null
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Writes - 2xx",
                "tooltip": {
                   "shared": false,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "stat",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": false
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "color": {
                         "mode": "thresholds"
                      },
                      "decimals": 1,
                      "noValue": "",
                      "thresholds": {
                         "mode": "absolute",
                         "steps": [
                            {
                               "color": "green",
                               "value": null
                            },
                            {
                               "color": "orange",
                               "value": 0.20000000000000001
                            },
                            {
                               "color": "red",
                               "value": 0.5
                            }
                         ]
                      },
                      "unit": "percentunit"
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "gridPos": {
                   "h": 4,
                   "w": 2,
                   "x": 12,
                   "y": 0
                },
                "id": 3,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null as zero",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 6,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"api_(v1|prom)_push|otlp_v1_metrics\",status_code=~\"4.+\"}[$__rate_interval])) /\nsum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"api_(v1|prom)_push|otlp_v1_metrics\"}[$__rate_interval]))\n",
                      "format": null,
                      "instant": false,
                      "interval": "",
                      "intervalFactor": null,
                      "legendFormat": "",
                      "legendLink": null,
                      "step": null
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Writes - 4xx",
                "tooltip": {
                   "shared": false,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "stat",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": false
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "color": {
                         "mode": "thresholds"
                      },
                      "decimals": 1,
                      "noValue": "",
                      "thresholds": {
                         "mode": "absolute",
                         "steps": [
                            {
                               "color": "green",
                               "value": null
                            },
                            {
                               "color": "red",
                               "value": 0.01
                            }
                         ]
                      },
                      "unit": "percentunit"
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "gridPos": {
                   "h": 4,
                   "w": 2,
                   "x": 14,
                   "y": 0
                },
                "id": 4,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null as zero",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 6,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"api_(v1|prom)_push|otlp_v1_metrics\",status_code=~\"5.+\"}[$__rate_interval])) /\nsum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"api_(v1|prom)_push|otlp_v1_metrics\"}[$__rate_interval]))\n",
                      "format": null,
                      "instant": false,
                      "interval": "",
                      "intervalFactor": null,
                      "legendFormat": "",
                      "legendLink": null,
                      "step": null
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Writes - 5xx",
                "tooltip": {
                   "shared": false,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "stat",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": false
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "color": {
                         "mode": "thresholds"
                      },
                      "decimals": 1,
                      "noValue": "",
                      "thresholds": {
                         "mode": "absolute",
                         "steps": [
                            {
                               "color": "green",
                               "value": null
                            },
                            {
                               "color": "orange",
                               "value": 0.20000000000000001
                            },
                            {
                               "color": "red",
                               "value": 0.5
                            }
                         ]
                      },
                      "unit": "s"
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "gridPos": {
                   "h": 4,
                   "w": 8,
                   "x": 16,
                   "y": 0
                },
                "id": 5,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null as zero",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 6,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"api_(v1|prom)_push|otlp_v1_metrics\"}))\n",
                      "format": null,
                      "instant": false,
                      "interval": "",
                      "intervalFactor": null,
                      "legendFormat": "",
                      "legendLink": null,
                      "step": null
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Writes 99th latency",
                "tooltip": {
                   "shared": false,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "stat",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": false
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "color": {
                         "mode": "thresholds"
                      },
                      "decimals": 1,
                      "noValue": "",
                      "thresholds": {
                         "mode": "absolute",
                         "steps": [
                            {
                               "color": "green",
                               "value": null
                            }
                         ]
                      },
                      "unit": "percentunit"
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "gridPos": {
                   "h": 4,
                   "w": 2,
                   "x": 10,
                   "y": 4
                },
                "id": 6,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null as zero",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 6,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\",status_code=~\"2.+\"}[$__rate_interval])) /\nsum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}[$__rate_interval]))\n",
                      "format": null,
                      "instant": false,
                      "interval": "",
                      "intervalFactor": null,
                      "legendFormat": "",
                      "legendLink": null,
                      "step": null
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Reads - 2xx",
                "tooltip": {
                   "shared": false,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "stat",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": false
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "color": {
                         "mode": "thresholds"
                      },
                      "decimals": 1,
                      "noValue": "",
                      "thresholds": {
                         "mode": "absolute",
                         "steps": [
                            {
                               "color": "green",
                               "value": null
                            },
                            {
                               "color": "orange",
                               "value": 0.01
                            },
                            {
                               "color": "red",
                               "value": 0.050000000000000003
                            }
                         ]
                      },
                      "unit": "percentunit"
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "gridPos": {
                   "h": 4,
                   "w": 2,
                   "x": 12,
                   "y": 4
                },
                "id": 7,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null as zero",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 6,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\",status_code=~\"4.+\"}[$__rate_interval])) /\nsum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}[$__rate_interval]))\n",
                      "format": null,
                      "instant": false,
                      "interval": "",
                      "intervalFactor": null,
                      "legendFormat": "",
                      "legendLink": null,
                      "step": null
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Reads - 4xx",
                "tooltip": {
                   "shared": false,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "stat",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": false
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "color": {
                         "mode": "thresholds"
                      },
                      "decimals": 1,
                      "noValue": "",
                      "thresholds": {
                         "mode": "absolute",
                         "steps": [
                            {
                               "color": "green",
                               "value": null
                            },
                            {
                               "color": "red",
                               "value": 0.01
                            }
                         ]
                      },
                      "unit": "percentunit"
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "gridPos": {
                   "h": 4,
                   "w": 2,
                   "x": 14,
                   "y": 4
                },
                "id": 8,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null as zero",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 6,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "sum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\",status_code=~\"5.+\"}[$__rate_interval])) /\nsum(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}[$__rate_interval]))\n",
                      "format": null,
                      "instant": false,
                      "interval": "",
                      "intervalFactor": null,
                      "legendFormat": "",
                      "legendLink": null,
                      "step": null
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Reads - 5xx",
                "tooltip": {
                   "shared": false,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "stat",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": false
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "color": {
                         "mode": "thresholds"
                      },
                      "decimals": 1,
                      "noValue": "",
                      "thresholds": {
                         "mode": "absolute",
                         "steps": [
                            {
                               "color": "green",
                               "value": null
                            },
                            {
                               "color": "orange",
                               "value": 1
                            },
                            {
                               "color": "red",
                               "value": 2.5
                            }
                         ]
                      },
                      "unit": "s"
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "gridPos": {
                   "h": 4,
                   "w": 8,
                   "x": 16,
                   "y": 4
                },
                "id": 9,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null as zero",
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 6,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}))\n",
                      "format": null,
                      "instant": false,
                      "interval": "",
                      "intervalFactor": null,
                      "legendFormat": "",
                      "legendLink": null,
                      "step": null
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Reads 99th latency",
                "tooltip": {
                   "shared": false,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "stat",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": false
                   }
                ]
             },
             {
                "aliasColors": { },
                "bars": false,
                "dashLength": 10,
                "dashes": false,
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "color": {
                         "mode": "thresholds"
                      },
                      "decimals": 0,
                      "noValue": "All healthy",
                      "thresholds": {
                         "mode": "absolute",
                         "steps": [
                            {
                               "color": "green",
                               "value": null
                            },
                            {
                               "color": "orange",
                               "value": 1
                            },
                            {
                               "color": "red",
                               "value": 2
                            }
                         ]
                      },
                      "unit": "short"
                   },
                   "overrides": [ ]
                },
                "fill": 1,
                "gridPos": {
                   "h": 3,
                   "w": 10,
                   "x": 0,
                   "y": 13
                },
                "id": 10,
                "legend": {
                   "avg": false,
                   "current": false,
                   "max": false,
                   "min": false,
                   "show": true,
                   "total": false,
                   "values": false
                },
                "lines": true,
                "linewidth": 1,
                "links": [ ],
                "nullPointMode": "null as zero",
                "options": {
                   "text": {
                      "titleSize": 14,
                      "valueSize": 14
                   },
                   "textMode": "value_and_name"
                },
                "percentage": false,
                "pointradius": 5,
                "points": false,
                "renderer": "flot",
                "seriesOverrides": [ ],
                "spaceLength": 10,
                "span": 6,
                "stack": false,
                "steppedLine": false,
                "targets": [
                   {
                      "expr": "kube_deployment_status_replicas_unavailable{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n> 0\n",
                      "format": null,
                      "instant": true,
                      "interval": "",
                      "intervalFactor": null,
                      "legendFormat": "{{deployment}}",
                      "legendLink": null,
                      "step": null
                   },
                   {
                      "expr": "kube_statefulset_status_replicas_current{cluster=~\"$cluster\", namespace=~\"$namespace\"} -\nkube_statefulset_status_replicas_ready {cluster=~\"$cluster\", namespace=~\"$namespace\"}\n> 0\n",
                      "format": null,
                      "instant": true,
                      "interval": "",
                      "intervalFactor": null,
                      "legendFormat": "{{statefulset}}",
                      "legendLink": null,
                      "step": null
                   }
                ],
                "thresholds": [ ],
                "timeFrom": null,
                "timeShift": null,
                "title": "Unhealthy pods",
                "tooltip": {
                   "shared": false,
                   "sort": 0,
                   "value_type": "individual"
                },
                "type": "stat",
                "xaxis": {
                   "buckets": null,
                   "mode": "time",
                   "name": null,
                   "show": true,
                   "values": [ ]
                },
                "yaxes": [
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": 0,
                      "show": true
                   },
                   {
                      "format": "short",
                      "label": null,
                      "logBase": 1,
                      "max": null,
                      "min": null,
                      "show": false
                   }
                ]
             },
             {
                "datasource": "$datasource",
                "fieldConfig": {
                   "overrides": [
                      {
                         "matcher": {
                            "id": "byRegexp",
                            "options": "r.*"
                         },
                         "properties": [
                            {
                               "id": "custom.align",
                               "value": "center"
                            }
                         ]
                      }
                   ]
                },
                "gridPos": {
                   "h": 8,
                   "w": 6,
                   "x": 10,
                   "y": 8
                },
                "id": 11,
                "targets": [
                   {
                      "expr": "count by(container, version) (\n  label_replace(\n    kube_pod_container_info{cluster=~\"$cluster\", namespace=~\"$namespace\"},\n    \"version\", \"$1\", \"image\", \".*:(.*)\"\n  )\n)\n",
                      "instant": true,
                      "legendFormat": "",
                      "refId": "A"
                   }
                ],
                "title": "Pods count per version",
                "transformations": [
                   {
                      "id": "labelsToFields",
                      "options": {
                         "valueLabel": "version"
                      }
                   },
                   {
                      "id": "organize",
                      "options": {
                         "excludeByName": {
                            "Time": true
                         },
                         "indexByName": {
                            "Time": 0,
                            "container": 1
                         }
                      }
                   },
                   {
                      "id": "sortBy",
                      "options": {
                         "fields": { },
                         "sort": [
                            {
                               "field": "container"
                            }
                         ]
                      }
                   }
                ],
                "type": "table"
             },
             {
                "datasource": "$datasource",
                "fieldConfig": {
                   "defaults": {
                      "custom": {
                         "fillOpacity": 10
                      },
                      "unit": "percentunit"
                   }
                },
                "gridPos": {
                   "h": 8,
                   "w": 8,
                   "x": 16,
                   "y": 8
                },
                "id": 12,
                "links": [ ],
                "options": {
                   "legend": {
                      "showLegend": true
                   },
                   "tooltip": {
                      "mode": "single",
                      "sort": "none"
                   }
                },
                "targets": [
                   {
                      "expr": "1 - (\n  avg_over_time(histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"api_(v1|prom)_push|otlp_v1_metrics\"} offset 24h))[1h:])\n  /\n  avg_over_time(histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"api_(v1|prom)_push|otlp_v1_metrics\"}))[1h:])\n)\n",
                      "format": "time_series",
                      "legendFormat": "writes",
                      "legendLink": null
                   },
                   {
                      "expr": "1 - (\n  avg_over_time(histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"} offset 24h))[1h:])\n  /\n  avg_over_time(histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", route=~\"(prometheus|api_prom)_api_v1_.+\"}))[1h:])\n)\n",
                      "format": "time_series",
                      "legendFormat": "reads",
                      "legendLink": null
                   }
                ],
                "title": "Latency vs 24h ago",
                "type": "timeseries"
             }
          ],
          "refresh": "10s",
          "rows": null,
          "schemaVersion": 27,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "default",
                      "value": "default"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".*",
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "namespace",
                   "multi": false,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Rollout progress",
          "uid": "7f0b5567d543a1698e695b530eb7f5de",
          "version": 0
       }
---
# Source: lgtm-distributed/charts/mimir/templates/metamonitoring/grafana-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-ruler-dashboard
  namespace: default
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    grafana_dashboard: "1"
  annotations:
    k8s-sidecar-target-directory: /tmp/dashboards/Mimir Dashboards
data:
  mimir-ruler.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "100px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "format": "short",
                      "id": 1,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 3,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(cortex_ruler_managers_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"})",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Active configurations",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "format": "short",
                      "id": 2,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 3,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(cortex_prometheus_rule_group_rules{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"})",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Total rules",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "description": "### Read from ingesters - QPS\nNote: Even while operating in Remote ruler mode you will still see values for this panel.\n\nThis is because the metrics are inclusive of intermediate services and are showing the requests that ultimately reach the ingesters.\n\nFor a more detailed view of the read path when using remote ruler mode, see the Remote ruler reads dashboard.\n\n",
                      "fill": 1,
                      "format": "reqps",
                      "id": 3,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 3,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_ingester_client_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*|ruler-querier.*))\", operation=\"/cortex.Ingester/QueryStream\"}[$__rate_interval]))",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Read from ingesters - QPS",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "format": "reqps",
                      "id": 4,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 3,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_ingester_client_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", operation=\"/cortex.Ingester/Push\"}[$__rate_interval]))",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Write to ingesters - QPS",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Headlines",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_prometheus_rule_evaluations_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n-\nsum(rate(cortex_prometheus_rule_evaluation_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "success",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_prometheus_rule_evaluation_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_prometheus_rule_group_iterations_missed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "missed",
                            "legendLink": null
                         }
                      ],
                      "title": "Evaluations per second",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum (rate(cortex_prometheus_rule_evaluation_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n  /\nsum (rate(cortex_prometheus_rule_evaluation_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "average",
                            "legendLink": null
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Rule evaluations global",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_ingester_client_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", operation=\"/cortex.Ingester/Push\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "QPS",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_ingester_client_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", operation=\"/cortex.Ingester/Push\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_ingester_client_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", operation=\"/cortex.Ingester/Push\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_ingester_client_request_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", operation=\"/cortex.Ingester/Push\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_ingester_client_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", operation=\"/cortex.Ingester/Push\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Writes (ingesters)",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_ingester_client_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*|ruler-querier.*))\", operation=\"/cortex.Ingester/QueryStream\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "QPS",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 10,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_ingester_client_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*|ruler-querier.*))\", operation=\"/cortex.Ingester/QueryStream\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_ingester_client_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*|ruler-querier.*))\", operation=\"/cortex.Ingester/QueryStream\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_ingester_client_request_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*|ruler-querier.*))\", operation=\"/cortex.Ingester/QueryStream\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_ingester_client_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*|ruler-querier.*))\", operation=\"/cortex.Ingester/QueryStream\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Reads (ingesters)",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 11,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", kv_name=~\"ruler\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 12,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", kv_name=~\"ruler\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", kv_name=~\"ruler\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_kv_request_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", kv_name=~\"ruler\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", kv_name=~\"ruler\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ruler - key-value store for rulers ring",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 13,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_querier_storegateway_instances_hit_per_query_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_querier_storegateway_instances_hit_per_query_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_querier_storegateway_instances_hit_per_query_sum{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) * 1 / sum(rate(cortex_querier_storegateway_instances_hit_per_query_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Number of store-gateways hit per query",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 14,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_querier_storegateway_refetches_per_query_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_querier_storegateway_refetches_per_query_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) by (le)) * 1",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_querier_storegateway_refetches_per_query_sum{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) * 1 / sum(rate(cortex_querier_storegateway_refetches_per_query_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Refetches of missing blocks per query",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Consistency checks failed\nRate of queries that had to run with consistency checks and those checks failed. A failed consistency check means that some of at least one block which had to be queried wasn't present in any of the store-gateways.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "max": 1,
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "Failures / sec"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 15,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_querier_blocks_consistency_checks_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) / sum(rate(cortex_querier_blocks_consistency_checks_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Failures / sec",
                            "legendLink": null
                         }
                      ],
                      "title": "Consistency checks failed",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ruler - blocks storage",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 16,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(user) (rate(cortex_prometheus_notifications_errors_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n  /\nsum by(user) (rate(cortex_prometheus_notifications_sent_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]) > 0)\n> 0\n",
                            "format": "time_series",
                            "legendFormat": "{{ user }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Delivery errors",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "max": 1,
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 17,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(user) (rate(cortex_prometheus_notifications_queue_length{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n  /\nsum by(user) (rate(cortex_prometheus_notifications_queue_capacity{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) > 0\n",
                            "format": "time_series",
                            "legendFormat": "{{ user }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Queue length",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 18,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by (user) (increase(cortex_prometheus_notifications_dropped_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) > 0\n",
                            "format": "time_series",
                            "legendFormat": "{{ user }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Dropped",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Notifications",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 19,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(user) (rate(cortex_prometheus_rule_group_iterations_missed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) > 0",
                            "format": "time_series",
                            "legendFormat": "{{ user }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Missed iterations",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 20,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "rate(cortex_prometheus_rule_group_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])\n  /\nrate(cortex_prometheus_rule_group_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])\n",
                            "format": "time_series",
                            "legendFormat": "{{ user }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 21,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(rule_group) (rate(cortex_prometheus_rule_evaluation_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) > 0",
                            "format": "time_series",
                            "legendFormat": "{{ rule_group }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Failures",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Group evaluations",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 22,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 12,
                      "targets": [
                         {
                            "expr": "sum by(user) (rate(cortex_prometheus_rule_evaluation_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n  /\nsum by(user) (rate(cortex_prometheus_rule_evaluation_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}[$__rate_interval]))\n",
                            "format": "time_series",
                            "legendFormat": "{{ user }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Rule evaluation per user",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [ ]
                      },
                      "id": 23,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Operations / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "max": 1,
                            "min": 0,
                            "noValue": "0",
                            "unit": "percentunit"
                         }
                      },
                      "id": 24,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(operation) (rate(thanos_objstore_bucket_operation_failures_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\"}[$__rate_interval])) / sum by(operation) (rate(thanos_objstore_bucket_operations_total{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\"}[$__rate_interval])) >= 0",
                            "format": "time_series",
                            "legendFormat": "{{operation}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Error rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 25,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"attributes\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"attributes\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"attributes\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Attributes",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 26,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"exists\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"exists\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"exists\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Exists",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ruler configuration object store (ruler accesses)",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 27,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"get\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"get\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"get\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Get",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 28,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"get_range\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"get_range\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"get_range\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: GetRange",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 29,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"upload\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"upload\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Upload",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 30,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"delete\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"delete\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", namespace=~\"$namespace\",component=\"ruler-storage\",operation=\"delete\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency of op: Delete",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "default",
                      "value": "default"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": true,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "namespace",
                   "multi": true,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Ruler",
          "uid": "631e15d5d85afb2ca8e35d62984eeaa0",
          "version": 0
       }
---
# Source: lgtm-distributed/charts/mimir/templates/metamonitoring/grafana-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-scaling-dashboard
  namespace: default
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    grafana_dashboard: "1"
  annotations:
    k8s-sidecar-target-directory: /tmp/dashboards/Mimir Dashboards
data:
  mimir-scaling.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "200px",
                "panels": [
                   {
                      "id": 1,
                      "options": {
                         "content": "This dashboard identifies scaling-related issues by suggesting services that you might want to scale up.\nThe table that follows contains a suggested number of replicas and the reason why.\nIf the system is failing and depending on the reason, try scaling up to the specified number.\nThe specified numbers are intended as helpful guidelines when things go wrong, rather than prescriptive guidelines.\n\nReasons:\n- **sample_rate**: There are not enough replicas to handle the\n  sample rate.  Applies to distributor and ingesters.\n- **active_series**: There are not enough replicas\n  to handle the number of active series.  Applies to ingesters.\n- **cpu_usage**: There are not enough replicas\n  based on the CPU usage of the jobs vs the resource requests.\n  Applies to all jobs.\n- **memory_usage**: There are not enough replicas based on the memory\n  usage vs the resource requests.  Applies to all jobs.\n- **active_series_limits**: There are not enough replicas to hold 60% of the\n  sum of all the per tenant series limits.\n- **sample_rate_limits**: There are not enough replicas to handle 60% of the\n  sum of all the per tenant rate limits.\n",
                         "mode": "markdown"
                      },
                      "span": 12,
                      "title": "",
                      "type": "text"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Service scaling",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "400px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "id": 2,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "sort": {
                         "col": 0,
                         "desc": false
                      },
                      "spaceLength": 10,
                      "span": 12,
                      "stack": false,
                      "steppedLine": false,
                      "styles": [
                         {
                            "alias": "Time",
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "pattern": "Time",
                            "type": "hidden"
                         },
                         {
                            "alias": "Required Replicas",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 0,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "Cluster",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "__name__",
                            "thresholds": [ ],
                            "type": "hidden",
                            "unit": "short"
                         },
                         {
                            "alias": "Cluster",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "cluster",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "Service",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "deployment",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "Namespace",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "namespace",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "Reason",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "reason",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "pattern": "/.*/",
                            "thresholds": [ ],
                            "type": "string",
                            "unit": "short"
                         }
                      ],
                      "targets": [
                         {
                            "expr": "sort_desc(\n  cluster_namespace_deployment_reason:required_replicas:count{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n    > ignoring(reason) group_left\n  cluster_namespace_deployment:actual_replicas:count{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n)\n",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Workload-based scaling",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "transform": "table",
                      "type": "table",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Scaling",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "default",
                      "value": "default"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": true,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "namespace",
                   "multi": true,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Scaling",
          "uid": "64bbad83507b7289b514725658e10352",
          "version": 0
       }
---
# Source: lgtm-distributed/charts/mimir/templates/metamonitoring/grafana-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-slow-queries-dashboard
  namespace: default
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    grafana_dashboard: "1"
  annotations:
    k8s-sidecar-target-directory: /tmp/dashboards/Mimir Dashboards
data:
  mimir-slow-queries.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 1,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap duration_seconds(response_time) [$__auto]) by ()",
                            "format": "time_series",
                            "legendFormat": "p99",
                            "legendLink": null
                         },
                         {
                            "expr": "quantile_over_time(0.5, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap duration_seconds(response_time) [$__auto]) by ()",
                            "format": "time_series",
                            "legendFormat": "p50",
                            "legendLink": null
                         }
                      ],
                      "title": "Response time",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 2,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap fetched_series_count[$__auto]) by ()",
                            "format": "time_series",
                            "legendFormat": "p99",
                            "legendLink": null
                         },
                         {
                            "expr": "quantile_over_time(0.5, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap fetched_series_count[$__auto]) by ()",
                            "format": "time_series",
                            "legendFormat": "p50",
                            "legendLink": null
                         }
                      ],
                      "title": "Fetched series",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 3,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap fetched_chunk_bytes[$__auto]) by ()",
                            "format": "time_series",
                            "legendFormat": "p99",
                            "legendLink": null
                         },
                         {
                            "expr": "quantile_over_time(0.5, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap fetched_chunk_bytes[$__auto]) by ()",
                            "format": "time_series",
                            "legendFormat": "p50",
                            "legendLink": null
                         }
                      ],
                      "title": "Fetched chunks",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap response_size_bytes[$__auto]) by ()",
                            "format": "time_series",
                            "legendFormat": "p99",
                            "legendLink": null
                         },
                         {
                            "expr": "quantile_over_time(0.5, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap response_size_bytes[$__auto]) by ()",
                            "format": "time_series",
                            "legendFormat": "p50",
                            "legendLink": null
                         }
                      ],
                      "title": "Response size",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap duration_seconds(length) [$__auto]) by ()",
                            "format": "time_series",
                            "legendFormat": "p99",
                            "legendLink": null
                         },
                         {
                            "expr": "quantile_over_time(0.5, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap duration_seconds(length) [$__auto]) by ()",
                            "format": "time_series",
                            "legendFormat": "p50",
                            "legendLink": null
                         }
                      ],
                      "title": "Time span",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "description": "### Query wall time\nSeconds per second spent by queriers evaluating queries.\nThis is roughly the product of the number of subqueries for a query and how long they took.\nIn increase in this metric means that queries take more resources from the query path to evaluate.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap query_wall_time_seconds [$__auto]) by ()",
                            "format": "time_series",
                            "legendFormat": "p99",
                            "legendLink": null
                         },
                         {
                            "expr": "quantile_over_time(0.5, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap query_wall_time_seconds [$__auto]) by ()",
                            "format": "time_series",
                            "legendFormat": "p50",
                            "legendLink": null
                         }
                      ],
                      "title": "Query wall time",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Across tenants",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "topk(10, quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap duration_seconds(response_time) [$__auto]) by (user))",
                            "format": "time_series",
                            "legendFormat": "{{user}}",
                            "legendLink": null
                         }
                      ],
                      "title": "P99 response time",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "topk(10, quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap fetched_series_count[$__auto]) by (user))",
                            "format": "time_series",
                            "legendFormat": "{{user}}",
                            "legendLink": null
                         }
                      ],
                      "title": "P99 fetched series",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "topk(10, quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap fetched_chunk_bytes[$__auto]) by (user))",
                            "format": "time_series",
                            "legendFormat": "{{user}}",
                            "legendLink": null
                         }
                      ],
                      "title": "P99 fetched chunks",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 10,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "topk(10, quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap response_size_bytes[$__auto]) by (user))",
                            "format": "time_series",
                            "legendFormat": "{{user}}",
                            "legendLink": null
                         }
                      ],
                      "title": "P99 response size",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 11,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "topk(10, quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap duration_seconds(length) [$__auto]) by (user))",
                            "format": "time_series",
                            "legendFormat": "{{user}}",
                            "legendLink": null
                         }
                      ],
                      "title": "P99 time span",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "description": "### Query wall time\nSeconds per second spent by queriers evaluating queries.\nThis is roughly the product of the number of subqueries for a query and how long they took.\nIn increase in this metric means that queries take more resources from the query path to evaluate.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 12,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "topk(10, quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap query_wall_time_seconds [$__auto]) by (user))",
                            "format": "time_series",
                            "legendFormat": "{{user}}",
                            "legendLink": null
                         }
                      ],
                      "title": "P99 query wall time",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Top 10 tenants",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 13,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "topk(10, quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap duration_seconds(response_time) [$__auto]) by (user_agent))",
                            "format": "time_series",
                            "legendFormat": "{{user_agent}}",
                            "legendLink": null
                         }
                      ],
                      "title": "P99 response time",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 14,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "topk(10, quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap fetched_series_count[$__auto]) by (user_agent))",
                            "format": "time_series",
                            "legendFormat": "{{user_agent}}",
                            "legendLink": null
                         }
                      ],
                      "title": "P99 fetched series",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 15,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "topk(10, quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap fetched_chunk_bytes[$__auto]) by (user_agent))",
                            "format": "time_series",
                            "legendFormat": "{{user_agent}}",
                            "legendLink": null
                         }
                      ],
                      "title": "P99 fetched chunks",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 16,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "topk(10, quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap response_size_bytes[$__auto]) by (user_agent))",
                            "format": "time_series",
                            "legendFormat": "{{user_agent}}",
                            "legendLink": null
                         }
                      ],
                      "title": "P99 response size",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 17,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "topk(10, quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap duration_seconds(length) [$__auto]) by (user_agent))",
                            "format": "time_series",
                            "legendFormat": "{{user_agent}}",
                            "legendLink": null
                         }
                      ],
                      "title": "P99 time span",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "${loki_datasource}",
                      "description": "### Query wall time\nSeconds per second spent by queriers evaluating queries.\nThis is roughly the product of the number of subqueries for a query and how long they took.\nIn increase in this metric means that queries take more resources from the query path to evaluate.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 18,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 2,
                      "targets": [
                         {
                            "expr": "topk(10, quantile_over_time(0.99, {cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | unwrap query_wall_time_seconds [$__auto]) by (user_agent))",
                            "format": "time_series",
                            "legendFormat": "{{user_agent}}",
                            "legendLink": null
                         }
                      ],
                      "title": "P99 query wall time",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Top 10 User-Agents",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "${loki_datasource}",
                      "fieldConfig": {
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "fetched_chunk_bytes"
                               },
                               "properties": [
                                  {
                                     "id": "unit",
                                     "value": "bytes"
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "fetched_index_bytes"
                               },
                               "properties": [
                                  {
                                     "id": "unit",
                                     "value": "bytes"
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "response_size_bytes"
                               },
                               "properties": [
                                  {
                                     "id": "unit",
                                     "value": "bytes"
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "results_cache_hit_bytes"
                               },
                               "properties": [
                                  {
                                     "id": "unit",
                                     "value": "bytes"
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "results_cache_miss_bytes"
                               },
                               "properties": [
                                  {
                                     "id": "unit",
                                     "value": "bytes"
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "estimated_series_count"
                               },
                               "properties": [
                                  {
                                     "id": "unit",
                                     "value": "short"
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "fetched_chunks_count"
                               },
                               "properties": [
                                  {
                                     "id": "unit",
                                     "value": "short"
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "fetched_series_count"
                               },
                               "properties": [
                                  {
                                     "id": "unit",
                                     "value": "short"
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "Time span"
                               },
                               "properties": [
                                  {
                                     "id": "unit",
                                     "value": "s"
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "Duration"
                               },
                               "properties": [
                                  {
                                     "id": "unit",
                                     "value": "s"
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "Step"
                               },
                               "properties": [
                                  {
                                     "id": "unit",
                                     "value": "s"
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "queue_time_seconds"
                               },
                               "properties": [
                                  {
                                     "id": "unit",
                                     "value": "s"
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "query_wall_time_seconds"
                               },
                               "properties": [
                                  {
                                     "id": "unit",
                                     "value": "s"
                                  }
                               ]
                            }
                         ]
                      },
                      "height": "500px",
                      "id": 19,
                      "span": 12,
                      "targets": [
                         {
                            "expr": "{cluster=~\"$cluster\",namespace=~\"$namespace\",name=~\"query-frontend.*\"} |= \"query stats\" != \"/api/v1/read\" | logfmt | user=~\"${tenant_id}\" | user_agent=~\"${user_agent}\" | response_time > ${min_duration} | label_format response_time_seconds=\"{{ if .response_time }} {{ duration .response_time }} {{ end }}\",param_step_seconds=\"{{ if .param_step }} {{ div .param_step 1000 }} {{ end }}\",length_seconds=\"{{ if .length }} {{ duration .length }} {{ end }}\"",
                            "instant": false,
                            "legendFormat": "",
                            "range": true,
                            "refId": "A"
                         }
                      ],
                      "title": "Slow queries",
                      "transformations": [
                         {
                            "id": "extractFields",
                            "options": {
                               "source": "labels"
                            }
                         },
                         {
                            "id": "organize",
                            "options": {
                               "excludeByName": {
                                  "Line": true,
                                  "Time": true,
                                  "caller": true,
                                  "cluster": true,
                                  "component": true,
                                  "container": true,
                                  "gossip_ring_member": true,
                                  "host": true,
                                  "id": true,
                                  "job": true,
                                  "labels": true,
                                  "length": true,
                                  "level": true,
                                  "line": true,
                                  "method": true,
                                  "msg": true,
                                  "name": true,
                                  "namespace": true,
                                  "param_step": true,
                                  "path": true,
                                  "pod": true,
                                  "pod_template_hash": true,
                                  "response_time": true,
                                  "stream": true,
                                  "traceID": true,
                                  "tsNs": true
                               },
                               "indexByName": {
                                  "err": 10,
                                  "length_seconds": 3,
                                  "param_end": 5,
                                  "param_query": 8,
                                  "param_start": 4,
                                  "param_step_seconds": 7,
                                  "param_time": 6,
                                  "response_time_seconds": 9,
                                  "status": 1,
                                  "ts": 0,
                                  "user": 2
                               },
                               "renameByName": {
                                  "err": "Error",
                                  "length_seconds": "Time span",
                                  "param_end": "End",
                                  "param_query": "Query",
                                  "param_start": "Start",
                                  "param_step_seconds": "Step",
                                  "param_time": "Time (instant query)",
                                  "response_time_seconds": "Duration",
                                  "ts": "Completion date",
                                  "user": "Tenant ID"
                               }
                            }
                         },
                         {
                            "id": "convertFieldType",
                            "options": {
                               "conversions": [
                                  {
                                     "destinationType": "number",
                                     "targetField": "sharded_queries"
                                  },
                                  {
                                     "destinationType": "number",
                                     "targetField": "split_queries"
                                  },
                                  {
                                     "destinationType": "number",
                                     "targetField": "fetched_chunk_bytes"
                                  },
                                  {
                                     "destinationType": "number",
                                     "targetField": "fetched_index_bytes"
                                  },
                                  {
                                     "destinationType": "number",
                                     "targetField": "response_size_bytes"
                                  },
                                  {
                                     "destinationType": "number",
                                     "targetField": "results_cache_hit_bytes"
                                  },
                                  {
                                     "destinationType": "number",
                                     "targetField": "results_cache_miss_bytes"
                                  },
                                  {
                                     "destinationType": "number",
                                     "targetField": "estimated_series_count"
                                  },
                                  {
                                     "destinationType": "number",
                                     "targetField": "fetched_chunks_count"
                                  },
                                  {
                                     "destinationType": "number",
                                     "targetField": "fetched_series_count"
                                  },
                                  {
                                     "destinationType": "number",
                                     "targetField": "Time span"
                                  },
                                  {
                                     "destinationType": "number",
                                     "targetField": "Duration"
                                  },
                                  {
                                     "destinationType": "number",
                                     "targetField": "Step"
                                  },
                                  {
                                     "destinationType": "number",
                                     "targetField": "queue_time_seconds"
                                  },
                                  {
                                     "destinationType": "number",
                                     "targetField": "query_wall_time_seconds"
                                  }
                               ]
                            }
                         }
                      ],
                      "type": "table"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "default",
                      "value": "default"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".*",
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "namespace",
                   "multi": false,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "hide": 0,
                   "includeAll": false,
                   "label": "Loki data source",
                   "multi": false,
                   "name": "loki_datasource",
                   "query": "loki",
                   "type": "datasource"
                },
                {
                   "current": {
                      "selected": true,
                      "text": "5s",
                      "value": "5s"
                   },
                   "hide": 0,
                   "label": "Min duration",
                   "name": "min_duration",
                   "options": [
                      {
                         "selected": true,
                         "text": "5s",
                         "value": "5s"
                      }
                   ],
                   "query": "5s",
                   "type": "textbox"
                },
                {
                   "current": {
                      "selected": true,
                      "text": ".*",
                      "value": ".*"
                   },
                   "hide": 0,
                   "label": "Tenant ID",
                   "name": "tenant_id",
                   "options": [
                      {
                         "selected": true,
                         "text": ".*",
                         "value": ".*"
                      }
                   ],
                   "query": ".*",
                   "type": "textbox"
                },
                {
                   "current": {
                      "selected": true,
                      "text": ".*",
                      "value": ".*"
                   },
                   "hide": 0,
                   "label": "User-Agent HTTP Header",
                   "name": "user_agent",
                   "options": [
                      {
                         "selected": true,
                         "text": ".*",
                         "value": ".*"
                      }
                   ],
                   "query": ".*",
                   "type": "textbox"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Slow queries",
          "uid": "6089e1ce1e678788f46312a0a1e647e6",
          "version": 0
       }
---
# Source: lgtm-distributed/charts/mimir/templates/metamonitoring/grafana-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-tenants-dashboard
  namespace: default
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    grafana_dashboard: "1"
  annotations:
    k8s-sidecar-target-directory: /tmp/dashboards/Mimir Dashboards
data:
  mimir-tenants.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "25px",
                "panels": [
                   {
                      "content": "<p>\n  This dashboard shows various metrics detailed by tenant (user) selected above.\n</p>\n",
                      "datasource": null,
                      "description": "",
                      "id": 1,
                      "mode": "markdown",
                      "span": 12,
                      "title": "",
                      "transparent": true,
                      "type": "text"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Tenants dashboard description",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### All series\nNumber of active, in-memory, and owned series per user, and active series matching custom trackers (in parenthesis).\nNote that these counts include all series regardless of the type of data (counter, gauge, native histogram, etc.).\nNote that active series matching custom trackers are included in the total active series count.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 2,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum(\n  (\n    cortex_ingester_memory_series_created_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}\n    - cortex_ingester_memory_series_removed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}\n  )\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n)\n",
                            "format": "time_series",
                            "legendFormat": "in-memory",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_limits_overrides{cluster=~\"$cluster\", job=~\"($namespace)/((overrides-exporter|mimir-backend.*))\", limit_name=\"max_global_series_per_user\", user=\"$user\"})\nor\nmax(cortex_limits_defaults{cluster=~\"$cluster\", job=~\"($namespace)/((overrides-exporter|mimir-backend.*))\", limit_name=\"max_global_series_per_user\"})\n",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(\n  cortex_ingester_active_series{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n)\n",
                            "format": "time_series",
                            "legendFormat": "active",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(\n  cortex_ingester_owned_series{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n)\n",
                            "format": "time_series",
                            "legendFormat": "owned",
                            "legendLink": null
                         },
                         {
                            "expr": "sum by (name) (\n  cortex_ingester_active_series_custom_tracker{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n) > 0\n",
                            "format": "time_series",
                            "legendFormat": "active ({{ name }})",
                            "legendLink": null
                         }
                      ],
                      "title": "All series",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### In-memory series per ingester\nLocal tenant series limit and number of in-memory series per ingester.\nBecause series can be unevenly distributed across ingesters, ingesters may hit the local limit at different times.\nNote that in-memory series may exceed the local limit if limiting based on owned series is enabled.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byRegexp",
                                  "options": "/local limit .+/"
                               },
                               "properties": [
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  },
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "yellow",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 3,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "min by (job) (cortex_ingester_local_limits{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", limit=\"max_global_series_per_user\", user=\"$user\"})\n",
                            "format": "time_series",
                            "legendFormat": "local limit ({{job}})",
                            "legendLink": null
                         },
                         {
                            "expr": "cortex_ingester_memory_series_created_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}\n- cortex_ingester_memory_series_removed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "In-memory series per ingester",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Owned series per ingester\nLocal tenant series limit and number of owned series per ingester.\nBecause series can be unevenly distributed across ingesters, ingesters may hit the local limit at different times.\nOwned series are the subset of an ingester's in-memory series that currently map to it in the ring\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byRegexp",
                                  "options": "/local limit .+/"
                               },
                               "properties": [
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  },
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "yellow",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "min by (job) (cortex_ingester_local_limits{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", limit=\"max_global_series_per_user\", user=\"$user\"})\n",
                            "format": "time_series",
                            "legendFormat": "local limit ({{job}})",
                            "legendLink": null
                         },
                         {
                            "expr": "cortex_ingester_owned_series{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Owned series per ingester",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Tenant series counts",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Series with exemplars\nNumber of series with exemplars currently in storage.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(\n  cortex_ingester_tsdb_exemplar_series_with_exemplars_in_storage{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n)\n",
                            "format": "time_series",
                            "legendFormat": "series",
                            "legendLink": null
                         }
                      ],
                      "title": "Series with exemplars",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Oldest exemplar age\nThe age of the oldest exemplar stored in circular storage.\nUseful to check for what time range the current exemplar buffer limit allows.\nThis usually means the max age for all exemplars for a typical setup.\nThis is not true though if one of the series timestamp is in future compared to rest series.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "time() - min(cortex_ingester_tsdb_exemplar_last_exemplars_timestamp_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "age",
                            "legendLink": null
                         }
                      ],
                      "title": "Oldest exemplar age",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Native histogram series\nNumber of active native histogram series per user, and active native histogram series matching custom trackers (in parenthesis).\nNote that active series matching custom trackers are included in the total active series count.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(\n  cortex_ingester_active_native_histogram_series{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n)\n",
                            "format": "time_series",
                            "legendFormat": "active",
                            "legendLink": null
                         },
                         {
                            "expr": "sum by (name) (\n  cortex_ingester_active_native_histogram_series_custom_tracker{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n) > 0\n",
                            "format": "time_series",
                            "legendFormat": "active ({{ name }})",
                            "legendLink": null
                         }
                      ],
                      "title": "Native histogram series",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Total number of buckets used by native histogram series\nTotal number of buckets in active native histogram series per user, and total active native histogram buckets matching custom trackers (in parenthesis).\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(\n  cortex_ingester_active_native_histogram_buckets{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n)\n",
                            "format": "time_series",
                            "legendFormat": "buckets",
                            "legendLink": null
                         },
                         {
                            "expr": "sum by (name) (\n  cortex_ingester_active_native_histogram_buckets_custom_tracker{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n) > 0\n",
                            "format": "time_series",
                            "legendFormat": "buckets ({{ name }})",
                            "legendLink": null
                         }
                      ],
                      "title": "Total number of buckets used by native histogram series",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Exemplars and native histograms",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Distributor requests incoming rate\nThe rate of requests that have come in to the distributor, including rejected requests.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_distributor_requests_in_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "rate",
                            "legendLink": null
                         }
                      ],
                      "title": "Distributor requests incoming rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Distributor requests received (accepted) rate\nThe rate of received requests, excluding rejected requests.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 10,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_distributor_received_requests_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "rate",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_limits_overrides{cluster=~\"$cluster\", job=~\"($namespace)/((overrides-exporter|mimir-backend.*))\", limit_name=\"request_rate\", user=\"$user\"})\nor\nmax(cortex_limits_defaults{cluster=~\"$cluster\", job=~\"($namespace)/((overrides-exporter|mimir-backend.*))\", limit_name=\"request_rate\"})\n",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "Distributor requests received (accepted) rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Newest seen sample age\nThe age of the newest received sample seen in the distributors.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 11,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "time() - max(cortex_distributor_latest_seen_sample_timestamp_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", user=\"$user\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "age",
                            "legendLink": null
                         }
                      ],
                      "title": "Newest seen sample age",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Distributor discarded requests rate\nThe rate of each request's discarding reason.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 12,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by (reason) (rate(cortex_discarded_requests_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{ reason }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Distributor discarded requests rate",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Distributor ingestion requests",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Distributor samples incoming rate\nThe rate of samples that have come in to the distributor, including rejected or deduped exemplars.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 13,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_distributor_samples_in_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "rate",
                            "legendLink": null
                         }
                      ],
                      "title": "Distributor samples incoming rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Distributor samples received (accepted) rate\nThe rate of received samples, excluding rejected and deduped samples.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 14,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_distributor_received_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "rate",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_limits_overrides{cluster=~\"$cluster\", job=~\"($namespace)/((overrides-exporter|mimir-backend.*))\", limit_name=\"ingestion_rate\", user=\"$user\"})\nor\nmax(cortex_limits_defaults{cluster=~\"$cluster\", job=~\"($namespace)/((overrides-exporter|mimir-backend.*))\", limit_name=\"ingestion_rate\"})\n",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "Distributor samples received (accepted) rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Distributor deduplicated/non-HA\nThe rate of deduplicated samples and the rate of received samples for a user that has HA tracking turned on, but the sample didn't contain both HA labels.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 15,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_distributor_deduped_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "deduplicated",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_distributor_non_ha_samples_received_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "non-HA",
                            "legendLink": null
                         }
                      ],
                      "title": "Distributor deduplicated/non-HA",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Distributor and ingester discarded samples rate\nThe rate of each sample's discarding reason.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 16,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by (reason) (rate(cortex_discarded_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{ reason }} (distributor)",
                            "legendLink": null
                         },
                         {
                            "expr": "sum by (reason) (rate(cortex_discarded_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{ reason }} (ingester)",
                            "legendLink": null
                         }
                      ],
                      "title": "Distributor and ingester discarded samples rate",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Samples ingestion funnel",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Distributor exemplars incoming rate\nThe rate of exemplars that have come in to the distributor, including rejected or deduped exemplars.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 17,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_distributor_exemplars_in_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "rate",
                            "legendLink": null
                         }
                      ],
                      "title": "Distributor exemplars incoming rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Distributor exemplars received (accepted) rate\nThe rate of received exemplars, excluding rejected and deduped exemplars.\nThis number can be sensibly lower than incoming rate because we dedupe the HA sent exemplars, and then reject based on time.\nSee discarded rate for reasons why exemplars are being discarded.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 18,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_distributor_received_exemplars_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "rate",
                            "legendLink": null
                         }
                      ],
                      "title": "Distributor exemplars received (accepted) rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Distributor discarded exemplars rate\nThe rate of each exmplars' discarding reason.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 19,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by (reason) (rate(cortex_discarded_exemplars_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{ reason }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Distributor discarded exemplars rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Ingester appended exemplars rate\nTotal number of exemplars appended in the ingesters.\nThis can be lower than ingested exemplars rate since TSDB does not append the same exemplar twice, and those can be frequent.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 20,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(\n  rate(cortex_ingester_tsdb_exemplar_exemplars_appended_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"}[$__rate_interval])\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n)\n",
                            "format": "time_series",
                            "legendFormat": "rate",
                            "legendLink": null
                         }
                      ],
                      "title": "Ingester appended exemplars rate",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Exemplars ingestion funnel",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Symbol table size for loaded blocks\nSize of symbol table in memory for loaded blocks, averaged by ingester.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 21,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by (job) (cortex_ingester_tsdb_symbol_table_size_bytes{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"})",
                            "format": "time_series",
                            "legendFormat": "{{ job }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Symbol table size for loaded blocks",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Space used by local blocks\nThe number of bytes that are currently used for local storage by all blocks.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 22,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by (job) (cortex_ingester_tsdb_storage_blocks_bytes{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", user=\"$user\"})",
                            "format": "time_series",
                            "legendFormat": "{{ job }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Space used by local blocks",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ingesters' storage",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Number of groups\nTotal number of rule groups for a tenant.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 23,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "count(sum by (rule_group) (cortex_prometheus_rule_group_rules{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", user=\"$user\"}))",
                            "format": "time_series",
                            "legendFormat": "groups",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_limits_overrides{cluster=~\"$cluster\", job=~\"($namespace)/((overrides-exporter|mimir-backend.*))\", limit_name=\"ruler_max_rule_groups_per_tenant\", user=\"$user\"})\nor\nmax(cortex_limits_defaults{cluster=~\"$cluster\", job=~\"($namespace)/((overrides-exporter|mimir-backend.*))\", limit_name=\"ruler_max_rule_groups_per_tenant\"})\n",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "Number of groups",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Number of rules\nTotal number of rules for a tenant.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 24,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(cortex_prometheus_rule_group_rules{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", user=\"$user\"})",
                            "format": "time_series",
                            "legendFormat": "rules",
                            "legendLink": null
                         }
                      ],
                      "title": "Number of rules",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 25,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_prometheus_rule_evaluations_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "rate",
                            "legendLink": null
                         }
                      ],
                      "title": "Total evaluations rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 26,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by (rule_group) (rate(cortex_prometheus_rule_evaluation_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", user=\"$user\"}[$__rate_interval])) > 0",
                            "format": "time_series",
                            "legendFormat": "{{ rule_group }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Failed evaluations rate",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Rules",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "id": 27,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "sort": {
                         "col": 2,
                         "desc": true
                      },
                      "spaceLength": 10,
                      "span": 6,
                      "stack": false,
                      "steppedLine": false,
                      "styles": [
                         {
                            "alias": "Time",
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "pattern": "Time",
                            "type": "hidden"
                         },
                         {
                            "alias": "rules",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #A",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "pattern": "/.*/",
                            "thresholds": [ ],
                            "type": "string",
                            "unit": "short"
                         }
                      ],
                      "targets": [
                         {
                            "expr": "topk($limit, sum by (rule_group) (cortex_prometheus_rule_group_rules{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", user=\"$user\"}))",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Top $limit biggest groups",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "transform": "table",
                      "type": "table",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "id": 28,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "sort": {
                         "col": 2,
                         "desc": true
                      },
                      "spaceLength": 10,
                      "span": 6,
                      "stack": false,
                      "steppedLine": false,
                      "styles": [
                         {
                            "alias": "Time",
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "pattern": "Time",
                            "type": "hidden"
                         },
                         {
                            "alias": "seconds",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value #A",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "pattern": "/.*/",
                            "thresholds": [ ],
                            "type": "string",
                            "unit": "short"
                         }
                      ],
                      "targets": [
                         {
                            "expr": "topk($limit, sum by (rule_group) (cortex_prometheus_rule_group_last_duration_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", user=\"$user\"}))",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Top $limit slowest groups (last evaluation)",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "transform": "table",
                      "type": "table",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Top rules",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 29,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_prometheus_notifications_sent_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "rate",
                            "legendLink": null
                         }
                      ],
                      "title": "Sent notifications rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "rate"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 30,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_prometheus_notifications_errors_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "rate",
                            "legendLink": null
                         }
                      ],
                      "title": "Failed notifications rate",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Notifications",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 31,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by (user) (cortex_alertmanager_alerts{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", user=\"$user\"})",
                            "format": "time_series",
                            "legendFormat": "alerts",
                            "legendLink": null
                         },
                         {
                            "expr": "sum by (user) (cortex_alertmanager_silences{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", user=\"$user\"})",
                            "format": "time_series",
                            "legendFormat": "silences",
                            "legendLink": null
                         }
                      ],
                      "title": "Alerts",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 32,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "(\nsum(rate(cortex_alertmanager_notifications_total{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", user=\"$user\"}[$__rate_interval]))\n-\non() (sum(rate(cortex_alertmanager_notifications_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", user=\"$user\"}[$__rate_interval])) or on () vector(0))\n) > 0\n",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_alertmanager_notifications_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "NPS",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 33,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "(\nsum(rate(cortex_alertmanager_notifications_total{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", user=\"$user\"}[$__rate_interval])) by(integration)\n-\n(sum(rate(cortex_alertmanager_notifications_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", user=\"$user\"}[$__rate_interval])) by(integration) or\n (sum(rate(cortex_alertmanager_notifications_total{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", user=\"$user\"}[$__rate_interval])) by(integration) * 0)\n)) > 0\n",
                            "format": "time_series",
                            "legendFormat": "success - {{ integration }}",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_alertmanager_notifications_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((alertmanager|cortex|mimir|mimir-backend.*))\", user=\"$user\"}[$__rate_interval])) by(integration)",
                            "format": "time_series",
                            "legendFormat": "failed - {{ integration }}",
                            "legendLink": null
                         }
                      ],
                      "title": "NPS by integration",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Alertmanager",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 34,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_query_frontend_queries_total{cluster=~\"$cluster\", job=~\"($namespace)/((query-frontend.*|cortex|mimir|mimir-read.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Queries / Sec",
                            "legendLink": null
                         }
                      ],
                      "title": "Rate of Read Requests - query-frontend",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 35,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum(cortex_query_scheduler_queue_length{cluster=~\"$cluster\", job=~\"($namespace)/((query-scheduler.*|mimir-backend.*))\", user=\"$user\"})",
                            "format": "time_series",
                            "legendFormat": "Queue Length",
                            "legendLink": null
                         }
                      ],
                      "title": "Number of Queries Queued - query-scheduler",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Read Path - Queries (User)",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 36,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_query_frontend_queries_total{cluster=~\"$cluster\", job=~\"($namespace)/((ruler-query-frontend.*))\", user=\"$user\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Queries / Sec",
                            "legendLink": null
                         }
                      ],
                      "title": "Rate of Read Requests - ruler-query-frontend",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 37,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum(cortex_query_scheduler_queue_length{cluster=~\"$cluster\", job=~\"($namespace)/((ruler-query-scheduler.*))\", user=\"$user\"})",
                            "format": "time_series",
                            "legendFormat": "Queue Length",
                            "legendLink": null
                         }
                      ],
                      "title": "Number of Queries Queued - ruler-query-scheduler",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Read Path - Queries (Ruler)",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Estimated Compaction Jobs\nEstimated number of compaction jobs for selected user, based on latest version of bucket index. When user sends data, ingesters upload new user blocks every 2 hours\n(shortly after 01:00 UTC, 03:00 UTC, 05:00 UTC, etc.), and compactors should process all of the blocks within 2h interval.\nIf this graph regularly goes to zero (or close to zero) in 2 hour intervals, then compaction for this user works correctly.\n\nDepending on the configuration, there are two types of jobs: `split` jobs and `merge` jobs. Split jobs will only show up when user is configured with positive number of `compactor_split_and_merge_shards`.\nValues for split and merge jobs are stacked.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 50,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 38,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by (type) (cortex_bucket_index_estimated_compaction_jobs{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\", user=\"$user\"})\nand ignoring(type)\n(sum(rate(cortex_bucket_index_estimated_compaction_jobs_errors_total{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) == 0)\n",
                            "format": "time_series",
                            "legendFormat": "{{ job }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Estimated Compaction Jobs",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Number of blocks\nNumber of blocks stored in long-term storage for this user.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 39,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "max by (user) (cortex_bucket_blocks_count{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\", user=\"$user\"})\n",
                            "format": "time_series",
                            "legendFormat": "{{ job }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Blocks",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Compactions",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "default",
                      "value": "default"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": true,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "namespace",
                   "multi": true,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "user",
                   "multi": false,
                   "name": "user",
                   "options": [ ],
                   "query": "label_values(cortex_ingester_active_series{cluster=~\"$cluster\", namespace=~\"$namespace\"}, user)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "current": {
                      "selected": true,
                      "text": "10",
                      "value": "10"
                   },
                   "hide": 0,
                   "includeAll": false,
                   "multi": false,
                   "name": "limit",
                   "options": [
                      {
                         "selected": true,
                         "text": "10",
                         "value": "10"
                      },
                      {
                         "selected": false,
                         "text": "50",
                         "value": "50"
                      },
                      {
                         "selected": false,
                         "text": "100",
                         "value": "100"
                      },
                      {
                         "selected": false,
                         "text": "500",
                         "value": "500"
                      },
                      {
                         "selected": false,
                         "text": "1000",
                         "value": "1000"
                      }
                   ],
                   "type": "custom"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Tenants",
          "uid": "35fa247ce651ba189debf33d7ae41611",
          "version": 0
       }
---
# Source: lgtm-distributed/charts/mimir/templates/metamonitoring/grafana-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-top-tenants-dashboard
  namespace: default
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    grafana_dashboard: "1"
  annotations:
    k8s-sidecar-target-directory: /tmp/dashboards/Mimir Dashboards
data:
  mimir-top-tenants.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "25px",
                "panels": [
                   {
                      "content": "<p>\n  This dashboard shows the top tenants based on multiple selection criterias.\n  Rows are collapsed by default to avoid querying all of them.\n  Use the templating variable \"limit\" above to select the amount of users to be shown.\n</p>\n",
                      "datasource": null,
                      "description": "",
                      "id": 1,
                      "mode": "markdown",
                      "span": 12,
                      "title": "",
                      "transparent": true,
                      "type": "text"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Top tenants dashboard description",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "id": 2,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "sort": {
                         "col": 2,
                         "desc": true
                      },
                      "spaceLength": 10,
                      "span": 12,
                      "stack": false,
                      "steppedLine": false,
                      "styles": [
                         {
                            "alias": "Time",
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "pattern": "Time",
                            "type": "hidden"
                         },
                         {
                            "alias": "series",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "user",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "user",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "string"
                         },
                         {
                            "alias": "",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "pattern": "/.*/",
                            "thresholds": [ ],
                            "type": "string",
                            "unit": "short"
                         }
                      ],
                      "targets": [
                         {
                            "expr": "topk($limit,\n  sum by (user) (\n    cortex_ingester_active_series{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}\n    / on(cluster, namespace) group_left\n    max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n  )\n)\n",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Top $limit users by active series",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "transform": "table",
                      "type": "table",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "By active series",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "id": 3,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "sort": {
                         "col": 2,
                         "desc": true
                      },
                      "spaceLength": 10,
                      "span": 12,
                      "stack": false,
                      "steppedLine": false,
                      "styles": [
                         {
                            "alias": "Time",
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "pattern": "Time",
                            "type": "hidden"
                         },
                         {
                            "alias": "series",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "user",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "user",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "string"
                         },
                         {
                            "alias": "",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "pattern": "/.*/",
                            "thresholds": [ ],
                            "type": "string",
                            "unit": "short"
                         }
                      ],
                      "targets": [
                         {
                            "expr": "topk($limit, sum by (user) (\n  (\n      sum by (user, cluster, namespace) (cortex_ingester_memory_series_created_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} )\n      -\n      sum by (user, cluster, namespace) (cortex_ingester_memory_series_removed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} )\n  )\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"} )\n)\n)",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Top $limit users by in-memory series (series created - series removed)",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "transform": "table",
                      "type": "table",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "By in-memory series",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 12,
                      "targets": [
                         {
                            "expr": "sum by (user) (\n  (\n      sum by (user, cluster, namespace) (cortex_ingester_memory_series_created_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} )\n      -\n      sum by (user, cluster, namespace) (cortex_ingester_memory_series_removed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} )\n  )\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"} )\n)\n\nand\ntopk($limit, sum by (user) (\n  (\n      sum by (user, cluster, namespace) (cortex_ingester_memory_series_created_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} @ end())\n      -\n      sum by (user, cluster, namespace) (cortex_ingester_memory_series_removed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} @ end())\n  )\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"} @ end())\n)\n - sum by (user) (\n  (\n      sum by (user, cluster, namespace) (cortex_ingester_memory_series_created_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} @ start())\n      -\n      sum by (user, cluster, namespace) (cortex_ingester_memory_series_removed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"} @ start())\n  )\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"} @ start())\n)\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{ user }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Top $limit users by in-memory series (series created - series removed) that grew the most between query range start and query range end",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "By in-memory series growth",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "id": 5,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "sort": {
                         "col": 2,
                         "desc": true
                      },
                      "spaceLength": 10,
                      "span": 12,
                      "stack": false,
                      "steppedLine": false,
                      "styles": [
                         {
                            "alias": "Time",
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "pattern": "Time",
                            "type": "hidden"
                         },
                         {
                            "alias": "samples/s",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "user",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "user",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "string"
                         },
                         {
                            "alias": "",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "pattern": "/.*/",
                            "thresholds": [ ],
                            "type": "string",
                            "unit": "short"
                         }
                      ],
                      "targets": [
                         {
                            "expr": "topk($limit, sum by (user) (rate(cortex_distributor_received_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"}[5m])))",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Top $limit users by received samples rate in last 5m",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "transform": "table",
                      "type": "table",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "By samples rate",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 12,
                      "targets": [
                         {
                            "expr": "sum by (user) (rate(cortex_distributor_received_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))\nand\ntopk($limit,\n  sum by (user) (rate(cortex_distributor_received_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval] @ end()))\n  -\n  sum by (user) (rate(cortex_distributor_received_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval] @ start()))\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{ user }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Top $limit users by received samples rate that grew the most between query range start and query range end",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "By samples rate growth",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "id": 7,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "sort": {
                         "col": 2,
                         "desc": true
                      },
                      "spaceLength": 10,
                      "span": 12,
                      "stack": false,
                      "steppedLine": false,
                      "styles": [
                         {
                            "alias": "Time",
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "pattern": "Time",
                            "type": "hidden"
                         },
                         {
                            "alias": "samples/s",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "user",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "user",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "string"
                         },
                         {
                            "alias": "",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "pattern": "/.*/",
                            "thresholds": [ ],
                            "type": "string",
                            "unit": "short"
                         }
                      ],
                      "targets": [
                         {
                            "expr": "topk($limit, sum by (user) (rate(cortex_discarded_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*|distributor.*|cortex|mimir|mimir-write.*))\"}[5m])))",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Top $limit users by discarded samples rate in last 5m",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "transform": "table",
                      "type": "table",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "By discarded samples rate",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 12,
                      "targets": [
                         {
                            "expr": "sum by (user) (rate(cortex_discarded_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*|distributor.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))\nand\ntopk($limit,\n  sum by (user) (rate(cortex_discarded_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*|distributor.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval] @ end()))\n  -\n  sum by (user) (rate(cortex_discarded_samples_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*|distributor.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval] @ start()))\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{ user }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Top $limit users by discarded samples rate that grew the most between query range start and query range end",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "By discarded samples rate growth",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "id": 9,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "sort": {
                         "col": 2,
                         "desc": true
                      },
                      "spaceLength": 10,
                      "span": 12,
                      "stack": false,
                      "steppedLine": false,
                      "styles": [
                         {
                            "alias": "Time",
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "pattern": "Time",
                            "type": "hidden"
                         },
                         {
                            "alias": "series",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "user",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "user",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "string"
                         },
                         {
                            "alias": "",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "pattern": "/.*/",
                            "thresholds": [ ],
                            "type": "string",
                            "unit": "short"
                         }
                      ],
                      "targets": [
                         {
                            "expr": "topk($limit,\n  sum by (user) (\n    cortex_ingester_tsdb_exemplar_series_with_exemplars_in_storage{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}\n    / on(cluster, namespace) group_left\n    max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n  )\n)\n",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Top $limit users by series with exemplars",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "transform": "table",
                      "type": "table",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "By series with exemplars",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "id": 10,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "sort": {
                         "col": 2,
                         "desc": true
                      },
                      "spaceLength": 10,
                      "span": 12,
                      "stack": false,
                      "steppedLine": false,
                      "styles": [
                         {
                            "alias": "Time",
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "pattern": "Time",
                            "type": "hidden"
                         },
                         {
                            "alias": "exemplars/s",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "user",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "user",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "string"
                         },
                         {
                            "alias": "",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "pattern": "/.*/",
                            "thresholds": [ ],
                            "type": "string",
                            "unit": "short"
                         }
                      ],
                      "targets": [
                         {
                            "expr": "topk($limit, sum by (user) (rate(cortex_distributor_received_exemplars_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"}[5m])))",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Top $limit users by received exemplars rate in last 5m",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "transform": "table",
                      "type": "table",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "By exemplars rate",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "id": 11,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "sort": {
                         "col": 3,
                         "desc": true
                      },
                      "spaceLength": 10,
                      "span": 12,
                      "stack": false,
                      "steppedLine": false,
                      "styles": [
                         {
                            "alias": "Time",
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "pattern": "Time",
                            "type": "hidden"
                         },
                         {
                            "alias": "rules",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "user",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "user",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "string"
                         },
                         {
                            "alias": "",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "pattern": "/.*/",
                            "thresholds": [ ],
                            "type": "string",
                            "unit": "short"
                         }
                      ],
                      "targets": [
                         {
                            "expr": "topk($limit, sum by (rule_group, user) (cortex_prometheus_rule_group_rules{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}))",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Top $limit biggest groups",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "transform": "table",
                      "type": "table",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "By rule group size",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "id": 12,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "sort": {
                         "col": 3,
                         "desc": true
                      },
                      "spaceLength": 10,
                      "span": 12,
                      "stack": false,
                      "steppedLine": false,
                      "styles": [
                         {
                            "alias": "Time",
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "pattern": "Time",
                            "type": "hidden"
                         },
                         {
                            "alias": "seconds",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "user",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "user",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "string"
                         },
                         {
                            "alias": "",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "pattern": "/.*/",
                            "thresholds": [ ],
                            "type": "string",
                            "unit": "short"
                         }
                      ],
                      "targets": [
                         {
                            "expr": "topk($limit, sum by (rule_group, user) (cortex_prometheus_rule_group_last_duration_seconds{cluster=~\"$cluster\", job=~\"($namespace)/((ruler|cortex|mimir|mimir-backend.*))\"}))",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Top $limit slowest groups (last evaluation)",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "transform": "table",
                      "type": "table",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "By rule group evaluation time",
                "titleSize": "h6"
             },
             {
                "collapse": true,
                "height": "250px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "id": 13,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "sort": {
                         "col": 2,
                         "desc": true
                      },
                      "spaceLength": 10,
                      "span": 12,
                      "stack": false,
                      "steppedLine": false,
                      "styles": [
                         {
                            "alias": "Time",
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "pattern": "Time",
                            "type": "hidden"
                         },
                         {
                            "alias": "Compaction Jobs",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 0,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "Value",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "short"
                         },
                         {
                            "alias": "user",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "link": false,
                            "linkTargetBlank": false,
                            "linkTooltip": "Drill down",
                            "linkUrl": "",
                            "pattern": "user",
                            "thresholds": [ ],
                            "type": "number",
                            "unit": "string"
                         },
                         {
                            "alias": "",
                            "colorMode": null,
                            "colors": [ ],
                            "dateFormat": "YYYY-MM-DD HH:mm:ss",
                            "decimals": 2,
                            "pattern": "/.*/",
                            "thresholds": [ ],
                            "type": "string",
                            "unit": "short"
                         }
                      ],
                      "targets": [
                         {
                            "expr": "topk($limit,\n  sum by (user) (cortex_bucket_index_estimated_compaction_jobs{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"})\n  and ignoring(user)\n  (sum(rate(cortex_bucket_index_estimated_compaction_jobs_errors_total{cluster=~\"$cluster\", job=~\"($namespace)/((compactor.*|cortex|mimir|mimir-backend.*))\"}[$__rate_interval])) == 0)\n)\n",
                            "format": "table",
                            "instant": true,
                            "legendFormat": "",
                            "refId": "A"
                         }
                      ],
                      "thresholds": [ ],
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Top $limit users by estimated compaction jobs from bucket-index",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "transform": "table",
                      "type": "table",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "By estimated compaction jobs from bucket-index",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "default",
                      "value": "default"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": true,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "namespace",
                   "multi": true,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "current": {
                      "selected": true,
                      "text": "10",
                      "value": "10"
                   },
                   "hide": 0,
                   "includeAll": false,
                   "multi": false,
                   "name": "limit",
                   "options": [
                      {
                         "selected": true,
                         "text": "10",
                         "value": "10"
                      },
                      {
                         "selected": false,
                         "text": "50",
                         "value": "50"
                      },
                      {
                         "selected": false,
                         "text": "100",
                         "value": "100"
                      }
                   ],
                   "type": "custom"
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Top tenants",
          "uid": "bc6e12d4fe540e4a1785b9d3ca0ffdd9",
          "version": 0
       }
---
# Source: lgtm-distributed/charts/mimir/templates/metamonitoring/grafana-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-writes-networking-dashboard
  namespace: default
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    grafana_dashboard: "1"
  annotations:
    k8s-sidecar-target-directory: /tmp/dashboards/Mimir Dashboards
data:
  mimir-writes-networking.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 1,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(distributor|ingester|mimir-write).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 2,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(distributor|ingester|mimir-write).*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 3,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(distributor|ingester|mimir-write).*\"})",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(distributor|ingester|mimir-write).*\"})",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         }
                      ],
                      "title": "Inflight requests (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(distributor|ingester|mimir-write).*\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(distributor|ingester|mimir-write).*\"}))",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_tcp_connections_limit{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?(distributor|ingester|mimir-write).*\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "TCP connections (per pod)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Summary",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?distributor.*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?distributor.*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?distributor.*\"})",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?distributor.*\"})",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         }
                      ],
                      "title": "Inflight requests (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?distributor.*\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?distributor.*\"}))",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_tcp_connections_limit{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?distributor.*\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "TCP connections (per pod)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Distributor",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_receive_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ingester.*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Receive bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 10,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_network_transmit_bytes_total{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ingester.*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Transmit bandwidth",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 11,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ingester.*\"})",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(cortex_inflight_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ingester.*\"})",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         }
                      ],
                      "title": "Inflight requests (per pod)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 12,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "avg(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ingester.*\"}))",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         },
                         {
                            "expr": "max(sum by(pod) (cortex_tcp_connections{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ingester.*\"}))",
                            "format": "time_series",
                            "legendFormat": "highest",
                            "legendLink": null
                         },
                         {
                            "expr": "min(cortex_tcp_connections_limit{cluster=~\"$cluster\", namespace=~\"$namespace\",pod=~\"(.*mimir-)?ingester.*\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         }
                      ],
                      "title": "TCP connections (per pod)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ingester",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "default",
                      "value": "default"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".*",
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "namespace",
                   "multi": false,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Writes networking",
          "uid": "978c1cb452585c96697a238eaac7fe2d",
          "version": 0
       }
---
# Source: lgtm-distributed/charts/mimir/templates/metamonitoring/grafana-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-writes-resources-dashboard
  namespace: default
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    grafana_dashboard: "1"
  annotations:
    k8s-sidecar-target-directory: /tmp/dashboards/Mimir Dashboards
data:
  mimir-writes-resources.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 1,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"distributor|ingester|mimir-write\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 2,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"distributor|ingester|mimir-write\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 3,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"distributor|ingester|mimir-write\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Summary",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 4,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"distributor\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"distributor\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"distributor\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"distributor\",resource=\"cpu\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 5,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"distributor\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"distributor\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"distributor\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 6,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"distributor\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Distributor",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (cortex_ingester_memory_series{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "In-memory series",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 8,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by(pod) (rate(container_cpu_usage_seconds_total{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ingester\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_cpu_quota{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ingester\"} / container_spec_cpu_period{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ingester\"})",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ingester\",resource=\"cpu\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "CPU",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ingester",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_rss{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ingester\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ingester\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ingester\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (RSS)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "request"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#FFC000",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "limit"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E02F44",
                                        "mode": "fixed"
                                     }
                                  },
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 10,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(pod) (container_memory_working_set_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ingester\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         },
                         {
                            "expr": "min(container_spec_memory_limit_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ingester\"} > 0)",
                            "format": "time_series",
                            "legendFormat": "limit",
                            "legendLink": null
                         },
                         {
                            "expr": "min(kube_pod_container_resource_requests{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ingester\",resource=\"memory\"})",
                            "format": "time_series",
                            "legendFormat": "request",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (workingset)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "bytes"
                         },
                         "overrides": [ ]
                      },
                      "id": 11,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(pod) (go_memstats_heap_inuse_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\",container=~\"ingester\"})",
                            "format": "time_series",
                            "legendFormat": "{{pod}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Memory (go heap inuse)",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 12,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(instance, pod, device) (\n  rate(\n    node_disk_written_bytes_total[$__rate_interval]\n  )\n)\n+\nignoring(pod) group_right() (\n  label_replace(\n    count by(\n      instance,\n      pod,\n      device\n    )\n    (\n      container_fs_writes_bytes_total{\n        cluster=~\"$cluster\", namespace=~\"$namespace\",\n        container=~\"ingester\",\n        device!~\".*sda.*\"\n      }\n    ),\n    \"device\",\n    \"$1\",\n    \"device\",\n    \"/dev/(.*)\"\n  ) * 0\n)\n\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}} - {{device}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk writes",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "Bps"
                         },
                         "overrides": [ ]
                      },
                      "id": 13,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by(instance, pod, device) (\n  rate(\n    node_disk_read_bytes_total[$__rate_interval]\n  )\n) + ignoring(pod) group_right() (\n  label_replace(\n    count by(\n      instance,\n      pod,\n      device\n    )\n    (\n      container_fs_writes_bytes_total{\n        cluster=~\"$cluster\", namespace=~\"$namespace\",\n        container=~\"ingester\",\n        device!~\".*sda.*\"\n      }\n    ),\n    \"device\",\n    \"$1\",\n    \"device\",\n    \"/dev/(.*)\"\n  ) * 0\n)\n\n",
                            "format": "time_series",
                            "legendFormat": "{{pod}} - {{device}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk reads",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "custom": {
                            "fillOpacity": 0
                         },
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "percentunit"
                         },
                         "overrides": [ ]
                      },
                      "id": 14,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "max by(persistentvolumeclaim) (\n  kubelet_volume_stats_used_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"} /\n  kubelet_volume_stats_capacity_bytes{cluster=~\"$cluster\", namespace=~\"$namespace\"}\n)\nand\ncount by(persistentvolumeclaim) (\n  kube_persistentvolumeclaim_labels{\n    cluster=~\"$cluster\", namespace=~\"$namespace\",\n    label_name=~\"(ingester).*\"\n  }\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{persistentvolumeclaim}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Disk space utilization",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "default",
                      "value": "default"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".*",
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": false,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": null,
                   "current": {
                      "text": "prod",
                      "value": "prod"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": false,
                   "label": "namespace",
                   "multi": false,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Writes resources",
          "uid": "bc9160e50b52e89e0e49c840fea3d379",
          "version": 0
       }
---
# Source: lgtm-distributed/charts/mimir/templates/metamonitoring/grafana-dashboards.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-writes-dashboard
  namespace: default
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    grafana_dashboard: "1"
  annotations:
    k8s-sidecar-target-directory: /tmp/dashboards/Mimir Dashboards
data:
  mimir-writes.json: |-
    {
          "__requires": [
             {
                "id": "grafana",
                "name": "Grafana",
                "type": "grafana",
                "version": "8.0.0"
             }
          ],
          "annotations": {
             "list": [ ]
          },
          "editable": true,
          "gnetId": null,
          "graphTooltip": 1,
          "hideControls": false,
          "links": [
             {
                "asDropdown": true,
                "icon": "external link",
                "includeVars": true,
                "keepTime": true,
                "tags": [
                   "mimir"
                ],
                "targetBlank": false,
                "title": "Mimir dashboards",
                "type": "dashboards"
             }
          ],
          "refresh": "10s",
          "rows": [
             {
                "collapse": false,
                "height": "125px",
                "panels": [
                   {
                      "content": "<p>\n  This dashboard shows various health metrics for the write path.\n  It is broken into sections for each service on the write path,\n  and organized by the order in which the write request flows.\n  <br/>\n  Incoming metrics data travels from the gateway → distributor → ingester.\n  <br/>\n  For each service, there are 3 panels showing\n  (1) requests per second to that service,\n  (2) average, median, and p99 latency of requests to that service, and\n  (3) p99 latency of requests to each instance of that service.\n</p>\n<p>\n  It also includes metrics for the key-value (KV) stores used to manage\n  the high-availability tracker and the ingesters.\n</p>\n",
                      "datasource": null,
                      "description": "",
                      "id": 1,
                      "mode": "markdown",
                      "span": 12,
                      "title": "",
                      "transparent": true,
                      "type": "text"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Writes dashboard description",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "100px",
                "panels": [
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "format": "short",
                      "id": 2,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 2,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(cluster_namespace_job:cortex_distributor_received_samples:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Samples / sec",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "description": "### Exemplars / sec\nThe total number of received exemplars by the distributors, excluding rejected and deduped exemplars, but not necessarily ingested by the ingesters.\n\n",
                      "fill": 1,
                      "format": "short",
                      "id": 3,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 2,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(cluster_namespace_job:cortex_distributor_received_exemplars:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Exemplars / sec",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "description": "### In-memory series\nThe number of series not yet flushed to object storage that are held in ingester memory.\n\n",
                      "fill": 1,
                      "format": "short",
                      "id": 4,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 2,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(cortex_ingester_memory_series{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}\n/ on(cluster, namespace) group_left\nmax by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"}))\n",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "In-memory series",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "description": "### Exemplars in ingesters\nNumber of TSDB exemplars currently in ingesters' storage.\n\n",
                      "fill": 1,
                      "format": "short",
                      "id": 5,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 2,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "sum(cortex_ingester_tsdb_exemplar_exemplars_in_storage{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}\n/ on(cluster, namespace) group_left\nmax by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"}))\n",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Exemplars in ingesters",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   },
                   {
                      "aliasColors": { },
                      "bars": false,
                      "dashLength": 10,
                      "dashes": false,
                      "datasource": "$datasource",
                      "fill": 1,
                      "format": "short",
                      "id": 6,
                      "legend": {
                         "avg": false,
                         "current": false,
                         "max": false,
                         "min": false,
                         "show": true,
                         "total": false,
                         "values": false
                      },
                      "lines": true,
                      "linewidth": 1,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "percentage": false,
                      "pointradius": 5,
                      "points": false,
                      "renderer": "flot",
                      "seriesOverrides": [ ],
                      "spaceLength": 10,
                      "span": 2,
                      "stack": false,
                      "steppedLine": false,
                      "targets": [
                         {
                            "expr": "count(count by(user) (cortex_ingester_active_series{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}))",
                            "format": "time_series",
                            "instant": true,
                            "refId": "A"
                         }
                      ],
                      "thresholds": "70,80",
                      "timeFrom": null,
                      "timeShift": null,
                      "title": "Tenants",
                      "tooltip": {
                         "shared": false,
                         "sort": 0,
                         "value_type": "individual"
                      },
                      "type": "singlestat",
                      "xaxis": {
                         "buckets": null,
                         "mode": "time",
                         "name": null,
                         "show": true,
                         "values": [ ]
                      },
                      "yaxes": [
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": false,
                "title": "Headlines",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Requests / sec\nThe rate of successful, failed and rejected requests to distributor.\nRejected requests are requests that distributor fails to handle because of distributor instance limits.\nWhen distributor is configured to use \"early\" request rejection, then rejected requests are NOT included in other metrics.\nWhen distributor is not configured to use \"early\" request rejection, then rejected requests are also counted as \"errors\".\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 7,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 8,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "1e3 * sum(cluster_job_route:cortex_request_duration_seconds_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"}) / sum(cluster_job_route:cortex_request_duration_seconds_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 9,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "displayMode": "hidden",
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "exemplar": true,
                            "expr": "histogram_quantile(0.99, sum by(le, pod) (rate(cortex_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", route=~\"/distributor.Distributor/Push|/httpgrpc.*|api_(v1|prom)_push|otlp_v1_metrics\"}[$__rate_interval])))",
                            "format": "time_series",
                            "legendFormat": "",
                            "legendLink": null
                         }
                      ],
                      "title": "Per pod p99 latency",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Distributor",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Requests / sec\nThe rate of successful, failed and rejected requests to ingester.\nRejected requests are requests that ingester fails to handle because of ingester instance limits (ingester-max-inflight-push-requests, ingester-max-inflight-push-requests-bytes, ingester-max-ingestion-rate).\nWhen ingester is configured to use \"early\" request rejection, then rejected requests are NOT included in other metrics.\nWhen ingester is not configured to use \"early\" request rejection, then rejected requests are also counted as \"errors\".\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 10,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\",route=\"/cortex.Ingester/Push\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 11,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=\"/cortex.Ingester/Push\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum by (le) (cluster_job_route:cortex_request_duration_seconds_bucket:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=\"/cortex.Ingester/Push\"})) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "1e3 * sum(cluster_job_route:cortex_request_duration_seconds_sum:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=\"/cortex.Ingester/Push\"}) / sum(cluster_job_route:cortex_request_duration_seconds_count:sum_rate{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=\"/cortex.Ingester/Push\"})",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 0,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 12,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "displayMode": "hidden",
                            "showLegend": false
                         },
                         "tooltip": {
                            "mode": "multi",
                            "sort": "desc"
                         }
                      },
                      "span": 4,
                      "targets": [
                         {
                            "exemplar": true,
                            "expr": "histogram_quantile(0.99, sum by(le, pod) (rate(cortex_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", route=\"/cortex.Ingester/Push\"}[$__rate_interval])))",
                            "format": "time_series",
                            "legendFormat": "",
                            "legendLink": null
                         }
                      ],
                      "title": "Per pod p99 latency",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ingester",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Replicas\nThe maximum and current number of distributor replicas.\nNote: The current number of replicas can still show 1 replica even when scaled to 0.\nBecause HPA never reports 0 replicas, the query will report 0 only if the HPA is not active.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Max .+/"
                               },
                               "properties": [
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Current .+/"
                               },
                               "properties": [
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byRegexp",
                                  "options": "/Min .+/"
                               },
                               "properties": [
                                  {
                                     "id": "custom.fillOpacity",
                                     "value": 0
                                  },
                                  {
                                     "id": "custom.lineStyle",
                                     "value": {
                                        "fill": "dash"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 13,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "max by (scaletargetref_name) (\n  kube_horizontalpodautoscaler_spec_max_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-distributor\"}\n  # Add the scaletargetref_name label for readability\n  + on (cluster, namespace, horizontalpodautoscaler) group_left (scaletargetref_name)\n    0*kube_horizontalpodautoscaler_info{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-distributor\"}\n)\n",
                            "format": "time_series",
                            "legendFormat": "Max {{ scaletargetref_name }}",
                            "legendLink": null
                         },
                         {
                            "expr": "max by (scaletargetref_name) (\n  kube_horizontalpodautoscaler_status_current_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-distributor\"}\n  # HPA doesn't go to 0 replicas, so we multiply by 0 if the HPA is not active\n  * on (cluster, namespace, horizontalpodautoscaler)\n    kube_horizontalpodautoscaler_status_condition{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-distributor\", condition=\"ScalingActive\", status=\"true\"}\n  # Add the scaletargetref_name label for readability\n  + on (cluster, namespace, horizontalpodautoscaler) group_left (scaletargetref_name)\n    0*kube_horizontalpodautoscaler_info{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-distributor\"}\n)\n",
                            "format": "time_series",
                            "legendFormat": "Current {{ scaletargetref_name }}",
                            "legendLink": null
                         },
                         {
                            "expr": "max by (scaletargetref_name) (\n  kube_horizontalpodautoscaler_spec_min_replicas{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-distributor\"}\n  # Add the scaletargetref_name label for readability\n  + on (cluster, namespace, horizontalpodautoscaler) group_left (scaletargetref_name)\n    0*kube_horizontalpodautoscaler_info{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-distributor\"}\n)\n",
                            "format": "time_series",
                            "legendFormat": "Min {{ scaletargetref_name }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Replicas",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Scaling metric (CPU): Desired replicas\nThis panel shows the scaling metric exposed by KEDA divided by the target/threshold used.\nIt should represent the desired number of replicas, ignoring the min/max constraints applied later.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 14,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by (scaler) (\n  label_replace(\n    keda_scaler_metrics_value{cluster=~\"$cluster\", exported_namespace=~\"$namespace\", scaler=~\".*cpu.*\"},\n    \"namespace\", \"$1\", \"exported_namespace\", \"(.*)\"\n  )\n  /\n  on(cluster, namespace, scaledObject, metric) group_left label_replace(\n    label_replace(\n      kube_horizontalpodautoscaler_spec_target_metric{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-distributor\"},\n      \"metric\", \"$1\", \"metric_name\", \"(.+)\"\n    ),\n    \"scaledObject\", \"$1\", \"horizontalpodautoscaler\", \"keda-hpa-(.*)\"\n  )\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{ scaler }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Scaling metric (CPU): Desired replicas",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Scaling metric (memory): Desired replicas\nThis panel shows the scaling metric exposed by KEDA divided by the target/threshold used.\nIt should represent the desired number of replicas, ignoring the min/max constraints applied later.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 15,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by (scaler) (\n  label_replace(\n    keda_scaler_metrics_value{cluster=~\"$cluster\", exported_namespace=~\"$namespace\", scaler=~\".*memory.*\"},\n    \"namespace\", \"$1\", \"exported_namespace\", \"(.*)\"\n  )\n  /\n  on(cluster, namespace, scaledObject, metric) group_left label_replace(\n    label_replace(\n      kube_horizontalpodautoscaler_spec_target_metric{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-distributor\"},\n      \"metric\", \"$1\", \"metric_name\", \"(.+)\"\n    ),\n    \"scaledObject\", \"$1\", \"horizontalpodautoscaler\", \"keda-hpa-(.*)\"\n  )\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{ scaler }}",
                            "legendLink": null
                         }
                      ],
                      "title": "Scaling metric (memory): Desired replicas",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Autoscaler failures rate\nThe rate of failures in the KEDA custom metrics API server. Whenever an error occurs, the KEDA custom\nmetrics server is unable to query the scaling metric from Prometheus so the autoscaler woudln't work properly.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [ ]
                      },
                      "id": 16,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum by(cluster, namespace, scaler, metric, scaledObject) (\n  label_replace(\n    rate(keda_scaler_errors[$__rate_interval]),\n    \"namespace\", \"$1\", \"exported_namespace\", \"(.+)\"\n  )\n) +\non(cluster, namespace, metric, scaledObject) group_left\nlabel_replace(\n  label_replace(\n      kube_horizontalpodautoscaler_spec_target_metric{cluster=~\"$cluster\", namespace=~\"$namespace\", horizontalpodautoscaler=~\"keda-hpa-distributor\"} * 0,\n      \"scaledObject\", \"$1\", \"horizontalpodautoscaler\", \"keda-hpa-(.*)\"\n  ),\n  \"metric\", \"$1\", \"metric_name\", \"(.+)\"\n)\n",
                            "format": "time_series",
                            "legendFormat": "{{scaler}} failures",
                            "legendLink": null
                         }
                      ],
                      "title": "Autoscaler failures rate",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Distributor - autoscaling",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 17,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", kv_name=~\"distributor-hatracker\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 18,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", kv_name=~\"distributor-hatracker\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", kv_name=~\"distributor-hatracker\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_kv_request_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", kv_name=~\"distributor-hatracker\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", kv_name=~\"distributor-hatracker\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Distributor - key-value store for high-availability (HA) deduplication",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 19,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", kv_name=~\"distributor-(lifecycler|ring)\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 20,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", kv_name=~\"distributor-(lifecycler|ring)\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", kv_name=~\"distributor-(lifecycler|ring)\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_kv_request_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", kv_name=~\"distributor-(lifecycler|ring)\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\", kv_name=~\"distributor-(lifecycler|ring)\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Distributor - key-value store for distributors ring",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "1xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EAB839",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "2xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "3xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#6ED0E0",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "4xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#EF843C",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "5xx"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "OK"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "cancel"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#A9A9A9",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "error"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "success"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 21,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by (status) (\n  label_replace(label_replace(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", kv_name=~\"ingester-.*\"}[$__rate_interval]),\n  \"status\", \"${1}xx\", \"status_code\", \"([0-9])..\"),\n  \"status\", \"${1}\", \"status_code\", \"([a-zA-Z]+)\"))\n",
                            "format": "time_series",
                            "legendFormat": "{{status}}",
                            "refId": "A"
                         }
                      ],
                      "title": "Requests / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 22,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", kv_name=~\"ingester-.*\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_kv_request_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", kv_name=~\"ingester-.*\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_kv_request_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", kv_name=~\"ingester-.*\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_kv_request_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\", kv_name=~\"ingester-.*\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Latency",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ingester - key-value store for the ingesters ring",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Uploaded blocks / sec\nThe rate of blocks being uploaded from the ingesters\nto object storage.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 23,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_ingester_shipper_uploads_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval])) - sum(rate(cortex_ingester_shipper_upload_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_ingester_shipper_upload_failures_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Uploaded blocks / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Upload latency\nThe average, median (50th percentile), and 99th percentile time\nthe ingesters take to upload blocks to object storage.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 24,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\",component=\"ingester\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(thanos_objstore_bucket_operation_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\",component=\"ingester\",operation=\"upload\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(thanos_objstore_bucket_operation_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\",component=\"ingester\",operation=\"upload\"}[$__rate_interval])) * 1e3 / sum(rate(thanos_objstore_bucket_operation_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\",component=\"ingester\",operation=\"upload\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Upload latency",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ingester - shipper",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Compactions per second\nIngesters maintain a local TSDB per-tenant on disk. Each TSDB maintains a head block for each\nactive time series; these blocks get periodically compacted (by default, every 2h).\nThis panel shows the rate of compaction operations across all TSDBs on all ingesters.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 25,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_ingester_tsdb_compactions_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_ingester_tsdb_compactions_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Compactions / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Compaction latency\nThe average, median (50th percentile), and 99th percentile time ingesters take to compact TSDB head blocks\non the local filesystem.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ms"
                         },
                         "overrides": [ ]
                      },
                      "id": 26,
                      "links": [ ],
                      "nullPointMode": "null as zero",
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "histogram_quantile(0.99, sum(rate(cortex_ingester_tsdb_compaction_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "99th Percentile",
                            "refId": "A"
                         },
                         {
                            "expr": "histogram_quantile(0.50, sum(rate(cortex_ingester_tsdb_compaction_duration_seconds_bucket{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval])) by (le)) * 1e3",
                            "format": "time_series",
                            "legendFormat": "50th Percentile",
                            "refId": "B"
                         },
                         {
                            "expr": "sum(rate(cortex_ingester_tsdb_compaction_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval])) * 1e3 / sum(rate(cortex_ingester_tsdb_compaction_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "Average",
                            "refId": "C"
                         }
                      ],
                      "title": "Compactions latency",
                      "type": "timeseries",
                      "yaxes": [
                         {
                            "format": "ms",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": 0,
                            "show": true
                         },
                         {
                            "format": "short",
                            "label": null,
                            "logBase": 1,
                            "max": null,
                            "min": null,
                            "show": false
                         }
                      ]
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ingester - TSDB head",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### WAL truncations per second\nThe WAL is truncated each time a new TSDB block is written. This panel measures the rate of\ntruncations.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 27,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_ingester_tsdb_wal_truncations_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval])) - sum(rate(cortex_ingester_tsdb_wal_truncations_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_ingester_tsdb_wal_truncations_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "WAL truncations / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Checkpoints created per second\nCheckpoints are created as part of the WAL truncation process.\nThis metric measures the rate of checkpoint creation.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "short"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "failed"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "successful"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#7EB26D",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 28,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_ingester_tsdb_checkpoint_creations_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval])) - sum(rate(cortex_ingester_tsdb_checkpoint_creations_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "successful",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_ingester_tsdb_checkpoint_creations_failed_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "failed",
                            "legendLink": null
                         }
                      ],
                      "title": "Checkpoints created / sec",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### WAL truncations latency (including checkpointing)\nAverage time taken to perform a full WAL truncation,\nincluding the time taken for the checkpointing to complete.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "noValue": "0",
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "s"
                         },
                         "overrides": [ ]
                      },
                      "id": 29,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_ingester_tsdb_wal_truncate_duration_seconds_sum{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))\n/\nsum(rate(cortex_ingester_tsdb_wal_truncate_duration_seconds_count{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval])) >= 0\n",
                            "format": "time_series",
                            "legendFormat": "avg",
                            "legendLink": null
                         }
                      ],
                      "title": "WAL truncations latency (includes checkpointing)",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 100,
                               "lineWidth": 0,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "normal"
                               }
                            },
                            "min": 0,
                            "noValue": "0",
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ops"
                         },
                         "overrides": [
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "WAL"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E24D42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            },
                            {
                               "matcher": {
                                  "id": "byName",
                                  "options": "mmap-ed chunks"
                               },
                               "properties": [
                                  {
                                     "id": "color",
                                     "value": {
                                        "fixedColor": "#E28A42",
                                        "mode": "fixed"
                                     }
                                  }
                               ]
                            }
                         ]
                      },
                      "id": 30,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(rate(cortex_ingester_tsdb_wal_corruptions_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "WAL",
                            "legendLink": null
                         },
                         {
                            "expr": "sum(rate(cortex_ingester_tsdb_mmap_chunk_corruptions_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "mmap-ed chunks",
                            "legendLink": null
                         }
                      ],
                      "title": "Corruptions / sec",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Ingester - TSDB write ahead log (WAL)",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "description": "### Distributor exemplars incoming rate\nThe rate of exemplars that have come in to the distributor, including rejected or deduped exemplars.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ex/s"
                         },
                         "overrides": [ ]
                      },
                      "id": 31,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(cluster_namespace_job:cortex_distributor_exemplars_in:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})",
                            "format": "time_series",
                            "legendFormat": "incoming exemplars",
                            "legendLink": null
                         }
                      ],
                      "title": "Distributor exemplars incoming rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Distributor exemplars received rate\nThe rate of received exemplars, excluding rejected and deduped exemplars.\nThis number can be sensibly lower than incoming rate because we dedupe the HA sent exemplars, and then reject based on time, see `cortex_discarded_exemplars_total` for specific reasons rates.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ex/s"
                         },
                         "overrides": [ ]
                      },
                      "id": 32,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(cluster_namespace_job:cortex_distributor_received_exemplars:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})",
                            "format": "time_series",
                            "legendFormat": "received exemplars",
                            "legendLink": null
                         }
                      ],
                      "title": "Distributor exemplars received rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Ingester ingested exemplars rate\nThe rate of exemplars ingested in the ingesters.\nEvery exemplar is sent to the replication factor number of ingesters, so the sum of rates from all ingesters is divided by the replication factor.\nThis ingested exemplars rate should match the distributor's received exemplars rate.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ex/s"
                         },
                         "overrides": [ ]
                      },
                      "id": 33,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(\n  cluster_namespace_job:cortex_ingester_ingested_exemplars:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n)\n",
                            "format": "time_series",
                            "legendFormat": "ingested exemplars",
                            "legendLink": null
                         }
                      ],
                      "title": "Ingester ingested exemplars rate",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "description": "### Ingester appended exemplars rate\nThe rate of exemplars appended in the ingesters.\nThis can be lower than ingested exemplars rate since TSDB does not append the same exemplar twice, and those can be frequent.\n\n",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "ex/s"
                         },
                         "overrides": [ ]
                      },
                      "id": 34,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 3,
                      "targets": [
                         {
                            "expr": "sum(\n  cluster_namespace_job:cortex_ingester_tsdb_exemplar_exemplars_appended:rate5m{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}\n  / on(cluster, namespace) group_left\n  max by (cluster, namespace) (cortex_distributor_replication_factor{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"})\n)\n",
                            "format": "time_series",
                            "legendFormat": "appended exemplars",
                            "legendLink": null
                         }
                      ],
                      "title": "Ingester appended exemplars rate",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Exemplars",
                "titleSize": "h6"
             },
             {
                "collapse": false,
                "height": "250px",
                "panels": [
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [ ]
                      },
                      "id": 35,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by (reason) (rate(cortex_distributor_instance_rejected_requests_total{cluster=~\"$cluster\", job=~\"($namespace)/((distributor.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{reason}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Rejected distributor requests",
                      "type": "timeseries"
                   },
                   {
                      "datasource": "$datasource",
                      "fieldConfig": {
                         "defaults": {
                            "custom": {
                               "drawStyle": "line",
                               "fillOpacity": 1,
                               "lineWidth": 1,
                               "pointSize": 5,
                               "showPoints": "never",
                               "spanNulls": false,
                               "stacking": {
                                  "group": "A",
                                  "mode": "none"
                               }
                            },
                            "min": 0,
                            "thresholds": {
                               "mode": "absolute",
                               "steps": [ ]
                            },
                            "unit": "reqps"
                         },
                         "overrides": [ ]
                      },
                      "id": 36,
                      "links": [ ],
                      "options": {
                         "legend": {
                            "showLegend": true
                         },
                         "tooltip": {
                            "mode": "single",
                            "sort": "none"
                         }
                      },
                      "span": 6,
                      "targets": [
                         {
                            "expr": "sum by (reason) (rate(cortex_ingester_instance_rejected_requests_total{cluster=~\"$cluster\", job=~\"($namespace)/((ingester.*|cortex|mimir|mimir-write.*))\"}[$__rate_interval]))",
                            "format": "time_series",
                            "legendFormat": "{{reason}}",
                            "legendLink": null
                         }
                      ],
                      "title": "Rejected ingester requests",
                      "type": "timeseries"
                   }
                ],
                "repeat": null,
                "repeatIteration": null,
                "repeatRowId": null,
                "showTitle": true,
                "title": "Instance Limits",
                "titleSize": "h6"
             }
          ],
          "schemaVersion": 14,
          "style": "dark",
          "tags": [
             "mimir"
          ],
          "templating": {
             "list": [
                {
                   "current": {
                      "text": "default",
                      "value": "default"
                   },
                   "hide": 0,
                   "label": "Data source",
                   "name": "datasource",
                   "options": [ ],
                   "query": "prometheus",
                   "refresh": 1,
                   "regex": "",
                   "type": "datasource"
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "cluster",
                   "multi": true,
                   "name": "cluster",
                   "options": [ ],
                   "query": "label_values(cortex_build_info, cluster)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                },
                {
                   "allValue": ".+",
                   "current": {
                      "selected": true,
                      "text": "All",
                      "value": "$__all"
                   },
                   "datasource": "$datasource",
                   "hide": 0,
                   "includeAll": true,
                   "label": "namespace",
                   "multi": true,
                   "name": "namespace",
                   "options": [ ],
                   "query": "label_values(cortex_build_info{cluster=~\"$cluster\"}, namespace)",
                   "refresh": 1,
                   "regex": "",
                   "sort": 1,
                   "tagValuesQuery": "",
                   "tags": [ ],
                   "tagsQuery": "",
                   "type": "query",
                   "useTags": false
                }
             ]
          },
          "time": {
             "from": "now-1h",
             "to": "now"
          },
          "timepicker": {
             "refresh_intervals": [
                "5s",
                "10s",
                "30s",
                "1m",
                "5m",
                "15m",
                "30m",
                "1h",
                "2h",
                "1d"
             ],
             "time_options": [
                "5m",
                "15m",
                "1h",
                "6h",
                "12h",
                "24h",
                "2d",
                "7d",
                "30d"
             ]
          },
          "timezone": "utc",
          "title": "Mimir / Writes",
          "uid": "8280707b8f16e7b87b840fc1cc92d4c5",
          "version": 0
       }
---
# Source: lgtm-distributed/charts/mimir/templates/mimir-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-mimir-config
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  namespace: "default"
data:
  mimir.yaml: |
    
    activity_tracker:
      filepath: /active-query-tracker/activity.log
    alertmanager:
      data_dir: /data
      enable_api: true
      external_url: /alertmanager
      fallback_config_file: /configs/alertmanager_fallback_config.yaml
    alertmanager_storage:
      backend: s3
      s3:
        access_key_id: grafana-mimir
        bucket_name: mimir-ruler
        endpoint: release-name-minio.default.svc:9000
        insecure: true
        secret_access_key: supersecret
    blocks_storage:
      backend: s3
      bucket_store:
        sync_dir: /data/tsdb-sync
      s3:
        access_key_id: grafana-mimir
        bucket_name: mimir-tsdb
        endpoint: release-name-minio.default.svc:9000
        insecure: true
        secret_access_key: supersecret
      tsdb:
        dir: /data/tsdb
        head_compaction_interval: 15m
        wal_replay_concurrency: 3
    compactor:
      compaction_interval: 30m
      data_dir: /data
      deletion_delay: 2h
      first_level_compaction_wait_period: 25m
      max_closing_blocks_concurrency: 2
      max_opening_blocks_concurrency: 4
      sharding_ring:
        heartbeat_period: 1m
        heartbeat_timeout: 4m
        wait_stability_min_duration: 1m
      symbols_flushers_concurrency: 4
    distributor:
      ring:
        heartbeat_period: 1m
        heartbeat_timeout: 4m
    frontend:
      parallelize_shardable_queries: true
      scheduler_address: release-name-mimir-query-scheduler-headless.default.svc:9095
    frontend_worker:
      grpc_client_config:
        max_send_msg_size: 419430400
      scheduler_address: release-name-mimir-query-scheduler-headless.default.svc:9095
    ingester:
      ring:
        final_sleep: 0s
        heartbeat_period: 2m
        heartbeat_timeout: 10m
        num_tokens: 512
        tokens_file_path: /data/tokens
        unregister_on_shutdown: false
    ingester_client:
      grpc_client_config:
        max_recv_msg_size: 104857600
        max_send_msg_size: 104857600
    limits:
      max_cache_freshness: 10m
      max_query_parallelism: 240
      max_total_query_length: 12000h
    memberlist:
      abort_if_cluster_join_fails: false
      compression_enabled: false
      join_members:
      - dns+release-name-mimir-gossip-ring.default.svc.cluster.local.:7946
    querier:
      max_concurrent: 16
    query_scheduler:
      max_outstanding_requests_per_tenant: 800
    ruler:
      alertmanager_url: dnssrvnoa+http://_http-metrics._tcp.release-name-mimir-alertmanager-headless.default.svc.cluster.local./alertmanager
      enable_api: true
      rule_path: /data
    ruler_storage:
      backend: s3
      s3:
        access_key_id: grafana-mimir
        bucket_name: mimir-ruler
        endpoint: release-name-minio.default.svc:9000
        insecure: true
        secret_access_key: supersecret
    runtime_config:
      file: /var/mimir/runtime.yaml
    store_gateway:
      sharding_ring:
        heartbeat_period: 1m
        heartbeat_timeout: 4m
        tokens_file_path: /data/tokens
        unregister_on_shutdown: false
        wait_stability_min_duration: 1m
    usage_stats:
      installation_mode: helm
---
# Source: lgtm-distributed/charts/mimir/templates/nginx/nginx-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-mimir-nginx
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: nginx
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  namespace: "default"
data:
  nginx.conf: |
    worker_processes  5;  ## Default: 1
    error_log  /dev/stderr error;
    pid        /tmp/nginx.pid;
    worker_rlimit_nofile 8192;
    
    events {
      worker_connections  4096;  ## Default: 1024
    }
    
    http {
      client_body_temp_path /tmp/client_temp;
      proxy_temp_path       /tmp/proxy_temp_path;
      fastcgi_temp_path     /tmp/fastcgi_temp;
      uwsgi_temp_path       /tmp/uwsgi_temp;
      scgi_temp_path        /tmp/scgi_temp;
    
      default_type application/octet-stream;
      log_format   main '$remote_addr - $remote_user [$time_local]  $status '
            '"$request" $body_bytes_sent "$http_referer" '
            '"$http_user_agent" "$http_x_forwarded_for"';
      access_log   /dev/stderr  main;
    
      sendfile           on;
      tcp_nopush         on;
      proxy_http_version 1.1;
      resolver rke2-coredns-rke2-coredns.kube-system.svc.cluster.local.;
    
      # Ensure that X-Scope-OrgID is always present, default to the no_auth_tenant for backwards compatibility when multi-tenancy was turned off.
      map $http_x_scope_orgid $ensured_x_scope_orgid {
        default $http_x_scope_orgid;
        "" "anonymous";
      }
    
      map $http_x_scope_orgid $has_multiple_orgid_headers {
        default 0;
        "~^.+,.+$" 1;
      }
    
      proxy_read_timeout 300;
      server {
        listen 8080;
        listen [::]:8080;
    
        if ($has_multiple_orgid_headers = 1) {
            return 400 'Sending multiple X-Scope-OrgID headers is not allowed. Use a single header with | as separator instead.';
        }
    
        location = / {
          return 200 'OK';
          auth_basic off;
        }
    
        proxy_set_header X-Scope-OrgID $ensured_x_scope_orgid;
    
        # Distributor endpoints
        location /distributor {
          set $distributor release-name-mimir-distributor-headless.default.svc.cluster.local.;
          proxy_pass      http://$distributor:8080$request_uri;
        }
        location = /api/v1/push {
          set $distributor release-name-mimir-distributor-headless.default.svc.cluster.local.;
          proxy_pass      http://$distributor:8080$request_uri;
        }
        location /otlp/v1/metrics {
          set $distributor release-name-mimir-distributor-headless.default.svc.cluster.local.;
          proxy_pass      http://$distributor:8080$request_uri;
        }
    
        # Alertmanager endpoints
        location /alertmanager {
          set $alertmanager release-name-mimir-alertmanager-headless.default.svc.cluster.local.;
          proxy_pass      http://$alertmanager:8080$request_uri;
        }
        location = /multitenant_alertmanager/status {
          set $alertmanager release-name-mimir-alertmanager-headless.default.svc.cluster.local.;
          proxy_pass      http://$alertmanager:8080$request_uri;
        }
        location = /api/v1/alerts {
          set $alertmanager release-name-mimir-alertmanager-headless.default.svc.cluster.local.;
          proxy_pass      http://$alertmanager:8080$request_uri;
        }
    
        # Ruler endpoints
        location /prometheus/config/v1/rules {
          set $ruler release-name-mimir-ruler.default.svc.cluster.local.;
          proxy_pass      http://$ruler:8080$request_uri;
        }
        location /prometheus/api/v1/rules {
          set $ruler release-name-mimir-ruler.default.svc.cluster.local.;
          proxy_pass      http://$ruler:8080$request_uri;
        }
    
        location /prometheus/api/v1/alerts {
          set $ruler release-name-mimir-ruler.default.svc.cluster.local.;
          proxy_pass      http://$ruler:8080$request_uri;
        }
        location = /ruler/ring {
          set $ruler release-name-mimir-ruler.default.svc.cluster.local.;
          proxy_pass      http://$ruler:8080$request_uri;
        }
    
        # Rest of /prometheus goes to the query frontend
        location /prometheus {
          set $query_frontend release-name-mimir-query-frontend.default.svc.cluster.local.;
          proxy_pass      http://$query_frontend:8080$request_uri;
        }
    
        # Buildinfo endpoint can go to any component
        location = /api/v1/status/buildinfo {
          set $query_frontend release-name-mimir-query-frontend.default.svc.cluster.local.;
          proxy_pass      http://$query_frontend:8080$request_uri;
        }
    
        # Compactor endpoint for uploading blocks
        location /api/v1/upload/block/ {
          set $compactor release-name-mimir-compactor.default.svc.cluster.local.;
          proxy_pass      http://$compactor:8080$request_uri;
        }
      }
    }
---
# Source: lgtm-distributed/charts/mimir/templates/runtime-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-mimir-runtime
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  namespace: "default"
data:
  runtime.yaml: |
    
    ingester_limits:
      max_inflight_push_requests: 60000
      max_ingestion_rate: 60000
      max_series: 4500000
      max_tenants: 1000
    overrides:
      tenant-1:
        ingestion_tenant_shard_size: 9
        max_fetched_series_per_query: 100000
        max_global_series_per_user: 4500000
      tenant-2:
        ingestion_tenant_shard_size: 9
        max_fetched_series_per_query: 100000
        max_global_series_per_user: 4500000
      tenant-3:
        ingestion_tenant_shard_size: 9
        max_fetched_series_per_query: 100000
        max_global_series_per_user: 4500000
---
# Source: lgtm-distributed/charts/tempo/templates/configmap-runtime.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-tempo-runtime
  labels:
    helm.sh/chart: tempo-1.13.2
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.5.0"
    app.kubernetes.io/managed-by: Helm
  namespace: "default"
data:
  overrides.yaml: |
    
    overrides: {}
---
# Source: lgtm-distributed/charts/tempo/templates/configmap-tempo.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-tempo-config
  labels:
    helm.sh/chart: tempo-1.13.2
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.5.0"
    app.kubernetes.io/managed-by: Helm
  namespace: "default"
data:
  tempo-query.yaml: |
    backend: 127.0.0.1:3100
    
  tempo.yaml: |
    
    cache:
      caches:
      - memcached:
          consistent_hash: true
          host: 'release-name-tempo-memcached'
          service: memcached-client
          timeout: 500ms
        roles:
        - parquet-footer
        - bloom
        - frontend-search
    compactor:
      compaction:
        block_retention: 48h
        compacted_block_retention: 1h
        compaction_cycle: 30s
        compaction_window: 1h
        max_block_bytes: 107374182400
        max_compaction_objects: 6000000
        max_time_per_tenant: 5m
        retention_concurrency: 10
        v2_in_buffer_bytes: 5242880
        v2_out_buffer_bytes: 20971520
        v2_prefetch_traces_count: 1000
      ring:
        kvstore:
          store: memberlist
    distributor:
      receivers: null
      ring:
        kvstore:
          store: memberlist
    ingester:
      lifecycler:
        ring:
          kvstore:
            store: memberlist
          replication_factor: 3
        tokens_file_path: /var/tempo/tokens.json
    memberlist:
      abort_if_cluster_join_fails: false
      bind_addr: []
      bind_port: 7946
      gossip_interval: 1s
      gossip_nodes: 2
      gossip_to_dead_nodes_time: 30s
      join_members:
      - dns+release-name-tempo-gossip-ring:7946
      leave_timeout: 5s
      left_ingesters_timeout: 5m
      max_join_backoff: 1m
      max_join_retries: 10
      min_join_backoff: 1s
      node_name: ""
      packet_dial_timeout: 5s
      packet_write_timeout: 5s
      pull_push_interval: 30s
      randomize_node_name: true
      rejoin_interval: 0s
      retransmit_factor: 2
      stream_timeout: 10s
    multitenancy_enabled: false
    overrides:
      per_tenant_override_config: /runtime-config/overrides.yaml
    querier:
      frontend_worker:
        frontend_address: release-name-tempo-query-frontend-discovery:9095
      max_concurrent_queries: 20
      search:
        external_backend: null
        external_endpoints: []
        external_hedge_requests_at: 8s
        external_hedge_requests_up_to: 2
        prefer_self: 10
        query_timeout: 30s
      trace_by_id:
        query_timeout: 10s
    query_frontend:
      max_outstanding_per_tenant: 2000
      max_retries: 2
      search:
        concurrent_jobs: 1000
        target_bytes_per_job: 104857600
      trace_by_id:
        query_shards: 50
    server:
      grpc_server_max_recv_msg_size: 4194304
      grpc_server_max_send_msg_size: 4194304
      http_listen_port: 3100
      http_server_read_timeout: 30s
      http_server_write_timeout: 30s
      log_format: logfmt
      log_level: info
    storage:
      trace:
        backend: local
        blocklist_poll: 5m
        local:
          path: /var/tempo/traces
        pool:
          max_workers: 400
          queue_depth: 20000
        wal:
          path: /var/tempo/wal
    usage_report:
      reporting_enabled: true
---
# Source: lgtm-distributed/charts/mimir/charts/minio/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: release-name-minio
  labels:
    app: minio
    chart: minio-5.0.14
    release: release-name
    heritage: Helm
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "500Gi"
  storageClassName: "nfs-client"
---
# Source: lgtm-distributed/charts/grafana/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    helm.sh/chart: grafana-7.3.12
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "10.4.3"
    app.kubernetes.io/managed-by: Helm
  name: release-name-grafana-clusterrole
rules: []
---
# Source: lgtm-distributed/charts/grafana/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-grafana-clusterrolebinding
  labels:
    helm.sh/chart: grafana-7.3.12
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "10.4.3"
    app.kubernetes.io/managed-by: Helm
subjects:
  - kind: ServiceAccount
    name: release-name-grafana
    namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-grafana-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
# Source: lgtm-distributed/charts/grafana/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-grafana
  namespace: default
  labels:
    helm.sh/chart: grafana-7.3.12
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "10.4.3"
    app.kubernetes.io/managed-by: Helm
rules: []
---
# Source: lgtm-distributed/charts/mimir/charts/rollout_operator/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-rollout-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - get
  - watch
  - delete
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets/status
  verbs:
  - update
---
# Source: lgtm-distributed/charts/grafana/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-grafana
  namespace: default
  labels:
    helm.sh/chart: grafana-7.3.12
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "10.4.3"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-grafana
subjects:
- kind: ServiceAccount
  name: release-name-grafana
  namespace: default
---
# Source: lgtm-distributed/charts/mimir/charts/rollout_operator/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-rollout-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-rollout-operator
subjects:
- kind: ServiceAccount
  name: release-name-rollout-operator
---
# Source: lgtm-distributed/charts/grafana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-grafana
  namespace: default
  labels:
    helm.sh/chart: grafana-7.3.12
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "10.4.3"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: service
      port: 80
      protocol: TCP
      targetPort: 3000
  selector:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
---
# Source: lgtm-distributed/charts/loki/templates/distributor/service-distributor.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-loki-distributor
  namespace: default
  labels:
    helm.sh/chart: loki-0.79.0
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.9.6"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: distributor
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 3100
      targetPort: http
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: distributor
---
# Source: lgtm-distributed/charts/loki/templates/gateway/service-gateway.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-loki-gateway
  labels:
    helm.sh/chart: loki-0.79.0
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.9.6"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: gateway
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: gateway
---
# Source: lgtm-distributed/charts/loki/templates/ingester/service-ingester-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-loki-ingester-headless
  namespace: default
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: ingester
    prometheus.io/service-monitor: "false"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: http
      port: 3100
      targetPort: http
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: ingester
---
# Source: lgtm-distributed/charts/loki/templates/ingester/service-ingester.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-loki-ingester
  namespace: default
  labels:
    helm.sh/chart: loki-0.79.0
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.9.6"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ingester
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 3100
      targetPort: http
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: ingester
---
# Source: lgtm-distributed/charts/loki/templates/querier/service-querier-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-loki-querier-headless
  namespace: default
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: querier
    prometheus.io/service-monitor: "false"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: http
      port: 3100
      targetPort: http
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: querier
---
# Source: lgtm-distributed/charts/loki/templates/querier/service-querier.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-loki-querier
  namespace: default
  labels:
    helm.sh/chart: loki-0.79.0
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.9.6"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: querier
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 3100
      targetPort: http
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: querier
---
# Source: lgtm-distributed/charts/loki/templates/query-frontend/service-query-frontend-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-loki-query-frontend-headless
  namespace: default
  labels:
    helm.sh/chart: loki-0.79.0
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.9.6"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: query-frontend
    prometheus.io/service-monitor: "false"
spec:
  clusterIP: None
  type: ClusterIP
  publishNotReadyAddresses: true
  ports:
    - name: http
      port: 3100
      targetPort: http
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
    - name: grpclb
      port: 9096
      targetPort: grpc
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: query-frontend
---
# Source: lgtm-distributed/charts/loki/templates/query-frontend/service-query-frontend.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-loki-query-frontend
  namespace: default
  labels:
    helm.sh/chart: loki-0.79.0
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.9.6"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: query-frontend
spec:
  type: ClusterIP
  publishNotReadyAddresses: true
  ports:
    - name: http
      port: 3100
      targetPort: http
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
    - name: grpclb
      port: 9096
      targetPort: grpc
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: query-frontend
---
# Source: lgtm-distributed/charts/loki/templates/service-memberlist.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-loki-memberlist
  namespace: default
  labels:
    helm.sh/chart: loki-0.79.0
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.9.6"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: tcp
      port: 7946
      targetPort: http-memberlist
      protocol: TCP
  selector:
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: memberlist
---
# Source: lgtm-distributed/charts/mimir/charts/minio/templates/console-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-minio-console
  labels:
    app: minio
    chart: minio-5.0.14
    release: release-name
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 9001
      protocol: TCP
      targetPort: 9001
  selector:
    app: minio
    release: release-name
---
# Source: lgtm-distributed/charts/mimir/charts/minio/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-minio
  labels:
    app: minio
    chart: minio-5.0.14
    release: release-name
    heritage: Helm
    monitoring: "true"
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 9000
      protocol: TCP
      targetPort: 9000
  selector:
    app: minio
    release: release-name
---
# Source: lgtm-distributed/charts/mimir/templates/alertmanager/alertmanager-svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mimir-alertmanager-headless
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: alertmanager
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    prometheus.io/service-monitor: "false"
  annotations:
    {}
  namespace: "default"
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - port: 8080
      protocol: TCP
      name: http-metrics
      targetPort: http-metrics
    - port: 9095
      protocol: TCP
      name: grpc
      targetPort: grpc
    - port: 9094
      protocol: TCP
      name: cluster
  selector:
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: alertmanager
---
# Source: lgtm-distributed/charts/mimir/templates/alertmanager/alertmanager-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mimir-alertmanager
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: alertmanager
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
  namespace: "default"
spec:
  type: ClusterIP
  ports:
    - port: 8080
      protocol: TCP
      name: http-metrics
      targetPort: http-metrics
    - port: 9095
      protocol: TCP
      name: grpc
      targetPort: grpc
  selector:
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: alertmanager
---
# Source: lgtm-distributed/charts/mimir/templates/compactor/compactor-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mimir-compactor
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: compactor
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
  namespace: "default"
spec:
  type: ClusterIP
  ports:
    - port: 8080
      protocol: TCP
      name: http-metrics
      targetPort: http-metrics
    - port: 9095
      protocol: TCP
      name: grpc
      targetPort: grpc
  selector:
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: compactor
---
# Source: lgtm-distributed/charts/mimir/templates/distributor/distributor-svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mimir-distributor-headless
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: distributor
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    prometheus.io/service-monitor: "false"
  annotations:
    {}
  namespace: "default"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 8080
      protocol: TCP
      name: http-metrics
      targetPort: http-metrics
    - port: 9095
      protocol: TCP
      name: grpc
      targetPort: grpc
  selector:
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: distributor
---
# Source: lgtm-distributed/charts/mimir/templates/distributor/distributor-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mimir-distributor
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: distributor
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
  namespace: "default"
spec:
  type: ClusterIP
  ports:
    - port: 8080
      protocol: TCP
      name: http-metrics
      targetPort: http-metrics
    - port: 9095
      protocol: TCP
      name: grpc
      targetPort: grpc
  selector:
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: distributor
---
# Source: lgtm-distributed/charts/mimir/templates/gossip-ring/gossip-ring-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mimir-gossip-ring
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: gossip-ring
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  namespace: "default"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: gossip-ring
      port: 7946
      appProtocol: tcp
      protocol: TCP
      targetPort: 7946
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: memberlist
---
# Source: lgtm-distributed/charts/mimir/templates/ingester/ingester-svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mimir-ingester-headless
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: ingester
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    prometheus.io/service-monitor: "false"
  annotations:
    {}
  namespace: "default"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 8080
      protocol: TCP
      name: http-metrics
      targetPort: http-metrics
    - port: 9095
      protocol: TCP
      name: grpc
      targetPort: grpc
  selector:
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: ingester
---
# Source: lgtm-distributed/charts/mimir/templates/ingester/ingester-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mimir-ingester
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: ingester
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
  namespace: "default"
spec:
  type: ClusterIP
  ports:
    - port: 8080
      protocol: TCP
      name: http-metrics
      targetPort: http-metrics
    - port: 9095
      protocol: TCP
      name: grpc
      targetPort: grpc
  selector:
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: ingester
---
# Source: lgtm-distributed/charts/mimir/templates/nginx/nginx-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mimir-nginx
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: nginx
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
  namespace: "default"
spec:
  type: ClusterIP
  ports:
    - name: http-metric
      port: 80
      targetPort: http-metric
      protocol: TCP
  selector:
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: nginx
---
# Source: lgtm-distributed/charts/mimir/templates/overrides-exporter/overrides-exporter-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mimir-overrides-exporter
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: overrides-exporter
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
  namespace: "default"
spec:
  type: ClusterIP
  ports:
    - port: 8080
      protocol: TCP
      name: http-metrics
      targetPort: http-metrics
    - port: 9095
      protocol: TCP
      name: grpc
      targetPort: grpc
  selector:
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: overrides-exporter
---
# Source: lgtm-distributed/charts/mimir/templates/querier/querier-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mimir-querier
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: querier
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
  namespace: "default"
spec:
  type: ClusterIP
  ports:
    - port: 8080
      protocol: TCP
      name: http-metrics
      targetPort: http-metrics
    - port: 9095
      protocol: TCP
      name: grpc
      targetPort: grpc
  selector:
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: querier
---
# Source: lgtm-distributed/charts/mimir/templates/query-frontend/query-frontend-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mimir-query-frontend
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
  namespace: "default"
spec:
  type: ClusterIP
  ports:
    - port: 8080
      protocol: TCP
      name: http-metrics
      targetPort: http-metrics
    - port: 9095
      protocol: TCP
      name: grpc
      targetPort: grpc
  selector:
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: query-frontend
---
# Source: lgtm-distributed/charts/mimir/templates/query-scheduler/query-scheduler-svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mimir-query-scheduler-headless
  namespace: "default"
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: query-scheduler
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    prometheus.io/service-monitor: "false"
  annotations:
    {}
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - port: 8080
      protocol: TCP
      name: http-metrics
      targetPort: http-metrics
    - port: 9095
      protocol: TCP
      name: grpc
      targetPort: grpc
  selector:
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: query-scheduler
---
# Source: lgtm-distributed/charts/mimir/templates/query-scheduler/query-scheduler-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mimir-query-scheduler
  namespace: "default"
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: query-scheduler
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
spec:
  type: ClusterIP
  ports:
    - port: 8080
      protocol: TCP
      name: http-metrics
      targetPort: http-metrics
    - port: 9095
      protocol: TCP
      name: grpc
      targetPort: grpc
  selector:
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: query-scheduler
---
# Source: lgtm-distributed/charts/mimir/templates/ruler/ruler-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mimir-ruler
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: ruler
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
  namespace: "default"
spec:
  type: ClusterIP
  ports:
    - port: 8080
      protocol: TCP
      name: http-metrics
      targetPort: http-metrics
  selector:
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: ruler
---
# Source: lgtm-distributed/charts/mimir/templates/store-gateway/store-gateway-svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mimir-store-gateway-headless
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: store-gateway
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
    prometheus.io/service-monitor: "false"
  annotations:
    {}
  namespace: "default"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 8080
      protocol: TCP
      name: http-metrics
      targetPort: http-metrics
    - port: 9095
      protocol: TCP
      name: grpc
      targetPort: grpc
  selector:
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: store-gateway
---
# Source: lgtm-distributed/charts/mimir/templates/store-gateway/store-gateway-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mimir-store-gateway
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: store-gateway
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
  namespace: "default"
spec:
  type: ClusterIP
  ports:
    - port: 8080
      protocol: TCP
      name: http-metrics
      targetPort: http-metrics
    - port: 9095
      protocol: TCP
      name: grpc
      targetPort: grpc
  selector:
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: store-gateway
---
# Source: lgtm-distributed/charts/tempo/templates/compactor/service-compactor.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-tempo-compactor
  labels:
    helm.sh/chart: tempo-1.13.2
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: compactor
    app.kubernetes.io/version: "2.5.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http-metrics
      port: 3100
      targetPort: 3100
      protocol: TCP
  selector:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: compactor
---
# Source: lgtm-distributed/charts/tempo/templates/distributor/service-distributor-discovery.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-tempo-distributor-discovery
  namespace: default
  labels:
    helm.sh/chart: tempo-1.13.2
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: distributor
    app.kubernetes.io/version: "2.5.0"
    app.kubernetes.io/managed-by: Helm
    prometheus.io/service-monitor: "false"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: http-metrics
      port: 3100
      targetPort: http-metrics
  selector:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: distributor
---
# Source: lgtm-distributed/charts/tempo/templates/distributor/service-distributor.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-tempo-distributor
  namespace: default
  labels:
    helm.sh/chart: tempo-1.13.2
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: distributor
    app.kubernetes.io/version: "2.5.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http-metrics
      port: 3100
      targetPort: http-metrics
    - name: grpc
      port: 9095
      protocol: TCP
      targetPort: 9095
  selector:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: distributor
---
# Source: lgtm-distributed/charts/tempo/templates/gossip-ring/service-gossip-ring.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-tempo-gossip-ring
  namespace: default
  labels:
    helm.sh/chart: tempo-1.13.2
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: gossip-ring
    app.kubernetes.io/version: "2.5.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: gossip-ring
      port: 7946
      protocol: TCP
      targetPort: http-memberlist
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/part-of: memberlist
---
# Source: lgtm-distributed/charts/tempo/templates/ingester/service-ingester-discovery.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-tempo-ingester-discovery
  namespace: default
  labels:
    helm.sh/chart: tempo-1.13.2
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: ingester
    app.kubernetes.io/version: "2.5.0"
    app.kubernetes.io/managed-by: Helm
    prometheus.io/service-monitor: "false"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: http-metrics
      port: 3100
      protocol: TCP
      targetPort: 3100
    - name: grpc
      port: 9095
      protocol: TCP
      targetPort: 9095
  selector:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: ingester
---
# Source: lgtm-distributed/charts/tempo/templates/ingester/service-ingester.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-tempo-ingester
  namespace: default
  labels:
    helm.sh/chart: tempo-1.13.2
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: ingester
    app.kubernetes.io/version: "2.5.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - name: http-metrics
      port: 3100
      protocol: TCP
      targetPort: 3100
    - name: grpc
      port: 9095
      protocol: TCP
      targetPort: 9095
  selector:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: ingester
---
# Source: lgtm-distributed/charts/tempo/templates/memcached/service-memcached.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-tempo-memcached
  namespace: default
  labels:
    helm.sh/chart: tempo-1.13.2
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: memcached
    app.kubernetes.io/version: "2.5.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
  - name: memcached-client
    port: 11211
    targetPort: 11211
  - name: http-metrics
    port: 9150
    targetPort: http-metrics
  selector:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: memcached
---
# Source: lgtm-distributed/charts/tempo/templates/querier/service-querier.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-tempo-querier
  namespace: default
  labels:
    helm.sh/chart: tempo-1.13.2
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: querier
    app.kubernetes.io/version: "2.5.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - name: http-metrics
      port: 3100
      protocol: TCP
      targetPort: 3100
    - name: grpc
      port: 9095
      protocol: TCP
      targetPort: 9095
  selector:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: querier
---
# Source: lgtm-distributed/charts/tempo/templates/query-frontend/service-query-frontend-discovery.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-tempo-query-frontend-discovery
  namespace: default
  labels:
    helm.sh/chart: tempo-1.13.2
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/version: "2.5.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: http
      port: 3100
      targetPort: 3100
    - name: grpc
      port: 9095
      protocol: TCP
      targetPort: 9095
    - name: grpclb
      port: 9096
      protocol: TCP
      targetPort: grpc
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: query-frontend
---
# Source: lgtm-distributed/charts/tempo/templates/query-frontend/service-query-frontend.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-tempo-query-frontend
  namespace: default
  labels:
    helm.sh/chart: tempo-1.13.2
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/version: "2.5.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http-metrics
      port: 3100
      targetPort: 3100
    - name: grpc
      port: 9095
      protocol: TCP
      targetPort: 9095
  selector:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: query-frontend
---
# Source: lgtm-distributed/charts/grafana/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-grafana
  namespace: default
  labels:
    helm.sh/chart: grafana-7.3.12
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "10.4.3"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: release-name
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: release-name
      annotations:
        checksum/config: 8d5dd33ab965ca03ae3a1eb2a0a6005c9d544165ef1e1d48f13174098061c9a8
        checksum/sc-dashboard-provider-config: 593c0a8778b83f11fe80ccb21dfb20bc46705e2be3178df1dc4c89d164c8cd9c
        checksum/secret: 29c5d717d56093d68855ea962db59b8086f72739e98e2039d3fc7838352b6bbc
        kubectl.kubernetes.io/default-container: grafana
    spec:
      
      serviceAccountName: release-name-grafana
      automountServiceAccountToken: true
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsNonRoot: true
        runAsUser: 472
      enableServiceLinks: true
      containers:
        - name: grafana
          image: "docker.io/grafana/grafana:10.4.3"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: config
              mountPath: "/etc/grafana/grafana.ini"
              subPath: grafana.ini
            - name: storage
              mountPath: "/var/lib/grafana"
            - name: config
              mountPath: "/etc/grafana/provisioning/datasources/datasources.yaml"
              subPath: "datasources.yaml"
          ports:
            - name: grafana
              containerPort: 3000
              protocol: TCP
            - name: gossip-tcp
              containerPort: 9094
              protocol: TCP
            - name: gossip-udp
              containerPort: 9094
              protocol: UDP
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: release-name-grafana
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-grafana
                  key: admin-password
            - name: GF_PATHS_DATA
              value: /var/lib/grafana/
            - name: GF_PATHS_LOGS
              value: /var/log/grafana
            - name: GF_PATHS_PLUGINS
              value: /var/lib/grafana/plugins
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
      volumes:
        - name: config
          configMap:
            name: release-name-grafana
        - name: storage
          emptyDir: {}
---
# Source: lgtm-distributed/charts/loki/templates/distributor/deployment-distributor.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-loki-distributor
  namespace: default
  labels:
    helm.sh/chart: loki-0.79.0
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.9.6"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: distributor
    app.kubernetes.io/part-of: memberlist
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: loki
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: distributor
  template:
    metadata:
      annotations:
        checksum/config: c129e4be5ed1056210b50f5ee11d92813c4503e724e2be8268f6b67466a5f5b4
      labels:
        app.kubernetes.io/name: loki
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: distributor
        app.kubernetes.io/part-of: memberlist
    spec:
      serviceAccountName: release-name-loki
      
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      terminationGracePeriodSeconds: 30
      containers:
        - name: distributor
          image: docker.io/grafana/loki:2.9.6
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/loki/config/config.yaml
            - -target=distributor
          ports:
            - name: http
              containerPort: 3100
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: http-memberlist
              containerPort: 7946
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 300
          volumeMounts:
            - name: config
              mountPath: /etc/loki/config
            - name: runtime-config
              mountPath: /var/loki-runtime
          resources:
            {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: loki
                  app.kubernetes.io/instance: release-name
                  app.kubernetes.io/component: distributor
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: loki
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: distributor
                topologyKey: failure-domain.beta.kubernetes.io/zone
        
      volumes:
        - name: config
          configMap:
            name: release-name-loki
        - name: runtime-config
          configMap:
            name: release-name-loki-runtime
---
# Source: lgtm-distributed/charts/loki/templates/gateway/deployment-gateway.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-loki-gateway
  labels:
    helm.sh/chart: loki-0.79.0
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.9.6"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: gateway
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: loki
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: gateway
  template:
    metadata:
      annotations:
        checksum/config: 04c21bd722de1100600c3c7ff25d39e914276aa77e4063f1b5ba1176e9457194
      labels:
        app.kubernetes.io/name: loki
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: gateway
    spec:
      serviceAccountName: release-name-loki
      
      securityContext:
        fsGroup: 101
        runAsGroup: 101
        runAsNonRoot: true
        runAsUser: 101
      terminationGracePeriodSeconds: 30
      containers:
        - name: nginx
          image: docker.io/nginxinc/nginx-unprivileged:1.20.2-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 15
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: config
              mountPath: /etc/nginx
            - name: tmp
              mountPath: /tmp
            - name: docker-entrypoint-d-override
              mountPath: /docker-entrypoint.d
          resources:
            {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: loki
                  app.kubernetes.io/instance: release-name
                  app.kubernetes.io/component: gateway
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: loki
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: gateway
                topologyKey: failure-domain.beta.kubernetes.io/zone
        
      volumes:
        - name: config
          configMap:
            name: release-name-loki-gateway
        - name: tmp
          emptyDir: {}
        - name: docker-entrypoint-d-override
          emptyDir: {}
---
# Source: lgtm-distributed/charts/loki/templates/query-frontend/deployment-query-frontend.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-loki-query-frontend
  namespace: default
  labels:
    helm.sh/chart: loki-0.79.0
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.9.6"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: query-frontend
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: loki
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: query-frontend
  template:
    metadata:
      annotations:
        checksum/config: c129e4be5ed1056210b50f5ee11d92813c4503e724e2be8268f6b67466a5f5b4
      labels:
        app.kubernetes.io/name: loki
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: query-frontend
        app.kubernetes.io/part-of: memberlist
    spec:
      serviceAccountName: release-name-loki
      
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      terminationGracePeriodSeconds: 30
      containers:
        - name: query-frontend
          image: docker.io/grafana/loki:2.9.6
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/loki/config/config.yaml
            - -target=query-frontend
          ports:
            - name: http
              containerPort: 3100
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: http-memberlist
              containerPort: 7946
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 300
          volumeMounts:
            - name: config
              mountPath: /etc/loki/config
            - name: runtime-config
              mountPath: /var/loki-runtime
          resources:
            {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: loki
                  app.kubernetes.io/instance: release-name
                  app.kubernetes.io/component: query-frontend
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: loki
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: query-frontend
                topologyKey: failure-domain.beta.kubernetes.io/zone
        
      volumes:
        - name: config
          configMap:
            name: release-name-loki
        - name: runtime-config
          configMap:
            name: release-name-loki-runtime
---
# Source: lgtm-distributed/charts/mimir/charts/minio/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-minio
  labels:
    app: minio
    chart: minio-5.0.14
    release: release-name
    heritage: Helm
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
  replicas: 1
  selector:
    matchLabels:
      app: minio
      release: release-name
  template:
    metadata:
      name: release-name-minio
      labels:
        app: minio
        release: release-name
      annotations:
        checksum/secrets: c8339c63fe17e834336f905a9b41c8c19ae107390219fc9b9ad71d3783e47601
        checksum/config: 1cd78d08302cd4659fe486040b24a41a7b9528e97c02fe2446ae70478df68cfd
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      
      serviceAccountName: minio-sa
      containers:
        - name: minio
          image: "quay.io/minio/minio:RELEASE.2023-09-30T07-02-29Z"
          imagePullPolicy: IfNotPresent
          command:
            - "/bin/sh"
            - "-ce"
            - "/usr/bin/docker-entrypoint.sh minio server /export -S /etc/minio/certs/ --address :9000 --console-address :9001"
          volumeMounts:
            - name: minio-user
              mountPath: "/tmp/credentials"
              readOnly: true
            - name: export
              mountPath: /export            
          ports:
            - name: http
              containerPort: 9000
            - name: http-console
              containerPort: 9001
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: release-name-minio
                  key: rootUser
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: release-name-minio
                  key: rootPassword
            - name: MINIO_PROMETHEUS_AUTH_TYPE
              value: "public"
          resources:
            requests:
              cpu: 20m
              memory: 128Mi      
      volumes:
        - name: export
          persistentVolumeClaim:
            claimName: release-name-minio
        - name: minio-user
          secret:
            secretName: release-name-minio
---
# Source: lgtm-distributed/charts/mimir/charts/rollout_operator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-rollout-operator
  labels:
    helm.sh/chart: rollout-operator-0.14.0
    app.kubernetes.io/name: rollout-operator
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v0.13.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  minReadySeconds: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: rollout-operator
      app.kubernetes.io/instance: release-name
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rollout-operator
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: release-name-rollout-operator
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: rollout-operator
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          image: "grafana/rollout-operator:v0.13.0"
          imagePullPolicy: IfNotPresent
          args:
          - -kubernetes.namespace=default
          ports:
            - name: http-metrics
              containerPort: 8001
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 20m
              memory: 100Mi
---
# Source: lgtm-distributed/charts/mimir/templates/distributor/distributor-dep.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-mimir-distributor
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: distributor
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
  namespace: "default"
spec:
  # If replicas is not number (when using values file it's float64, when using --set arg it's int64) and is false (i.e. null) don't set it
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: distributor
  strategy:
    rollingUpdate:
      maxSurge: 15%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        helm.sh/chart: mimir-5.3.0
        app.kubernetes.io/name: mimir
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "2.12.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: distributor
        app.kubernetes.io/part-of: memberlist
      annotations:
        checksum/config: 4f76689ad39f6e2bae37062cf164250ec73030c399c1f20733f987ae06a87fbd
      namespace: "default"
    spec:
      serviceAccountName: release-name-mimir
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: distributor
          image: "grafana/mimir:2.12.0"
          imagePullPolicy: IfNotPresent
          args:
            - "-target=distributor"
            - "-config.expand-env=true"
            - "-config.file=/etc/mimir/mimir.yaml"
            # When write requests go through distributors via gRPC, we want gRPC clients to re-resolve the distributors DNS
            # endpoint before the distributor process is terminated, in order to avoid any failures during graceful shutdown.
            # To achieve it, we set a shutdown delay greater than the gRPC max connection age.
            - "-server.grpc.keepalive.max-connection-age=60s"
            - "-server.grpc.keepalive.max-connection-age-grace=5m"
            - "-server.grpc.keepalive.max-connection-idle=1m"
            - "-shutdown-delay=90s"
          volumeMounts:
            - name: config
              mountPath: /etc/mimir
            - name: runtime-config
              mountPath: /var/mimir
            - name: storage
              mountPath: "/data"
              subPath: 
            - name: active-queries
              mountPath: /active-query-tracker
          ports:
            - name: http-metrics
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: memberlist
              containerPort: 7946
              protocol: TCP
          livenessProbe:
            null
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          resources:
            requests:
              cpu: 20m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          env:
            - name: "GOMAXPROCS"
              value: "8"
            - name: "JAEGER_REPORTER_MAX_QUEUE_SIZE"
              value: "1000"
          envFrom:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: mimir
            app.kubernetes.io/instance: release-name
            app.kubernetes.io/component: distributor
      terminationGracePeriodSeconds: 100
      volumes:
        - name: config
          configMap:
            name: release-name-mimir-config
            items:
              - key: "mimir.yaml"
                path: "mimir.yaml"
        - name: runtime-config
          configMap:
            name: release-name-mimir-runtime
        - name: storage
          emptyDir: {}
        - name: active-queries
          emptyDir: {}
---
# Source: lgtm-distributed/charts/mimir/templates/nginx/nginx-dep.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-mimir-nginx
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: nginx
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
  namespace: "default"
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 15%
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: nginx
  template:
    metadata:
      annotations:
        checksum/config: 804c3aa546bf299c802814c8836c1e5209ada33a5da1d606188e7d64b833b95d
      labels:
        helm.sh/chart: mimir-5.3.0
        app.kubernetes.io/name: mimir
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "2.12.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: nginx
      namespace: "default"
    spec:
      serviceAccountName: release-name-mimir
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 30
      containers:
        - name: nginx
          image: docker.io/nginxinc/nginx-unprivileged:1.25-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - name: http-metric
              containerPort: 8080
              protocol: TCP
          env:
          envFrom:
          readinessProbe:
            httpGet:
              path: /
              port: http-metric
            initialDelaySeconds: 15
            timeoutSeconds: 1
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: tmp
              mountPath: /tmp
            - name: docker-entrypoint-d-override
              mountPath: /docker-entrypoint.d
          resources:
            {}
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: mimir
            app.kubernetes.io/instance: release-name
            app.kubernetes.io/component: nginx
      volumes:
        - name: config
          configMap:
            name: release-name-mimir-nginx
        - name: tmp
          emptyDir: {}
        - name: docker-entrypoint-d-override
          emptyDir: {}
---
# Source: lgtm-distributed/charts/mimir/templates/overrides-exporter/overrides-exporter-dep.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    {}
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: overrides-exporter
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  name: release-name-mimir-overrides-exporter
  namespace: "default"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: overrides-exporter
  strategy:
    rollingUpdate:
      maxSurge: 15%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        helm.sh/chart: mimir-5.3.0
        app.kubernetes.io/name: mimir
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "2.12.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: overrides-exporter
      annotations:
        checksum/config: 4f76689ad39f6e2bae37062cf164250ec73030c399c1f20733f987ae06a87fbd
      namespace: "default"
    spec:
      serviceAccountName: release-name-mimir
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: overrides-exporter
          image: "grafana/mimir:2.12.0"
          imagePullPolicy: IfNotPresent
          args:
            - "-target=overrides-exporter"
            - "-config.expand-env=true"
            - "-config.file=/etc/mimir/mimir.yaml"
          volumeMounts:
            - name: config
              mountPath: /etc/mimir
            - name: runtime-config
              mountPath: /var/mimir
            - name: storage
              mountPath: "/data"
              subPath: 
            - name: active-queries
              mountPath: /active-query-tracker
          ports:
            - name: http-metrics
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          resources:
            requests:
              cpu: 20m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          env:
          envFrom:
      
      terminationGracePeriodSeconds: 60
      volumes:
        - name: config
          configMap:
            name: release-name-mimir-config
            items:
              - key: "mimir.yaml"
                path: "mimir.yaml"
        - name: runtime-config
          configMap:
            name: release-name-mimir-runtime
        - name: storage
          emptyDir: {}
        - name: active-queries
          emptyDir: {}
---
# Source: lgtm-distributed/charts/mimir/templates/querier/querier-dep.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-mimir-querier
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: querier
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
  namespace: "default"
spec:
  # If replicas is not number (when using values file it's float64, when using --set arg it's int64) and is false (i.e. null) don't set it
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: querier
  strategy:
    rollingUpdate:
      maxSurge: 15%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        helm.sh/chart: mimir-5.3.0
        app.kubernetes.io/name: mimir
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "2.12.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: querier
        app.kubernetes.io/part-of: memberlist
      annotations:
        checksum/config: 4f76689ad39f6e2bae37062cf164250ec73030c399c1f20733f987ae06a87fbd
    spec:
      serviceAccountName: release-name-mimir
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: querier
          image: "grafana/mimir:2.12.0"
          imagePullPolicy: IfNotPresent
          args:
            - "-target=querier"
            - "-config.expand-env=true"
            - "-config.file=/etc/mimir/mimir.yaml"
          volumeMounts:
            - name: config
              mountPath: /etc/mimir
            - name: runtime-config
              mountPath: /var/mimir
            - name: storage
              mountPath: "/data"
              subPath: 
            - name: active-queries
              mountPath: /active-query-tracker
          ports:
            - name: http-metrics
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: memberlist
              containerPort: 7946
              protocol: TCP
          livenessProbe:
            null
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          resources:
            requests:
              cpu: 20m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          env:
            - name: "GOMAXPROCS"
              value: "5"
            - name: "JAEGER_REPORTER_MAX_QUEUE_SIZE"
              value: "5000"
          envFrom:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: mimir
            app.kubernetes.io/instance: release-name
            app.kubernetes.io/component: querier
      terminationGracePeriodSeconds: 180
      volumes:
        - name: config
          configMap:
            name: release-name-mimir-config
            items:
              - key: "mimir.yaml"
                path: "mimir.yaml"
        - name: runtime-config
          configMap:
            name: release-name-mimir-runtime
        - name: storage
          emptyDir: {}
        - name: active-queries
          emptyDir: {}
---
# Source: lgtm-distributed/charts/mimir/templates/query-frontend/query-frontend-dep.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-mimir-query-frontend
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
  namespace: "default"
spec:
  # If replicas is not number (when using values file it's float64, when using --set arg it's int64) and is false (i.e. null) don't set it
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: query-frontend
  strategy:
    rollingUpdate:
      maxSurge: 15%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        helm.sh/chart: mimir-5.3.0
        app.kubernetes.io/name: mimir
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "2.12.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: query-frontend
      annotations:
        checksum/config: 4f76689ad39f6e2bae37062cf164250ec73030c399c1f20733f987ae06a87fbd
      namespace: "default"
    spec:
      serviceAccountName: release-name-mimir
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: query-frontend
          image: "grafana/mimir:2.12.0"
          imagePullPolicy: IfNotPresent
          args:
            - "-target=query-frontend"
            - "-config.expand-env=true"
            - "-config.file=/etc/mimir/mimir.yaml"
            # Reduce the likelihood of queries hitting terminated query-frontends.
            - "-server.grpc.keepalive.max-connection-age=30s"
            - "-shutdown-delay=90s"
          volumeMounts:
            - name: runtime-config
              mountPath: /var/mimir
            - name: config
              mountPath: /etc/mimir
            - name: storage
              mountPath: /data
            - name: active-queries
              mountPath: /active-query-tracker
          ports:
            - name: http-metrics
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
          livenessProbe:
            null
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          resources:
            requests:
              cpu: 20m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          env:
            - name: "JAEGER_REPORTER_MAX_QUEUE_SIZE"
              value: "5000"
          envFrom:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: mimir
            app.kubernetes.io/instance: release-name
            app.kubernetes.io/component: query-frontend
      terminationGracePeriodSeconds: 390
      volumes:
        - name: config
          configMap:
            name: release-name-mimir-config
            items:
              - key: "mimir.yaml"
                path: "mimir.yaml"
        - name: runtime-config
          configMap:
            name: release-name-mimir-runtime
        - name: storage
          emptyDir: {}
        - name: active-queries
          emptyDir: {}
---
# Source: lgtm-distributed/charts/mimir/templates/query-scheduler/query-scheduler-dep.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-mimir-query-scheduler
  namespace: "default"
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: query-scheduler
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: query-scheduler
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        helm.sh/chart: mimir-5.3.0
        app.kubernetes.io/name: mimir
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "2.12.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: query-scheduler
      annotations:
        checksum/config: 4f76689ad39f6e2bae37062cf164250ec73030c399c1f20733f987ae06a87fbd
    spec:
      serviceAccountName: release-name-mimir
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: query-scheduler
          image: "grafana/mimir:2.12.0"
          imagePullPolicy: IfNotPresent
          args:
            - "-target=query-scheduler"
            - "-config.expand-env=true"
            - "-config.file=/etc/mimir/mimir.yaml"
          volumeMounts:
            - name: runtime-config
              mountPath: /var/mimir
            - name: config
              mountPath: /etc/mimir
            - name: storage
              mountPath: /data
            - name: active-queries
              mountPath: /active-query-tracker
          ports:
            - name: http-metrics
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
          livenessProbe:
            null
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          resources:
            requests:
              cpu: 20m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          env:
          envFrom:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: mimir
            app.kubernetes.io/instance: release-name
            app.kubernetes.io/component: query-scheduler
      terminationGracePeriodSeconds: 180
      volumes:
        - name: config
          configMap:
            name: release-name-mimir-config
            items:
              - key: "mimir.yaml"
                path: "mimir.yaml"
        - name: runtime-config
          configMap:
            name: release-name-mimir-runtime
        - name: storage
          emptyDir: {}
        - name: active-queries
          emptyDir: {}
---
# Source: lgtm-distributed/charts/mimir/templates/ruler/ruler-dep.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-mimir-ruler
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: ruler
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
  namespace: "default"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: ruler
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        helm.sh/chart: mimir-5.3.0
        app.kubernetes.io/name: mimir
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "2.12.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: ruler
        app.kubernetes.io/part-of: memberlist
      annotations:
        checksum/config: 4f76689ad39f6e2bae37062cf164250ec73030c399c1f20733f987ae06a87fbd
      namespace: "default"
    spec:
      serviceAccountName: release-name-mimir
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: ruler
          image: "grafana/mimir:2.12.0"
          imagePullPolicy: IfNotPresent
          args:
            - "-target=ruler"
            - "-config.expand-env=true"
            - "-config.file=/etc/mimir/mimir.yaml"
            - "-distributor.remote-timeout=10s"
          volumeMounts:
            - name: config
              mountPath: /etc/mimir
            - name: runtime-config
              mountPath: /var/mimir
            - name: storage
              mountPath: "/data"
              subPath: 
            - name: active-queries
              mountPath: /active-query-tracker
          ports:
            - name: http-metrics
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: memberlist
              containerPort: 7946
              protocol: TCP
          livenessProbe:
            null
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          resources:
            requests:
              cpu: 20m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          env:
            - name: "JAEGER_REPORTER_MAX_QUEUE_SIZE"
              value: "1000"
          envFrom:
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: mimir
            app.kubernetes.io/instance: release-name
            app.kubernetes.io/component: ruler
      terminationGracePeriodSeconds: 180
      volumes:
        - name: config
          configMap:
            name: release-name-mimir-config
            items:
              - key: "mimir.yaml"
                path: "mimir.yaml"
        - name: runtime-config
          configMap:
            name: release-name-mimir-runtime
        - name: storage
          emptyDir: {}
        - name: active-queries
          emptyDir: {}
---
# Source: lgtm-distributed/charts/tempo/templates/compactor/deployment-compactor.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-tempo-compactor
  namespace: default
  labels:
    helm.sh/chart: tempo-1.13.2
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: compactor
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.5.0"
    app.kubernetes.io/managed-by: Helm
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: tempo
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: compactor
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      labels:
        helm.sh/chart: tempo-1.13.2
        app.kubernetes.io/name: tempo
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "2.5.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: compactor
        app.kubernetes.io/part-of: memberlist
      annotations:
        checksum/config: 722608605be482e5644b8823405acc4b7f66863e0fd893d7d78acbe3797f37cf
    spec:
      serviceAccountName: release-name-tempo
      securityContext:
        fsGroup: 1000
      enableServiceLinks: false
      
      containers:
        - args:
            - -target=compactor
            - -config.file=/conf/tempo.yaml
            - -mem-ballast-size-mbs=1024
          image: docker.io/grafana/tempo:2.5.0
          imagePullPolicy: IfNotPresent
          name: compactor
          ports:
            - containerPort: 3100
              name: http-metrics
            - containerPort: 7946
              name: http-memberlist
          resources:
            {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          volumeMounts:
            - mountPath: /conf
              name: config
            - mountPath: /runtime-config
              name: runtime-config
            - mountPath: /var/tempo
              name: tempo-compactor-store
      terminationGracePeriodSeconds: 30
      volumes:
        - name: config
          configMap:
            name: release-name-tempo-config
            items:
              - key: "tempo.yaml"
                path: "tempo.yaml"
        - name: runtime-config
          configMap:
            name: release-name-tempo-runtime
            items:
              - key: "overrides.yaml"
                path: "overrides.yaml"
        - name: tempo-compactor-store
          emptyDir: {}
---
# Source: lgtm-distributed/charts/tempo/templates/distributor/deployment-distributor.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-tempo-distributor
  namespace: default
  labels:
    helm.sh/chart: tempo-1.13.2
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: distributor
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.5.0"
    app.kubernetes.io/managed-by: Helm
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: tempo
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: distributor
  template:
    metadata:
      labels:
        helm.sh/chart: tempo-1.13.2
        app.kubernetes.io/name: tempo
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "2.5.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: distributor
        app.kubernetes.io/part-of: memberlist
      annotations:
        checksum/config: 722608605be482e5644b8823405acc4b7f66863e0fd893d7d78acbe3797f37cf
    spec:
      serviceAccountName: release-name-tempo
      securityContext:
        fsGroup: 1000
      enableServiceLinks: false
      
      containers:
        - args:
            - -target=distributor
            - -config.file=/conf/tempo.yaml
            - -mem-ballast-size-mbs=1024
          image: docker.io/grafana/tempo:2.5.0
          imagePullPolicy: IfNotPresent
          name: distributor
          ports:
            - containerPort: 7946
              name: http-memberlist
              protocol: TCP
            - containerPort: 3100
              name: http-metrics
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 30
            timeoutSeconds: 1
          resources:
            {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          volumeMounts:
            - mountPath: /conf
              name: config
            - mountPath: /runtime-config
              name: runtime-config
            - mountPath: /var/tempo
              name: tempo-distributor-store
      terminationGracePeriodSeconds: 30
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: tempo
              app.kubernetes.io/instance: release-name
              app.kubernetes.io/component: distributor
        
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: tempo
                  app.kubernetes.io/instance: release-name
                  app.kubernetes.io/component: distributor
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: tempo
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: distributor
                topologyKey: topology.kubernetes.io/zone
        
      volumes:
        - name: config
          configMap:
            name: release-name-tempo-config
            items:
              - key: "tempo.yaml"
                path: "tempo.yaml"
        - name: runtime-config
          configMap:
            name: release-name-tempo-runtime
            items:
              - key: "overrides.yaml"
                path: "overrides.yaml"
        - name: tempo-distributor-store
          emptyDir: {}
---
# Source: lgtm-distributed/charts/tempo/templates/querier/deployment-querier.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-tempo-querier
  namespace: default
  labels:
    helm.sh/chart: tempo-1.13.2
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: querier
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.5.0"
    app.kubernetes.io/managed-by: Helm
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: tempo
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: querier
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      labels:
        helm.sh/chart: tempo-1.13.2
        app.kubernetes.io/name: tempo
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "2.5.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: querier
        app.kubernetes.io/part-of: memberlist
      annotations:
        checksum/config: 722608605be482e5644b8823405acc4b7f66863e0fd893d7d78acbe3797f37cf
    spec:
      serviceAccountName: release-name-tempo
      securityContext:
        fsGroup: 1000
      enableServiceLinks: false
      
      containers:
        - args:
            - -target=querier
            - -config.file=/conf/tempo.yaml
            - -mem-ballast-size-mbs=1024
          image: docker.io/grafana/tempo:2.5.0
          imagePullPolicy: IfNotPresent
          name: querier
          ports:
            - containerPort: 7946
              name: http-memberlist
              protocol: TCP
            - containerPort: 3100
              name: http-metrics
          resources:
            {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 30
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /conf
              name: config
            - mountPath: /runtime-config
              name: runtime-config
            - mountPath: /var/tempo
              name: tempo-querier-store
      terminationGracePeriodSeconds: 30
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: tempo
              app.kubernetes.io/instance: release-name
              app.kubernetes.io/component: querier
        
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: tempo
                  app.kubernetes.io/instance: release-name
                  app.kubernetes.io/component: querier
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: tempo
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: querier
                topologyKey: topology.kubernetes.io/zone
        
      volumes:
        - name: config
          configMap:
            name: release-name-tempo-config
            items:
              - key: "tempo.yaml"
                path: "tempo.yaml"
        - name: runtime-config
          configMap:
            name: release-name-tempo-runtime
            items:
              - key: "overrides.yaml"
                path: "overrides.yaml"
        - name: tempo-querier-store
          emptyDir: {}
---
# Source: lgtm-distributed/charts/tempo/templates/query-frontend/deployment-query-frontend.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-tempo-query-frontend
  namespace: default
  labels:
    helm.sh/chart: tempo-1.13.2
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/version: "2.5.0"
    app.kubernetes.io/managed-by: Helm
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: tempo
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: query-frontend
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      labels:
        helm.sh/chart: tempo-1.13.2
        app.kubernetes.io/name: tempo
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "2.5.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: query-frontend
      annotations:
        checksum/config: 722608605be482e5644b8823405acc4b7f66863e0fd893d7d78acbe3797f37cf
    spec:
      serviceAccountName: release-name-tempo
      securityContext:
        fsGroup: 1000
      enableServiceLinks: false
      
      containers:
        - args:
            - -target=query-frontend
            - -config.file=/conf/tempo.yaml
            - -mem-ballast-size-mbs=1024
          image: docker.io/grafana/tempo:2.5.0
          imagePullPolicy: IfNotPresent
          name: query-frontend
          ports:
            - containerPort: 3100
              name: http-metrics
            - containerPort: 9095
              name: grpc
          resources:
            {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          volumeMounts:
            - mountPath: /conf
              name: config
            - mountPath: /runtime-config
              name: runtime-config
            - mountPath: /var/tempo
              name: tempo-queryfrontend-store
      terminationGracePeriodSeconds: 30
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: tempo
              app.kubernetes.io/instance: release-name
              app.kubernetes.io/component: query-frontend
        
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: tempo
                  app.kubernetes.io/instance: release-name
                  app.kubernetes.io/component: query-frontend
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: tempo
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: query-frontend
                topologyKey: topology.kubernetes.io/zone
        
      volumes:
        - name: config
          configMap:
            name: release-name-tempo-config
            items:
              - key: "tempo.yaml"
                path: "tempo.yaml"
        - name: runtime-config
          configMap:
            name: release-name-tempo-runtime
            items:
              - key: "overrides.yaml"
                path: "overrides.yaml"
        - name: tempo-queryfrontend-store
          emptyDir: {}
---
# Source: lgtm-distributed/charts/loki/templates/ingester/statefulset-ingester.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-loki-ingester
  namespace: default
  labels:
    helm.sh/chart: loki-0.79.0
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.9.6"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: ingester
    app.kubernetes.io/part-of: memberlist
spec:
  replicas: 1
  podManagementPolicy: Parallel
  updateStrategy:
    rollingUpdate:
      partition: 0
  serviceName: release-name-loki-ingester-headless
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: loki
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: ingester
  template:
    metadata:
      annotations:
        checksum/config: c129e4be5ed1056210b50f5ee11d92813c4503e724e2be8268f6b67466a5f5b4
      labels:
        app.kubernetes.io/name: loki
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: ingester
        app.kubernetes.io/part-of: memberlist
    spec:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: loki
              app.kubernetes.io/instance: release-name
              app.kubernetes.io/component: ingester
        
      serviceAccountName: release-name-loki
      
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      terminationGracePeriodSeconds: 300
      containers:
        - name: ingester
          image: docker.io/grafana/loki:2.9.6
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/loki/config/config.yaml
            - -target=ingester
          ports:
            - name: http
              containerPort: 3100
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: http-memberlist
              containerPort: 7946
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 1
          
          livenessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 300
          volumeMounts:
            - name: config
              mountPath: /etc/loki/config
            - name: runtime-config
              mountPath: /var/loki-runtime
            - name: data
              mountPath: /var/loki
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: loki
                  app.kubernetes.io/instance: release-name
                  app.kubernetes.io/component: ingester
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: loki
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: ingester
                topologyKey: failure-domain.beta.kubernetes.io/zone
        
      volumes:
        - name: config
          configMap:
            name: release-name-loki
        - name: runtime-config
          configMap:
            name: release-name-loki-runtime
        - name: data
          emptyDir: {}
---
# Source: lgtm-distributed/charts/loki/templates/querier/statefulset-querier.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-loki-querier
  namespace: default
  labels:
    helm.sh/chart: loki-0.79.0
    app.kubernetes.io/name: loki
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "2.9.6"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: querier
    app.kubernetes.io/part-of: memberlist
spec:
  replicas: 1
  podManagementPolicy: Parallel
  updateStrategy:
    rollingUpdate:
      partition: 0
  serviceName: release-name-loki-querier-headless
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: loki
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: querier
  template:
    metadata:
      annotations:
        checksum/config: c129e4be5ed1056210b50f5ee11d92813c4503e724e2be8268f6b67466a5f5b4
      labels:
        app.kubernetes.io/name: loki
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: querier
        app.kubernetes.io/part-of: memberlist
    spec:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: loki
              app.kubernetes.io/instance: release-name
              app.kubernetes.io/component: querier
        
      serviceAccountName: release-name-loki
      
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      terminationGracePeriodSeconds: 30
      containers:
        - name: querier
          image: docker.io/grafana/loki:2.9.6
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/loki/config/config.yaml
            - -target=querier
          ports:
            - name: http
              containerPort: 3100
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: http-memberlist
              containerPort: 7946
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 300
          volumeMounts:
            - name: config
              mountPath: /etc/loki/config
            - name: runtime-config
              mountPath: /var/loki-runtime
            - name: data
              mountPath: /var/loki
          resources:
            {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: loki
                  app.kubernetes.io/instance: release-name
                  app.kubernetes.io/component: querier
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: loki
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: querier
                topologyKey: failure-domain.beta.kubernetes.io/zone
        
      volumes:
        - name: config
          configMap:
            name: release-name-loki
        - name: runtime-config
          configMap:
            name: release-name-loki-runtime
        - name: data
          emptyDir: {}
---
# Source: lgtm-distributed/charts/mimir/templates/alertmanager/alertmanager-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-mimir-alertmanager
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: alertmanager
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
  namespace: "default"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: alertmanager
  updateStrategy:
    type: RollingUpdate
  serviceName: release-name-mimir-alertmanager
  volumeClaimTemplates:
    - metadata:
        name: storage
      spec:
        storageClassName: nfs-client
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "1Gi"
  template:
    metadata:
      labels:
        helm.sh/chart: mimir-5.3.0
        app.kubernetes.io/name: mimir
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "2.12.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: alertmanager
        app.kubernetes.io/part-of: memberlist
      annotations:
        checksum/config: 4f76689ad39f6e2bae37062cf164250ec73030c399c1f20733f987ae06a87fbd
        checksum/alertmanager-fallback-config: a5b9abb077f66fae1b89c2ca3d58f679aa4cc8ceab6c32397c8a15039040e478
      namespace: "default"
    spec:
      serviceAccountName: release-name-mimir
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: mimir
            app.kubernetes.io/instance: release-name
            app.kubernetes.io/component: alertmanager
      terminationGracePeriodSeconds: 60
      volumes:
        - name: config
          configMap:
            name: release-name-mimir-config
            items:
              - key: "mimir.yaml"
                path: "mimir.yaml"
        - name: runtime-config
          configMap:
            name: release-name-mimir-runtime
        - name: tmp
          emptyDir: {}
        - name: active-queries
          emptyDir: {}
        - name: alertmanager-fallback-config
          configMap:
            name: release-name-mimir-alertmanager-fallback-config
      containers:
        - name: alertmanager
          image: "grafana/mimir:2.12.0"
          imagePullPolicy: IfNotPresent
          args:
            - "-target=alertmanager"
            - "-config.expand-env=true"
            - "-config.file=/etc/mimir/mimir.yaml"
          volumeMounts:
            - name: config
              mountPath: /etc/mimir
            - name: runtime-config
              mountPath: /var/mimir
            - name: storage
              mountPath: "/data"
            - name: alertmanager-fallback-config
              mountPath: /configs/
            - name: tmp
              mountPath: /tmp
            - name: active-queries
              mountPath: /active-query-tracker
          ports:
            - name: http-metrics
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: memberlist
              containerPort: 7946
              protocol: TCP
          livenessProbe:
            null
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          resources:
            requests:
              cpu: 20m
              memory: 32Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          env:
          envFrom:
---
# Source: lgtm-distributed/charts/mimir/templates/compactor/compactor-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-mimir-compactor
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: compactor
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
  namespace: "default"
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: compactor
  updateStrategy:
    type: RollingUpdate
  serviceName: release-name-mimir-compactor
  volumeClaimTemplates:
    - metadata:
        name: storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "2Gi"
  template:
    metadata:
      labels:
        helm.sh/chart: mimir-5.3.0
        app.kubernetes.io/name: mimir
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "2.12.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: compactor
        app.kubernetes.io/part-of: memberlist
      annotations:
        checksum/config: 4f76689ad39f6e2bae37062cf164250ec73030c399c1f20733f987ae06a87fbd
      namespace: "default"
    spec:
      serviceAccountName: release-name-mimir
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: mimir
            app.kubernetes.io/instance: release-name
            app.kubernetes.io/component: compactor
      terminationGracePeriodSeconds: 240
      volumes:
        - name: config
          configMap:
            name: release-name-mimir-config
            items:
              - key: "mimir.yaml"
                path: "mimir.yaml"
        - name: runtime-config
          configMap:
            name: release-name-mimir-runtime
        - name: active-queries
          emptyDir: {}
      containers:
        - name: compactor
          image: "grafana/mimir:2.12.0"
          imagePullPolicy: IfNotPresent
          args:
            - "-target=compactor"
            - "-config.expand-env=true"
            - "-config.file=/etc/mimir/mimir.yaml"
          volumeMounts:
            - name: config
              mountPath: /etc/mimir
            - name: runtime-config
              mountPath: /var/mimir
            - name: storage
              mountPath: "/data"
            - name: active-queries
              mountPath: /active-query-tracker
          ports:
            - name: http-metrics
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: memberlist
              containerPort: 7946
              protocol: TCP
          livenessProbe:
            null
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 60
          resources:
            requests:
              cpu: 20m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          env:
          envFrom:
---
# Source: lgtm-distributed/charts/mimir/templates/ingester/ingester-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-mimir-ingester
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: ingester
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
  namespace: "default"
spec:
  podManagementPolicy: Parallel
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: ingester
  updateStrategy:
    type: RollingUpdate
  serviceName: release-name-mimir-ingester-headless
  volumeClaimTemplates:
    - metadata:
        name: storage
      spec:
        storageClassName: nfs-client
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "2Gi"
  template:
    metadata:
      labels:
        helm.sh/chart: mimir-5.3.0
        app.kubernetes.io/name: mimir
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "2.12.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: ingester
        app.kubernetes.io/part-of: memberlist
      annotations:
        checksum/config: 4f76689ad39f6e2bae37062cf164250ec73030c399c1f20733f987ae06a87fbd
      namespace: "default"
    spec:
      serviceAccountName: release-name-mimir
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: mimir
            app.kubernetes.io/instance: release-name
            app.kubernetes.io/component: ingester
      terminationGracePeriodSeconds: 240
      volumes:
        - name: config
          configMap:
            name: release-name-mimir-config
            items:
              - key: "mimir.yaml"
                path: "mimir.yaml"
        - name: runtime-config
          configMap:
            name: release-name-mimir-runtime
        - name: active-queries
          emptyDir: {}
      containers:
        - name: ingester
          image: "grafana/mimir:2.12.0"
          imagePullPolicy: IfNotPresent
          args:
            - "-target=ingester"
            - "-config.expand-env=true"
            - "-config.file=/etc/mimir/mimir.yaml"
            - "-ingester.ring.instance-availability-zone=zone-default"
            - "-server.grpc-max-concurrent-streams=500"
          volumeMounts:
            - name: config
              mountPath: /etc/mimir
            - name: runtime-config
              mountPath: /var/mimir
            - name: storage
              mountPath: "/data"
            - name: active-queries
              mountPath: /active-query-tracker
          ports:
            - name: http-metrics
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: memberlist
              containerPort: 7946
              protocol: TCP
          livenessProbe:
            null
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 60
          resources:
            requests:
              cpu: 20m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          env:
            - name: "JAEGER_REPORTER_MAX_QUEUE_SIZE"
              value: "1000"
          envFrom:
---
# Source: lgtm-distributed/charts/mimir/templates/store-gateway/store-gateway-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-mimir-store-gateway
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: store-gateway
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
  namespace: "default"
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: store-gateway
  updateStrategy:
    type: RollingUpdate
  serviceName: release-name-mimir-store-gateway-headless
  volumeClaimTemplates:
    - metadata:
        name: storage
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "2Gi"
  template:
    metadata:
      labels:
        helm.sh/chart: mimir-5.3.0
        app.kubernetes.io/name: mimir
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "2.12.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: store-gateway
        app.kubernetes.io/part-of: memberlist
      annotations:
        checksum/config: 4f76689ad39f6e2bae37062cf164250ec73030c399c1f20733f987ae06a87fbd
      namespace: "default"
    spec:
      serviceAccountName: release-name-mimir
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: mimir
            app.kubernetes.io/instance: release-name
            app.kubernetes.io/component: store-gateway
      terminationGracePeriodSeconds: 240
      volumes:
        - name: config
          configMap:
            name: release-name-mimir-config
            items:
              - key: "mimir.yaml"
                path: "mimir.yaml"
        - name: runtime-config
          configMap:
            name: release-name-mimir-runtime
        - name: active-queries
          emptyDir: {}
      containers:
        - name: store-gateway
          image: "grafana/mimir:2.12.0"
          imagePullPolicy: IfNotPresent
          args:
            - "-target=store-gateway"
            - "-config.expand-env=true"
            - "-config.file=/etc/mimir/mimir.yaml"
          volumeMounts:
            - name: config
              mountPath: /etc/mimir
            - name: runtime-config
              mountPath: /var/mimir
            - name: storage
              mountPath: "/data"
            - name: active-queries
              mountPath: /active-query-tracker
          ports:
            - name: http-metrics
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: memberlist
              containerPort: 7946
              protocol: TCP
          livenessProbe:
            null
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 60
          resources:
            requests:
              cpu: 20m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          env:
            - name: "GOMAXPROCS"
              value: "5"
            - name: "GOMEMLIMIT"
              value: "536870912"
            - name: "JAEGER_REPORTER_MAX_QUEUE_SIZE"
              value: "1000"
          envFrom:
---
# Source: lgtm-distributed/charts/tempo/templates/ingester/statefulset-ingester.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-tempo-ingester
  namespace: default
  labels:    
    helm.sh/chart: tempo-1.13.2
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: ingester
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.5.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tempo
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: ingester
  serviceName: ingester
  podManagementPolicy: Parallel
  updateStrategy:
    rollingUpdate:
      partition: 0
  template:
    metadata:
      labels:
        helm.sh/chart: tempo-1.13.2
        app.kubernetes.io/name: tempo
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "2.5.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: ingester
        app.kubernetes.io/part-of: memberlist
      annotations:
        checksum/config: 722608605be482e5644b8823405acc4b7f66863e0fd893d7d78acbe3797f37cf
    spec:
      serviceAccountName: release-name-tempo
      securityContext:
        fsGroup: 1000
      enableServiceLinks: false
      
      initContainers:
        []
      containers:
        - args:
            - -target=ingester
            - -config.file=/conf/tempo.yaml
            - -mem-ballast-size-mbs=1024
          image: docker.io/grafana/tempo:2.5.0
          imagePullPolicy: IfNotPresent
          name: ingester
          ports:
            - name: grpc
              containerPort: 9095
            - name: http-memberlist
              containerPort: 7946
            - name: http-metrics
              containerPort: 3100
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 30
            timeoutSeconds: 1
          resources:
            {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          volumeMounts:
            - mountPath: /conf
              name: config
            - mountPath: /runtime-config
              name: runtime-config
            - mountPath: /var/tempo
              name: data
      terminationGracePeriodSeconds: 300
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: tempo
              app.kubernetes.io/instance: release-name
              app.kubernetes.io/component: ingester
        
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: tempo
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: ingester
                topologyKey: kubernetes.io/hostname
            - weight: 75
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: tempo
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: ingester
                topologyKey: topology.kubernetes.io/zone
        
      volumes:
        - name: config
          configMap:
            name: release-name-tempo-config
            items:
              - key: "tempo.yaml"
                path: "tempo.yaml"
        - name: runtime-config
          configMap:
            name: release-name-tempo-runtime
            items:
              - key: "overrides.yaml"
                path: "overrides.yaml"
        - name: data
          emptyDir: {}
---
# Source: lgtm-distributed/charts/tempo/templates/memcached/statefulset-memcached.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-tempo-memcached
  namespace: default
  labels:
    helm.sh/chart: tempo-1.13.2
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: memcached
    app.kubernetes.io/version: "2.5.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tempo
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: memcached
  serviceName: memcached
  template:
    metadata:
      labels:
        helm.sh/chart: tempo-1.13.2
        app.kubernetes.io/name: tempo
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/component: memcached
        app.kubernetes.io/version: "2.5.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: release-name-tempo
      securityContext:
        fsGroup: 1000
      enableServiceLinks: false
      
      containers:
        - image: docker.io/memcached:1.6.23-alpine
          imagePullPolicy: IfNotPresent
          name: memcached
          ports:
            - containerPort: 11211
              name: client
          resources:
            {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: tempo
              app.kubernetes.io/instance: release-name
              app.kubernetes.io/component: memcached
        
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: tempo
                  app.kubernetes.io/instance: release-name
                  app.kubernetes.io/component: memcached
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: tempo
                    app.kubernetes.io/instance: release-name
                    app.kubernetes.io/component: memcached
                topologyKey: topology.kubernetes.io/zone
        
  updateStrategy:
    type: RollingUpdate
---
# Source: lgtm-distributed/charts/mimir/templates/minio/create-bucket-job.yaml
# Minio provides post-install hook to create bucket
# however the hook won't be executed if helm install is run
# with --wait flag. Hence this job is a workaround for that.
# See https://github.com/grafana/mimir/issues/2464
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-mimir-make-minio-buckets-5.0.14
  namespace: "default"
  labels:
    app: mimir-make-bucket-job
    chart: mimir-5.3.0
    release: release-name
    heritage: Helm
spec:
  template:
    metadata:
      labels:
        app: mimir-job
        release: release-name
    spec:
      restartPolicy: OnFailure      
      volumes:
        - name: minio-configuration
          projected:
            sources:
            - configMap:
                name: release-name-minio
            - secret:
                name: release-name-minio
      containers:
      - name: minio-mc
        image: "quay.io/minio/mc:RELEASE.2023-09-29T16-41-22Z"
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "/config/initialize"]
        env:
          - name: MINIO_ENDPOINT
            value: release-name-minio
          - name: MINIO_PORT
            value: "9000"
        volumeMounts:
          - name: minio-configuration
            mountPath: /config
        resources:
          requests:
            memory: 128Mi
---
# Source: lgtm-distributed/charts/mimir/templates/alertmanager/alertmanager-servmon.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: release-name-mimir-alertmanager
  namespace: "monitoring"
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: alertmanager
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
spec:
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: alertmanager
    matchExpressions:
      - key: prometheus.io/service-monitor
        operator: NotIn
        values:
          - "false"
  endpoints:
    - port: http-metrics
      relabelings:
        - sourceLabels: [job]
          replacement: "default/alertmanager"
          targetLabel: job
        - replacement: "cilium-demo-cluster3"
          targetLabel: cluster
      scheme: http
---
# Source: lgtm-distributed/charts/mimir/templates/compactor/compactor-servmon.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: release-name-mimir-compactor
  namespace: "monitoring"
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: compactor
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
spec:
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: compactor
    matchExpressions:
      - key: prometheus.io/service-monitor
        operator: NotIn
        values:
          - "false"
  endpoints:
    - port: http-metrics
      relabelings:
        - sourceLabels: [job]
          replacement: "default/compactor"
          targetLabel: job
        - replacement: "cilium-demo-cluster3"
          targetLabel: cluster
      scheme: http
---
# Source: lgtm-distributed/charts/mimir/templates/distributor/distributor-servmon.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: release-name-mimir-distributor
  namespace: "monitoring"
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: distributor
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
spec:
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: distributor
    matchExpressions:
      - key: prometheus.io/service-monitor
        operator: NotIn
        values:
          - "false"
  endpoints:
    - port: http-metrics
      relabelings:
        - sourceLabels: [job]
          replacement: "default/distributor"
          targetLabel: job
        - replacement: "cilium-demo-cluster3"
          targetLabel: cluster
      scheme: http
---
# Source: lgtm-distributed/charts/mimir/templates/ingester/ingester-servmon.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: release-name-mimir-ingester
  namespace: "monitoring"
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: ingester
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
spec:
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: ingester
    matchExpressions:
      - key: prometheus.io/service-monitor
        operator: NotIn
        values:
          - "false"
  endpoints:
    - port: http-metrics
      relabelings:
        - sourceLabels: [job]
          replacement: "default/ingester"
          targetLabel: job
        - replacement: "cilium-demo-cluster3"
          targetLabel: cluster
      scheme: http
---
# Source: lgtm-distributed/charts/mimir/templates/overrides-exporter/overrides-exporter-servmon.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: release-name-mimir-overrides-exporter
  namespace: "monitoring"
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: overrides-exporter
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
spec:
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: overrides-exporter
    matchExpressions:
      - key: prometheus.io/service-monitor
        operator: NotIn
        values:
          - "false"
  endpoints:
    - port: http-metrics
      relabelings:
        - sourceLabels: [job]
          replacement: "default/overrides-exporter"
          targetLabel: job
        - replacement: "cilium-demo-cluster3"
          targetLabel: cluster
      scheme: http
---
# Source: lgtm-distributed/charts/mimir/templates/querier/querier-servmon.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: release-name-mimir-querier
  namespace: "monitoring"
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: querier
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
spec:
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: querier
    matchExpressions:
      - key: prometheus.io/service-monitor
        operator: NotIn
        values:
          - "false"
  endpoints:
    - port: http-metrics
      relabelings:
        - sourceLabels: [job]
          replacement: "default/querier"
          targetLabel: job
        - replacement: "cilium-demo-cluster3"
          targetLabel: cluster
      scheme: http
---
# Source: lgtm-distributed/charts/mimir/templates/query-frontend/query-frontend-servmon.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: release-name-mimir-query-frontend
  namespace: "monitoring"
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: query-frontend
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
spec:
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: query-frontend
    matchExpressions:
      - key: prometheus.io/service-monitor
        operator: NotIn
        values:
          - "false"
  endpoints:
    - port: http-metrics
      relabelings:
        - sourceLabels: [job]
          replacement: "default/query-frontend"
          targetLabel: job
        - replacement: "cilium-demo-cluster3"
          targetLabel: cluster
      scheme: http
---
# Source: lgtm-distributed/charts/mimir/templates/query-scheduler/query-scheduler-servmon.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: release-name-mimir-query-scheduler
  namespace: "monitoring"
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: query-scheduler
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
spec:
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: query-scheduler
    matchExpressions:
      - key: prometheus.io/service-monitor
        operator: NotIn
        values:
          - "false"
  endpoints:
    - port: http-metrics
      relabelings:
        - sourceLabels: [job]
          replacement: "default/query-scheduler"
          targetLabel: job
        - replacement: "cilium-demo-cluster3"
          targetLabel: cluster
      scheme: http
---
# Source: lgtm-distributed/charts/mimir/templates/ruler/ruler-servmon.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: release-name-mimir-ruler
  namespace: "monitoring"
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: ruler
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
spec:
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: ruler
    matchExpressions:
      - key: prometheus.io/service-monitor
        operator: NotIn
        values:
          - "false"
  endpoints:
    - port: http-metrics
      relabelings:
        - sourceLabels: [job]
          replacement: "default/ruler"
          targetLabel: job
        - replacement: "cilium-demo-cluster3"
          targetLabel: cluster
      scheme: http
---
# Source: lgtm-distributed/charts/mimir/templates/store-gateway/store-gateway-servmon.yaml
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: release-name-mimir-store-gateway
  namespace: "monitoring"
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: store-gateway
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
spec:
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/component: store-gateway
    matchExpressions:
      - key: prometheus.io/service-monitor
        operator: NotIn
        values:
          - "false"
  endpoints:
    - port: http-metrics
      relabelings:
        - sourceLabels: [job]
          replacement: "default/store-gateway"
          targetLabel: job
        - replacement: "cilium-demo-cluster3"
          targetLabel: cluster
      scheme: http
---
# Source: lgtm-distributed/charts/grafana/templates/tests/test-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: grafana-7.3.12
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "10.4.3"
    app.kubernetes.io/managed-by: Helm
  name: release-name-grafana-test
  namespace: default
  annotations:
    "helm.sh/hook": test-success
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
---
# Source: lgtm-distributed/charts/grafana/templates/tests/test-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-grafana-test
  namespace: default
  annotations:
    "helm.sh/hook": test-success
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
  labels:
    helm.sh/chart: grafana-7.3.12
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "10.4.3"
    app.kubernetes.io/managed-by: Helm
data:
  run.sh: |-
    @test "Test Health" {
      url="http://release-name-grafana/api/health"

      code=$(wget --server-response --spider --timeout 90 --tries 10 ${url} 2>&1 | awk '/^  HTTP/{print $2}')
      [ "$code" == "200" ]
    }
---
# Source: lgtm-distributed/charts/grafana/templates/tests/test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: release-name-grafana-test
  labels:
    helm.sh/chart: grafana-7.3.12
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "10.4.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
  namespace: default
spec:
  serviceAccountName: release-name-grafana-test
  containers:
    - name: release-name-test
      image: "docker.io/bats/bats:v1.4.1"
      imagePullPolicy: "IfNotPresent"
      command: ["/opt/bats/bin/bats", "-t", "/tests/run.sh"]
      volumeMounts:
        - mountPath: /tests
          name: tests
          readOnly: true
  volumes:
    - name: tests
      configMap:
        name: release-name-grafana-test
  restartPolicy: Never
---
# Source: lgtm-distributed/charts/mimir/charts/minio/templates/post-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-minio-post-job
  labels:
    app: minio-post-job
    chart: minio-5.0.14
    release: release-name
    heritage: Helm
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  template:
    metadata:
      labels:
        app: minio-job
        release: release-name
    spec:
      restartPolicy: OnFailure      
      volumes:
        - name: etc-path
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: minio-configuration
          projected:
            sources:
              - configMap:
                  name: release-name-minio
              - secret:
                  name: release-name-minio
      serviceAccountName: minio-sa
      containers:
        - name: minio-make-bucket
          image: "quay.io/minio/mc:RELEASE.2023-09-29T16-41-22Z"
          imagePullPolicy: IfNotPresent
          command: [ "/bin/sh", "/config/initialize" ]
          env:
            - name: MINIO_ENDPOINT
              value: release-name-minio
            - name: MINIO_PORT
              value: "9000"
          volumeMounts:
            - name: etc-path
              mountPath: /etc/minio/mc
            - name: tmp
              mountPath: /tmp
            - name: minio-configuration
              mountPath: /config
          resources:
            requests:
              memory: 128Mi
        - name: minio-make-user
          image: "quay.io/minio/mc:RELEASE.2023-09-29T16-41-22Z"
          imagePullPolicy: IfNotPresent
          command: [ "/bin/sh", "/config/add-user" ]
          env:
            - name: MINIO_ENDPOINT
              value: release-name-minio
            - name: MINIO_PORT
              value: "9000"
          volumeMounts:
            - name: etc-path
              mountPath: /etc/minio/mc
            - name: tmp
              mountPath: /tmp
            - name: minio-configuration
              mountPath: /config
          resources:
            requests:
              memory: 128Mi
---
# Source: lgtm-distributed/charts/mimir/templates/smoke-test/smoke-test-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: release-name-mimir-smoke-test
  labels:
    helm.sh/chart: mimir-5.3.0
    app.kubernetes.io/name: mimir
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/component: smoke-test
    app.kubernetes.io/version: "2.12.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
  namespace: "default"
spec:
  backoffLimit: 5
  completions: 1
  parallelism: 1
  selector:
  template:
    metadata:
      labels:
        helm.sh/chart: mimir-5.3.0
        app.kubernetes.io/name: mimir
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/version: "2.12.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: smoke-test
    spec:
      serviceAccountName: release-name-mimir
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
        seccompProfile:
          type: RuntimeDefault
      initContainers:
        []
      containers:
        - name: smoke-test
          image: "grafana/mimir-continuous-test:2.12.0"
          imagePullPolicy: IfNotPresent
          args:
            - "-tests.smoke-test"
            - "-tests.write-endpoint=http://release-name-mimir-nginx.default.svc:80"
            - "-tests.read-endpoint=http://release-name-mimir-nginx.default.svc:80/prometheus"
            - "-tests.tenant-id="
            - "-tests.write-read-series-test.num-series=1000"
            - "-tests.write-read-series-test.max-query-age=48h"
            - "-server.metrics-port=8080"
          volumeMounts:
          env:
          envFrom:
      restartPolicy: OnFailure
      volumes:
