---

- name: Check if directories exist and exit if not
  hosts: localhost
  gather_facts: false
  tasks:

    - name: Check if the 'files/tmp' directory exists
      stat:
        path: "{{ playbook_dir }}/../files/tmp"
      register: tmp_dir_check

    - name: Check if the 'files/tmp/ca' directory exists
      stat:
        path: "{{ playbook_dir }}/../files/tmp/ca"
      register: ca_dir_check

    - name: Fail if 'files/tmp' directory does not exist
      fail:
        msg: "'files/tmp' directory does not exist. Exiting playbook."
      when:
        - tmp_dir_check.stat.exists
        - ca_dir_check.stat.exists

    - name: Continue tasks if both directories exist
      debug:
        msg: "Both 'files/tmp' and 'files/tmp/ca' directories exist, continuing with the playbook."
      when: 
        - tmp_dir_check.stat.exists
        - ca_dir_check.stat.exists

- name: Check if CA certificate and key already exist
  hosts: localhost
  tasks:
    - name: Check if CA certificate exists
      stat:
        path: "{{ playbook_dir }}/../files/tmp/ca/ca.crt"
      register: ca_cert_exists

    - name: Check if CA key exists
      stat:
        path: "{{ playbook_dir }}/../files/tmp/ca/ca.key"
      register: ca_key_exists

      # fail if either does not exist
    - name: Fail if CA certificate or key do not exist
      fail:
        msg: "CA certificate/key does not exist. Exiting playbook."
      when: not ca_cert_exists.stat.exists or not ca_key_exists.stat.exists

- name: Initialize System
  hosts: servers:agents
  roles:
    - role: init

- name: Configure Firewall
  hosts: servers:agents
  roles:
    - role: network
      become: true

- name: Configure Storage
  hosts: servers:agents
  roles:
    - role: storage

- name: Set up RKE2 server nodes for cluster2
  hosts: servers
  roles:
    - role: rke2
      vars:
        rke_role: "server"

- name: Fetch RKE2 node token for cluster2
  hosts: servers
  tasks:
    - name: Fetch RKE2 node token
      command: cat /var/lib/rancher/rke2/server/node-token
      register: rke2_node_token

    - name: Save RKE2 node token locally for cluster2
      copy:
        content: "{{ rke2_node_token.stdout }}"
        dest: "{{ playbook_dir }}/../files/tmp/{{ rke_cluser_name }}-token}}"

- name: Install RKE2 agents
  hosts: agents
  roles:
    - role: rke2
      vars:
        rke_role: "agent"
        rke_node_token: "{{ lookup('file', '{{ playbook_dir }}/../files/tmp/{{ rke_cluser_name }}-token') }}"
