- name: Check if private key exists
  stat:
    path: files/tmp/cilium-ca-certificate.key
  register: ca_key_stat
  delegate_to: localhost 

- name: Generate private key for Cilium
  community.crypto.openssl_privatekey:
    path: files/tmp/cilium-ca-certificate.key
  delegate_to: localhost
  when: not ca_key_stat.stat.exists

- name: Check if CA file exists
  stat:
    path: files/tmp/cilium-ca-certificate.pem
  register: ca_file_stat
  delegate_to: localhost

- name: Create certificate signing request (CSR) for CA certificate
  community.crypto.openssl_csr_pipe:
    privatekey_path: files/tmp/cilium-ca-certificate.key
    common_name: "{{ cluster_ca_name }}"
    use_common_name_for_san: false  
    basic_constraints:
      - 'CA:TRUE'
    basic_constraints_critical: true
    key_usage:
      - keyCertSign
    key_usage_critical: true
  register: ca_csr
  delegate_to: localhost
  when: not ca_file_stat.stat.exists

- name: Create self-signed CA certificate from CSR
  community.crypto.x509_certificate:
    path: files/tmp/cilium-ca-certificate.pem
    csr_content: "{{ ca_csr.csr }}"
    privatekey_path: files/tmp/cilium-ca-certificate.key
    provider: selfsigned
  delegate_to: localhost
  when: not ca_file_stat.stat.exists    

- name: Set cilium_ca and cilium_ca_key variables content
  set_fact:
    cilium_ca: "{{ (lookup('file', 'files/tmp/cilium-ca-certificate.pem') + '\n') | b64encode }}" 
    cilium_ca_key: "{{ (lookup('file', 'files/tmp/cilium-ca-certificate.key') + '\n') | b64encode }}"

# Check if file exists: files/tmp/rke2-cilium-config.yaml
- name: Check if Cilium values exists
  ansible.builtin.stat:
    path: "{{playbook_dir}}/templates/cilium/cilium-values.yaml.j2"
  delegate_to: localhost
  register: cilium_values_stat

# If file does not exist, exit
- name: Fail if Cilium values does not exist
  ansible.builtin.fail:
    msg: "Cilium values does not exist. Please create the file at {{playbook_dir}}/templates/cilium/rke2-cilium-config.yaml.j2"
  when: not cilium_values_stat.stat.exists

- name: Create Cilium values
  # become: true
  template:
    src: "{{playbook_dir}}/templates/cilium/cilium-values.yaml.j2"
    dest: "files/tmp/{{ rke2_cluster_name }}-cilium-values.yaml"
    mode: '0644'
  when: cilium_values_stat.stat.exists
  delegate_to: localhost

# - name: Copy Cilium Values to host
#   copy:
#     src: "files/tmp/{{ rke2_cluster_name }}-cilium-values.yaml"
#     dest: "/home/{{ ansible_user }}/cilium-values.yaml"
  # delegate_to: localhost

# - name: Install Cilium
#   shell:
#     cmd: |
#       cilium install -f /home/{{ ansible_user }}/{{ rke2_cluster_name }}-cilium-values.yaml

# - name: Install Cilium Helm Chart
#   community.kubernetes.helm:
#     name: cilium
#     chart_ref: cilium/cilium
#     chart_version: "{{ cilium_version }}"
#     release_namespace: kube-system
#     values_files:
#       - "files/tmp/{{ rke2_cluster_name }}-cilium-values.yaml"
#     state: present
#     wait: true
#     timeout: 600
#     kubeconfig: "{{ kubeconfig }}"
#   delegate_to: localhost