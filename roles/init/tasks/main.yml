- name: Ensure tmp directory exist
  ansible.builtin.file:
    path: "{{playbook_dir}}/files/tmp"
    state: directory
  delegate_to: localhost

# create ~/.local/bin directory
- name: Create ~/.local/bin directory
  ansible.builtin.file:
    path: "/home/{{ init_user_name }}/.local/bin"
    state: directory
    mode: '0755'
    owner: "{{ init_user_name }}"
    group: "{{ init_user_name }}"

# Create .bashrc file for rke2 user
- name: Create .bashrc file for rke2 user
  ansible.builtin.file:
    path: "/home/{{ init_user_name }}/.bashrc"
    state: touch
    owner: "{{ init_user_name }}"
    group: "{{ init_user_name }}"
    mode: "0644"

- name: Colorize user shell prompt
  ansible.builtin.lineinfile:
    path: "/home/{{ init_user_name }}/.bashrc"
    line: 'export PS1="\[\033[38;5;11m\]\u\[$(tput sgr0)\]\[\033[38;5;15m\]@\h:\[$(tput sgr0)\]\[\033[38;5;6m\][\w]:\[$(tput sgr0)\]\[\033[38;5;15m\] \[$(tput sgr0)\]"' # noqa: yaml[line-length]
    state: present
- name: Alias vi to vim
  ansible.builtin.lineinfile:
    path: "/home/{{ init_user_name }}/.bashrc"
    line: "alias vi='vim'"
    state: present

- name: Create vim configuration file
  ansible.builtin.file:
    path: "/home/{{ init_user_name }}/.vimrc"
    state: touch
    owner: "{{ init_user_name }}"
    group: "{{ init_user_name }}"
    mode: "0644"

- name: Configure vim
  ansible.builtin.blockinfile:
    path: "/home/{{ init_user_name }}/.vimrc"
    block: |
      set nocompatible
      set number
      set autoindent
      syntax on
      highlight Comment ctermfg=LightCyan
    marker: ""
    state: present

- name: Disable GSSAPIAuthentication
  become: true
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^GSSAPIAuthentication"
    line: "GSSAPIAuthentication no"
    state: present

- name: Update DNF
  become: true
  ansible.builtin.dnf:
    name: "*"
    state: latest

- name: Update CA bundle (Rocky)
  become: true
  ansible.builtin.get_url:
    url: https://curl.haxx.se/ca/cacert.pem
    dest: /etc/pki/tls/certs/ca-bundle.crt
    force: true
    mode: "0644"
  when: ansible_distribution == "Rocky"

- name: Install epel repo (Rocky)
  become: true
  ansible.builtin.dnf:
    name: "epel-release"
    state: latest
  when: ansible_distribution == "Rocky"

# enable epel repo
- name: Enable epel repo (Rocky)
  become: true
  ansible.builtin.shell:
    cmd: "dnf config-manager --set-enabled epel"
  when: ansible_distribution == "Rocky"

- name: Upgrade all packages (Rocky)
  become: true
  ansible.builtin.dnf:
    name: "*"
    state: latest
  when: ansible_distribution == "Rocky"

- name: Install packages (Rocky)
  become: true
  ansible.builtin.dnf:
    name: "{{ init_packages }}"
    state: latest
  when: ansible_distribution == "Rocky"

- name: Autoremove DNF packages
  become: true
  ansible.builtin.dnf:
    autoremove: true

- name: Clean DNF cache
  become: true
  ansible.builtin.shell:
    cmd: "dnf clean all"

# - name: Create rke2 user
#   ansible.builtin.user:
#     name: "{{ init_user_name }}"
#     uid: 1001
#     shell: /bin/bash
#     groups: wheel
#     append: true
#     create_home: true
#     password: "{{ init_user_password }}"
#   when: init_user_name is defined


# - name: Disable swap
#   ansible.builtin.command: "swapoff -a"
#   become: true
#   notify: Reboot if needed

- name: Remove swap line from /etc/fstab
  become: true
  lineinfile:
    path: /etc/fstab
    regexp: '^.*swap.*$'
    state: absent

- name: Ensure no swap is present in /etc/fstab
  mount:
    name: swap
    state: absent
    fstype: swap

# - name: Set SELinux to permissive
#   ansible.posix.selinux:
#     policy: targeted
#     state: permissive
#   become: true

- name: setenforce 0
  become: true
  ansible.builtin.shell:
    cmd: "setenforce 0"

- name: Update sysconfig selinux
  become: true
  ansible.builtin.shell:
    cmd: "sed -i 's/SELINUX=enforcing/SELINUX=permissive/g' /etc/selinux/config"
  # notify: Reboot if needed

# Create kubectl repo
- name: Create kubectl repo
  ansible.builtin.copy:
    content: |
      [kubernetes]
      name=Kubernetes
      baseurl=https://pkgs.k8s.io/core:/stable:/v1.30/rpm/
      enabled=1
      gpgcheck=1
      gpgkey=https://pkgs.k8s.io/core:/stable:/v1.30/rpm/repodata/repomd.xml.key
      exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni
    dest: /etc/yum.repos.d/kubernetes.repo
  become: true
  when: init_install_kubectl

# Determine if kubectl is installed
- name: Determine if kubectl is installed
  ansible.builtin.command:
    cmd: "which kubectl"
  register: kubectl_installed
  failed_when: false
  changed_when: false

# Install kubectl
- name: Install kubectl
  ansible.builtin.dnf:
    name: "kubectl"
    state: latest
    disable_excludes: kubernetes
  become: true
  when: init_install_kubectl and kubectl_installed.rc != 0

# Add alias for kubectl
- name: Create kube directory
  ansible.builtin.file:
    path: /home/{{ init_user_name }}/.kube
    state: directory
    owner: "{{ init_user_name }}"
    group: "{{ init_user_name }}"
    mode: "0755"
  when: init_install_kubectl

- name: Ensure ~/.bashrc.d directory exists
  file:
    path: "{{ ansible_env.HOME }}/.bashrc.d"
    state: directory
    mode: '0755'

- name: Create a Kubernetes alias file in ~/.bashrc.d/
  ansible.builtin.copy:
    dest: "{{ ansible_env.HOME }}/.bashrc.d/kubernetes_aliases"
    content: |
      alias k=kubectl
    mode: '0644'

# Install k9s
- name: Determine if k9s is installed
  ansible.builtin.command:
    cmd: "which k9s"
  register: k9s_installed
  failed_when: false
  changed_when: false
  when: init_install_k9s

- name: Download k9s RPM
  ansible.builtin.get_url:
    url: "https://github.com/derailed/k9s/releases/download/{{ init_k9s_version }}/k9s_linux_amd64.rpm"
    dest: "/home/{{ init_user_name }}/k9s_linux_amd64.rpm"
  when: init_install_k9s and k9s_installed.rc != 0

- name: Install k9s
  ansible.builtin.dnf:
    name: "/home/{{ init_user_name }}/k9s_linux_amd64.rpm"
    state: present
    disable_gpg_check: true
  become: true
  when: init_install_k9s and k9s_installed.rc != 0

# Clean up k9s RPM
- name: Clean up k9s RPM
  ansible.builtin.file:
    path: "/home/{{ init_user_name }}/k9s_linux_amd64.rpm"
    state: absent